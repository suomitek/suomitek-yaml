
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: istio-system
  name: cluster-local-gateway
  annotations:
    k8s.kuboard.cn/workload: cluster-local-gateway
    deployment.kubernetes.io/revision: '1'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"cluster-local-gateway","istio":"cluster-local-gateway","kustomize.component":"cluster-local-gateway"},"name":"cluster-local-gateway","namespace":"istio-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"cluster-local-gateway","istio":"cluster-local-gateway","kustomize.component":"cluster-local-gateway"}},"strategy":{"rollingUpdate":{"maxSurge":null,"maxUnavailable":null}},"template":{"metadata":{"annotations":{"sidecar.istio.io/inject":"false"},"labels":{"app":"cluster-local-gateway","istio":"cluster-local-gateway","kustomize.component":"cluster-local-gateway"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["ppc64le"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["s390x"]}]},"weight":2}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64","ppc64le","s390x"]}]}]}}},"containers":[{"args":["proxy","router","--domain","$(POD_NAMESPACE).svc.cluster.local","--log_output_level=default:info","--drainDuration","45s","--parentShutdownDuration","1m0s","--connectTimeout","10s","--serviceCluster","cluster-local-gateway","--zipkinAddress","zipkin.istio-system:9411","--proxyAdminPort","15000","--statusPort","15020","--controlPlaneAuthPolicy","NONE","--discoveryAddress","istio-pilot.istio-system:15010"],"env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"INSTANCE_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}},{"name":"HOST_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.hostIP"}}},{"name":"SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"ISTIO_META_POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"ISTIO_META_CONFIG_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"SDS_ENABLED","value":"false"},{"name":"ISTIO_META_WORKLOAD_NAME","value":"cluster-local-gateway"},{"name":"ISTIO_META_OWNER","value":"kubernetes://api/apps/v1/namespaces/istio-system/deployments/cluster-local-gateway"}],"image":"docker.io/istio/proxyv2:1.3.1","imagePullPolicy":"IfNotPresent","name":"istio-proxy","ports":[{"containerPort":80},{"containerPort":443},{"containerPort":31400},{"containerPort":15011},{"containerPort":8060},{"containerPort":15029},{"containerPort":15030},{"containerPort":15031},{"containerPort":15032},{"containerPort":15090,"name":"http-envoy-prom","protocol":"TCP"}],"readinessProbe":{"failureThreshold":30,"httpGet":{"path":"/healthz/ready","port":15020,"scheme":"HTTP"},"initialDelaySeconds":1,"periodSeconds":2,"successThreshold":1,"timeoutSeconds":1},"resources":{"requests":{"cpu":"10m"}},"volumeMounts":[{"mountPath":"/etc/certs","name":"istio-certs","readOnly":true},{"mountPath":"/etc/istio/clusterlocalgateway-certs","name":"clusterlocalgateway-certs","readOnly":true},{"mountPath":"/etc/istio/clusterlocalgateway-ca-certs","name":"clusterlocalgateway-ca-certs","readOnly":true}]}],"serviceAccountName":"cluster-local-gateway-service-account","volumes":[{"name":"istio-certs","secret":{"optional":true,"secretName":"istio.cluster-local-gateway-service-account"}},{"name":"clusterlocalgateway-certs","secret":{"optional":true,"secretName":"istio-clusterlocalgateway-certs"}},{"name":"clusterlocalgateway-ca-certs","secret":{"optional":true,"secretName":"istio-clusterlocalgateway-ca-certs"}}]}}}}
    k8s.kuboard.cn/service: ClusterIP
    k8s.kuboard.cn/ingress: 'false'
  labels:
    app: cluster-local-gateway
    istio: cluster-local-gateway
    kustomize.component: cluster-local-gateway
spec:
  selector:
    matchLabels:
      app: cluster-local-gateway
      istio: cluster-local-gateway
      kustomize.component: cluster-local-gateway
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        app: cluster-local-gateway
        istio: cluster-local-gateway
        kustomize.component: cluster-local-gateway
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      serviceAccountName: cluster-local-gateway-service-account
      initContainers: []
      containers:
        - image: 'docker.io/istio/proxyv2:1.3.1'
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          volumeMounts:
            - name: istio-certs
              readOnly: true
              mountPath: /etc/certs
            - name: clusterlocalgateway-certs
              readOnly: true
              mountPath: /etc/istio/clusterlocalgateway-certs
            - name: clusterlocalgateway-ca-certs
              readOnly: true
              mountPath: /etc/istio/clusterlocalgateway-ca-certs
          args:
            - proxy
            - router
            - '--domain'
            - $(POD_NAMESPACE).svc.cluster.local
            - '--log_output_level=default:info'
            - '--drainDuration'
            - 45s
            - '--parentShutdownDuration'
            - 1m0s
            - '--connectTimeout'
            - 10s
            - '--serviceCluster'
            - cluster-local-gateway
            - '--zipkinAddress'
            - 'zipkin.istio-system:9411'
            - '--proxyAdminPort'
            - '15000'
            - '--statusPort'
            - '15020'
            - '--controlPlaneAuthPolicy'
            - NONE
            - '--discoveryAddress'
            - 'istio-pilot.istio-system:15010'
          resources:
            requests:
              cpu: 10m
            limits:
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: ISTIO_META_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ISTIO_META_CONFIG_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SDS_ENABLED
              value: 'false'
            - name: ISTIO_META_WORKLOAD_NAME
              value: cluster-local-gateway
            - name: ISTIO_META_OWNER
              value: >-
                kubernetes://api/apps/v1/namespaces/istio-system/deployments/cluster-local-gateway
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            timeoutSeconds: 1
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 30
          lifecycle: {}
          ports:
            - containerPort: 80
              protocol: TCP
            - containerPort: 443
              protocol: TCP
            - containerPort: 31400
              protocol: TCP
            - containerPort: 15011
              protocol: TCP
            - containerPort: 8060
              protocol: TCP
            - containerPort: 15029
              protocol: TCP
            - containerPort: 15030
              protocol: TCP
            - containerPort: 15031
              protocol: TCP
            - containerPort: 15032
              protocol: TCP
            - name: http-envoy-prom
              containerPort: 15090
              protocol: TCP
      volumes:
        - name: istio-certs
          secret:
            secretName: istio.cluster-local-gateway-service-account
            defaultMode: 420
            optional: true
            items: []
        - name: clusterlocalgateway-certs
          secret:
            secretName: istio-clusterlocalgateway-certs
            defaultMode: 420
            optional: true
            items: []
        - name: clusterlocalgateway-ca-certs
          secret:
            secretName: istio-clusterlocalgateway-ca-certs
            defaultMode: 420
            optional: true
            items: []
      dnsPolicy: ClusterFirst
      dnsConfig:
        options: []
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  replicas: 1

---
apiVersion: v1
kind: Service
metadata:
  namespace: istio-system
  name: cluster-local-gateway
  annotations:
    k8s.kuboard.cn/workload: cluster-local-gateway
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"cluster-local-gateway","istio":"cluster-local-gateway","kustomize.component":"cluster-local-gateway"},"name":"cluster-local-gateway","namespace":"istio-system"},"spec":{"ports":[{"name":"http2","port":80,"targetPort":80},{"name":"https","port":443},{"name":"tcp","port":31400},{"name":"tcp-pilot-grpc-tls","port":15011,"targetPort":15011},{"name":"tcp-citadel-grpc-tls","port":8060,"targetPort":8060},{"name":"http2-kiali","port":15029,"targetPort":15029},{"name":"http2-prometheus","port":15030,"targetPort":15030},{"name":"http2-grafana","port":15031,"targetPort":15031},{"name":"http2-tracing","port":15032,"targetPort":15032}],"selector":{"app":"cluster-local-gateway","istio":"cluster-local-gateway","kustomize.component":"cluster-local-gateway"},"type":"ClusterIP"}}
  labels:
    app: cluster-local-gateway
    istio: cluster-local-gateway
    kustomize.component: cluster-local-gateway
spec:
  selector:
    app: cluster-local-gateway
    istio: cluster-local-gateway
    kustomize.component: cluster-local-gateway
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http2
      nodePort: 0
    - port: 443
      targetPort: 443
      protocol: TCP
      name: https
      nodePort: 0
    - port: 31400
      targetPort: 31400
      protocol: TCP
      name: tcp
      nodePort: 0
    - port: 15011
      targetPort: 15011
      protocol: TCP
      name: tcp-pilot-grpc-tls
      nodePort: 0
    - port: 8060
      targetPort: 8060
      protocol: TCP
      name: tcp-citadel-grpc-tls
      nodePort: 0
    - port: 15029
      targetPort: 15029
      protocol: TCP
      name: http2-kiali
      nodePort: 0
    - port: 15030
      targetPort: 15030
      protocol: TCP
      name: http2-prometheus
      nodePort: 0
    - port: 15031
      targetPort: 15031
      protocol: TCP
      name: http2-grafana
      nodePort: 0
    - port: 15032
      targetPort: 15032
      protocol: TCP
      name: http2-tracing
      nodePort: 0
  sessionAffinity: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: istio-system
  name: istio-citadel
  annotations:
    k8s.kuboard.cn/workload: istio-citadel
    deployment.kubernetes.io/revision: '1'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"security","istio":"citadel"},"name":"istio-citadel","namespace":"istio-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"istio":"citadel"}},"strategy":{"rollingUpdate":{"maxSurge":"100%","maxUnavailable":"25%"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/inject":"false"},"labels":{"app":"security","istio":"citadel"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["ppc64le"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["s390x"]}]},"weight":2}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64","ppc64le","s390x"]}]}]}}},"containers":[{"args":["--sds-enabled=true","--append-dns-names=true","--grpc-port=8060","--citadel-storage-namespace=istio-system","--custom-dns-names=istio-pilot-service-account.istio-system:istio-pilot.istio-system","--monitoring-port=15014","--self-signed-ca=true","--workload-cert-ttl=2160h"],"env":[{"name":"CITADEL_ENABLE_NAMESPACES_BY_DEFAULT","value":"true"}],"image":"gcr.io/istio-release/citadel:release-1.3-latest-daily","imagePullPolicy":"IfNotPresent","name":"citadel","resources":{"requests":{"cpu":"10m"}}}],"serviceAccountName":"istio-citadel-service-account"}}}}
    k8s.kuboard.cn/service: ClusterIP
    k8s.kuboard.cn/ingress: 'false'
  labels:
    istio: citadel
spec:
  selector:
    matchLabels:
      istio: citadel
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        istio: citadel
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      serviceAccountName: istio-citadel-service-account
      initContainers: []
      containers:
        - image: 'gcr.io/istio-release/citadel:release-1.3-latest-daily'
          imagePullPolicy: IfNotPresent
          name: citadel
          volumeMounts: []
          args:
            - '--sds-enabled=true'
            - '--append-dns-names=true'
            - '--grpc-port=8060'
            - '--citadel-storage-namespace=istio-system'
            - >-
              --custom-dns-names=istio-pilot-service-account.istio-system:istio-pilot.istio-system
            - '--monitoring-port=15014'
            - '--self-signed-ca=true'
            - '--workload-cert-ttl=2160h'
          resources:
            requests:
              cpu: 10m
            limits:
          env:
            - name: CITADEL_ENABLE_NAMESPACES_BY_DEFAULT
              value: 'true'
          lifecycle: {}
      volumes: []
      dnsPolicy: ClusterFirst
      dnsConfig:
        options: []
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 100%
  replicas: 1

---
apiVersion: v1
kind: Service
metadata:
  namespace: istio-system
  name: istio-citadel
  annotations:
    k8s.kuboard.cn/workload: istio-citadel
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"security","istio":"citadel"},"name":"istio-citadel","namespace":"istio-system"},"spec":{"ports":[{"name":"grpc-citadel","port":8060,"protocol":"TCP","targetPort":8060},{"name":"http-monitoring","port":15014}],"selector":{"istio":"citadel"}}}
  labels:
    istio: citadel
spec:
  selector:
    istio: citadel
  type: ClusterIP
  ports:
    - port: 8060
      targetPort: 8060
      protocol: TCP
      name: grpc-citadel
      nodePort: 0
    - port: 15014
      targetPort: 15014
      protocol: TCP
      name: http-monitoring
      nodePort: 0
  sessionAffinity: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: istio-system
  name: istio-galley
  annotations:
    k8s.kuboard.cn/workload: istio-galley
    deployment.kubernetes.io/revision: '1'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"galley","istio":"galley"},"name":"istio-galley","namespace":"istio-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"istio":"galley"}},"strategy":{"rollingUpdate":{"maxSurge":"100%","maxUnavailable":"25%"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/inject":"false"},"labels":{"app":"galley","istio":"galley"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["ppc64le"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["s390x"]}]},"weight":2}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64","ppc64le","s390x"]}]}]}}},"containers":[{"command":["/usr/local/bin/galley","server","--meshConfigFile=/etc/mesh-config/mesh","--livenessProbeInterval=1s","--livenessProbePath=/healthliveness","--readinessProbePath=/healthready","--readinessProbeInterval=1s","--deployment-namespace=istio-system","--insecure=false","--validation-webhook-config-file","/etc/config/validating-webhook-configuration.yaml","--monitoringPort=15014","--log_output_level=default:info"],"image":"gcr.io/istio-release/galley:release-1.3-latest-daily","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/usr/local/bin/galley","probe","--probe-path=/healthliveness","--interval=10s"]},"initialDelaySeconds":5,"periodSeconds":5},"name":"galley","ports":[{"containerPort":443},{"containerPort":15014},{"containerPort":9901}],"readinessProbe":{"exec":{"command":["/usr/local/bin/galley","probe","--probe-path=/healthready","--interval=10s"]},"initialDelaySeconds":5,"periodSeconds":5},"resources":{"requests":{"cpu":"10m"}},"volumeMounts":[{"mountPath":"/etc/certs","name":"certs","readOnly":true},{"mountPath":"/etc/config","name":"config","readOnly":true},{"mountPath":"/etc/mesh-config","name":"mesh-config","readOnly":true}]}],"serviceAccountName":"istio-galley-service-account","volumes":[{"name":"certs","secret":{"secretName":"istio.istio-galley-service-account"}},{"configMap":{"name":"istio-galley-configuration"},"name":"config"},{"configMap":{"name":"istio"},"name":"mesh-config"}]}}}}
    k8s.kuboard.cn/service: ClusterIP
    k8s.kuboard.cn/ingress: 'false'
  labels:
    istio: galley
spec:
  selector:
    matchLabels:
      istio: galley
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        istio: galley
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      serviceAccountName: istio-galley-service-account
      initContainers: []
      containers:
        - image: 'gcr.io/istio-release/galley:release-1.3-latest-daily'
          imagePullPolicy: IfNotPresent
          name: galley
          volumeMounts:
            - name: certs
              readOnly: true
              mountPath: /etc/certs
            - name: config
              readOnly: true
              mountPath: /etc/config
            - name: mesh-config
              readOnly: true
              mountPath: /etc/mesh-config
          command:
            - /usr/local/bin/galley
            - server
            - '--meshConfigFile=/etc/mesh-config/mesh'
            - '--livenessProbeInterval=1s'
            - '--livenessProbePath=/healthliveness'
            - '--readinessProbePath=/healthready'
            - '--readinessProbeInterval=1s'
            - '--deployment-namespace=istio-system'
            - '--insecure=false'
            - '--validation-webhook-config-file'
            - /etc/config/validating-webhook-configuration.yaml
            - '--monitoringPort=15014'
            - '--log_output_level=default:info'
          resources:
            requests:
              cpu: 10m
            limits:
          env: []
          readinessProbe:
            exec:
              command:
                - /usr/local/bin/galley
                - probe
                - '--probe-path=/healthready'
                - '--interval=10s'
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/galley
                - probe
                - '--probe-path=/healthliveness'
                - '--interval=10s'
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          lifecycle: {}
          ports:
            - containerPort: 443
              protocol: TCP
            - containerPort: 15014
              protocol: TCP
            - containerPort: 9901
              protocol: TCP
      volumes:
        - name: certs
          secret:
            secretName: istio.istio-galley-service-account
            defaultMode: 420
            items: []
        - name: config
          configMap:
            name: istio-galley-configuration
            defaultMode: 420
            items: []
        - name: mesh-config
          configMap:
            name: istio
            defaultMode: 420
            items: []
      dnsPolicy: ClusterFirst
      dnsConfig:
        options: []
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 100%
  replicas: 1

---
apiVersion: v1
kind: Service
metadata:
  namespace: istio-system
  name: istio-galley
  annotations:
    k8s.kuboard.cn/workload: istio-galley
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"galley","istio":"galley"},"name":"istio-galley","namespace":"istio-system"},"spec":{"ports":[{"name":"https-validation","port":443},{"name":"http-monitoring","port":15014},{"name":"grpc-mcp","port":9901}],"selector":{"istio":"galley"}}}
  labels:
    istio: galley
spec:
  selector:
    istio: galley
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 443
      protocol: TCP
      name: https-validation
      nodePort: 0
    - port: 15014
      targetPort: 15014
      protocol: TCP
      name: http-monitoring
      nodePort: 0
    - port: 9901
      targetPort: 9901
      protocol: TCP
      name: grpc-mcp
      nodePort: 0
  sessionAffinity: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: istio-system
  name: istio-ingressgateway
  annotations:
    k8s.kuboard.cn/workload: istio-ingressgateway
    deployment.kubernetes.io/revision: '1'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"istio-ingressgateway","istio":"ingressgateway"},"name":"istio-ingressgateway","namespace":"istio-system"},"spec":{"selector":{"matchLabels":{"app":"istio-ingressgateway","istio":"ingressgateway"}},"strategy":{"rollingUpdate":{"maxSurge":"100%","maxUnavailable":"25%"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/inject":"false"},"labels":{"app":"istio-ingressgateway","istio":"ingressgateway"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["ppc64le"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["s390x"]}]},"weight":2}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64","ppc64le","s390x"]}]}]}}},"containers":[{"args":["proxy","router","--domain","$(POD_NAMESPACE).svc.cluster.local","--log_output_level=default:info","--drainDuration","45s","--parentShutdownDuration","1m0s","--connectTimeout","10s","--serviceCluster","istio-ingressgateway","--zipkinAddress","zipkin:9411","--proxyAdminPort","15000","--statusPort","15020","--controlPlaneAuthPolicy","MUTUAL_TLS","--discoveryAddress","istio-pilot:15011"],"env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"INSTANCE_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}},{"name":"HOST_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.hostIP"}}},{"name":"SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"ISTIO_META_POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"ISTIO_META_CONFIG_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"SDS_ENABLED","value":"true"},{"name":"ISTIO_META_WORKLOAD_NAME","value":"istio-ingressgateway"},{"name":"ISTIO_META_OWNER","value":"kubernetes://api/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway"},{"name":"ISTIO_META_ROUTER_MODE","value":"sni-dnat"}],"image":"gcr.io/istio-release/proxyv2:release-1.3-latest-daily","imagePullPolicy":"IfNotPresent","name":"istio-proxy","ports":[{"containerPort":15020},{"containerPort":80},{"containerPort":443},{"containerPort":31400},{"containerPort":15029},{"containerPort":15030},{"containerPort":15031},{"containerPort":15032},{"containerPort":15443},{"containerPort":15090,"name":"http-envoy-prom","protocol":"TCP"}],"readinessProbe":{"failureThreshold":30,"httpGet":{"path":"/healthz/ready","port":15020,"scheme":"HTTP"},"initialDelaySeconds":1,"periodSeconds":2,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"volumeMounts":[{"mountPath":"/var/run/sds","name":"sdsudspath","readOnly":true},{"mountPath":"/var/run/secrets/tokens","name":"istio-token"},{"mountPath":"/etc/certs","name":"istio-certs","readOnly":true},{"mountPath":"/etc/istio/ingressgateway-certs","name":"ingressgateway-certs","readOnly":true},{"mountPath":"/etc/istio/ingressgateway-ca-certs","name":"ingressgateway-ca-certs","readOnly":true}]}],"serviceAccountName":"istio-ingressgateway-service-account","volumes":[{"hostPath":{"path":"/var/run/sds"},"name":"sdsudspath"},{"name":"istio-token","projected":{"sources":[{"serviceAccountToken":{"audience":"istio-ca","expirationSeconds":43200,"path":"istio-token"}}]}},{"name":"istio-certs","secret":{"optional":true,"secretName":"istio.istio-ingressgateway-service-account"}},{"name":"ingressgateway-certs","secret":{"optional":true,"secretName":"istio-ingressgateway-certs"}},{"name":"ingressgateway-ca-certs","secret":{"optional":true,"secretName":"istio-ingressgateway-ca-certs"}}]}}}}
    k8s.kuboard.cn/service: NodePort
    k8s.kuboard.cn/ingress: 'false'
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        app: istio-ingressgateway
        istio: ingressgateway
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      serviceAccountName: istio-ingressgateway-service-account
      initContainers: []
      containers:
        - image: 'gcr.io/istio-release/proxyv2:release-1.3-latest-daily'
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          volumeMounts:
            - name: sdsudspath
              readOnly: true
              mountPath: /var/run/sds
            - name: istio-token
              mountPath: /var/run/secrets/tokens
            - name: istio-certs
              readOnly: true
              mountPath: /etc/certs
            - name: ingressgateway-certs
              readOnly: true
              mountPath: /etc/istio/ingressgateway-certs
            - name: ingressgateway-ca-certs
              readOnly: true
              mountPath: /etc/istio/ingressgateway-ca-certs
          args:
            - proxy
            - router
            - '--domain'
            - $(POD_NAMESPACE).svc.cluster.local
            - '--log_output_level=default:info'
            - '--drainDuration'
            - 45s
            - '--parentShutdownDuration'
            - 1m0s
            - '--connectTimeout'
            - 10s
            - '--serviceCluster'
            - istio-ingressgateway
            - '--zipkinAddress'
            - 'zipkin:9411'
            - '--proxyAdminPort'
            - '15000'
            - '--statusPort'
            - '15020'
            - '--controlPlaneAuthPolicy'
            - MUTUAL_TLS
            - '--discoveryAddress'
            - 'istio-pilot:15011'
          resources:
            limits:
              cpu: '2'
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: ISTIO_META_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ISTIO_META_CONFIG_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SDS_ENABLED
              value: 'true'
            - name: ISTIO_META_WORKLOAD_NAME
              value: istio-ingressgateway
            - name: ISTIO_META_OWNER
              value: >-
                kubernetes://api/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway
            - name: ISTIO_META_ROUTER_MODE
              value: sni-dnat
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            timeoutSeconds: 1
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 30
          lifecycle: {}
          ports:
            - containerPort: 15020
              protocol: TCP
            - containerPort: 80
              protocol: TCP
            - containerPort: 443
              protocol: TCP
            - containerPort: 31400
              protocol: TCP
            - containerPort: 15029
              protocol: TCP
            - containerPort: 15030
              protocol: TCP
            - containerPort: 15031
              protocol: TCP
            - containerPort: 15032
              protocol: TCP
            - containerPort: 15443
              protocol: TCP
            - name: http-envoy-prom
              containerPort: 15090
              protocol: TCP
      volumes:
        - name: sdsudspath
          hostPath:
            path: /var/run/sds
            type: ''
        - name: istio-token
        - name: istio-certs
          secret:
            secretName: istio.istio-ingressgateway-service-account
            defaultMode: 420
            optional: true
            items: []
        - name: ingressgateway-certs
          secret:
            secretName: istio-ingressgateway-certs
            defaultMode: 420
            optional: true
            items: []
        - name: ingressgateway-ca-certs
          secret:
            secretName: istio-ingressgateway-ca-certs
            defaultMode: 420
            optional: true
            items: []
      dnsPolicy: ClusterFirst
      dnsConfig:
        options: []
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 100%
  replicas: 1

---
apiVersion: v1
kind: Service
metadata:
  namespace: istio-system
  name: istio-ingressgateway
  annotations:
    k8s.kuboard.cn/workload: istio-ingressgateway
    beta.cloud.google.com/backend-config: '{"ports": {"http2":"iap-backendconfig"}}'
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"beta.cloud.google.com/backend-config":"{\"ports\":
      {\"http2\":\"iap-backendconfig\"}}"},"labels":{"app":"istio-ingressgateway","istio":"ingressgateway"},"name":"istio-ingressgateway","namespace":"istio-system"},"spec":{"ports":[{"name":"status-port","port":15020,"targetPort":15020},{"name":"http2","nodePort":31380,"port":80,"targetPort":80},{"name":"https","nodePort":31390,"port":443},{"name":"tcp","nodePort":31400,"port":31400},{"name":"https-kiali","port":15029,"targetPort":15029},{"name":"https-prometheus","port":15030,"targetPort":15030},{"name":"https-grafana","port":15031,"targetPort":15031},{"name":"https-tracing","port":15032,"targetPort":15032},{"name":"tls","port":15443,"targetPort":15443}],"selector":{"app":"istio-ingressgateway","istio":"ingressgateway"},"type":"NodePort"}}
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
spec:
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
  type: NodePort
  ports:
    - port: 15020
      targetPort: 15020
      protocol: TCP
      name: status-port
      nodePort: 31831
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http2
      nodePort: 31380
    - port: 443
      targetPort: 443
      protocol: TCP
      name: https
      nodePort: 31390
    - port: 31400
      targetPort: 31400
      protocol: TCP
      name: tcp
      nodePort: 31400
    - port: 15029
      targetPort: 15029
      protocol: TCP
      name: https-kiali
      nodePort: 30599
    - port: 15030
      targetPort: 15030
      protocol: TCP
      name: https-prometheus
      nodePort: 30639
    - port: 15031
      targetPort: 15031
      protocol: TCP
      name: https-grafana
      nodePort: 31591
    - port: 15032
      targetPort: 15032
      protocol: TCP
      name: https-tracing
      nodePort: 31452
    - port: 15443
      targetPort: 15443
      protocol: TCP
      name: tls
      nodePort: 31059
  sessionAffinity: None

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: istio-system
  name: istio-nodeagent
  annotations:
    k8s.kuboard.cn/workload: istio-nodeagent
    deprecated.daemonset.template.generation: '1'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"app":"nodeagent","istio":"nodeagent"},"name":"istio-nodeagent","namespace":"istio-system"},"spec":{"selector":{"matchLabels":{"istio":"nodeagent"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/inject":"false"},"labels":{"app":"nodeagent","istio":"nodeagent"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["ppc64le"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["s390x"]}]},"weight":2}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64","ppc64le","s390x"]}]}]}}},"containers":[{"env":[{"name":"CA_ADDR","value":"istio-citadel:8060"},{"name":"CA_PROVIDER","value":"Citadel"},{"name":"PLUGINS","value":""},{"name":"VALID_TOKEN","value":"true"},{"name":"TRUST_DOMAIN","value":""},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"gcr.io/istio-release/node-agent-k8s:release-1.3-latest-daily","imagePullPolicy":"IfNotPresent","name":"nodeagent","volumeMounts":[{"mountPath":"/var/run/sds","name":"sdsudspath"}]}],"serviceAccountName":"istio-nodeagent-service-account","tolerations":[{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/run/sds"},"name":"sdsudspath"}]}},"updateStrategy":{"type":"RollingUpdate"}}}
    k8s.kuboard.cn/service: none
    k8s.kuboard.cn/ingress: 'false'
  labels:
    istio: nodeagent
spec:
  selector:
    matchLabels:
      istio: nodeagent
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        istio: nodeagent
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      serviceAccountName: istio-nodeagent-service-account
      initContainers: []
      containers:
        - image: 'gcr.io/istio-release/node-agent-k8s:release-1.3-latest-daily'
          imagePullPolicy: IfNotPresent
          name: nodeagent
          volumeMounts:
            - name: sdsudspath
              mountPath: /var/run/sds
          resources:
            limits:
            requests:
          env:
            - name: CA_ADDR
              value: 'istio-citadel:8060'
            - name: CA_PROVIDER
              value: Citadel
            - name: VALID_TOKEN
              value: 'true'
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          lifecycle: {}
      volumes:
        - name: sdsudspath
          hostPath:
            path: /var/run/sds
            type: ''
      dnsPolicy: ClusterFirst
      dnsConfig:
        options: []
      tolerations:
        - operator: Exists
          effect: NoExecute
        - operator: Exists
          effect: NoSchedule
      terminationGracePeriodSeconds: 30

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: istio-system
  name: istio-pilot
  annotations:
    k8s.kuboard.cn/workload: istio-pilot
    checksum/config-volume: f8da08b6b8c170dde721efd680270b2901e750d4aa186ebb6c22bef5b78a43f9
    deployment.kubernetes.io/revision: '1'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"checksum/config-volume":"f8da08b6b8c170dde721efd680270b2901e750d4aa186ebb6c22bef5b78a43f9"},"labels":{"app":"pilot","istio":"pilot"},"name":"istio-pilot","namespace":"istio-system"},"spec":{"selector":{"matchLabels":{"istio":"pilot"}},"strategy":{"rollingUpdate":{"maxSurge":"100%","maxUnavailable":"25%"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/inject":"false"},"labels":{"app":"pilot","istio":"pilot"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["ppc64le"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["s390x"]}]},"weight":2}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64","ppc64le","s390x"]}]}]}}},"containers":[{"args":["discovery","--monitoringAddr=:15014","--log_output_level=default:info","--domain","cluster.local","--secureGrpcAddr","","--keepaliveMaxServerConnectionAge","30m"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"GODEBUG","value":"gctrace=1"},{"name":"PILOT_PUSH_THROTTLE","value":"100"},{"name":"PILOT_TRACE_SAMPLING","value":"1"},{"name":"PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND","value":"true"},{"name":"PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND","value":"false"}],"image":"gcr.io/istio-release/pilot:release-1.3-latest-daily","imagePullPolicy":"IfNotPresent","name":"discovery","ports":[{"containerPort":8080},{"containerPort":15010}],"readinessProbe":{"httpGet":{"path":"/ready","port":8080},"initialDelaySeconds":5,"periodSeconds":30,"timeoutSeconds":5},"resources":{"requests":{"cpu":"500m","memory":"2048Mi"}},"volumeMounts":[{"mountPath":"/etc/istio/config","name":"config-volume"},{"mountPath":"/etc/certs","name":"istio-certs","readOnly":true}]},{"args":["proxy","--domain","$(POD_NAMESPACE).svc.cluster.local","--serviceCluster","istio-pilot","--templateFile","/etc/istio/proxy/envoy_pilot.yaml.tmpl","--controlPlaneAuthPolicy","MUTUAL_TLS"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"INSTANCE_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}},{"name":"SDS_ENABLED","value":"true"}],"image":"gcr.io/istio-release/proxyv2:release-1.3-latest-daily","imagePullPolicy":"IfNotPresent","name":"istio-proxy","ports":[{"containerPort":15003},{"containerPort":15005},{"containerPort":15007},{"containerPort":15011}],"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"volumeMounts":[{"mountPath":"/etc/certs","name":"istio-certs","readOnly":true},{"mountPath":"/var/run/sds","name":"sds-uds-path","readOnly":true},{"mountPath":"/var/run/secrets/tokens","name":"istio-token"}]}],"serviceAccountName":"istio-pilot-service-account","volumes":[{"hostPath":{"path":"/var/run/sds"},"name":"sds-uds-path"},{"name":"istio-token","projected":{"sources":[{"serviceAccountToken":{"audience":"istio-ca","expirationSeconds":43200,"path":"istio-token"}}]}},{"configMap":{"name":"istio"},"name":"config-volume"},{"name":"istio-certs","secret":{"optional":true,"secretName":"istio.istio-pilot-service-account"}}]}}}}
    k8s.kuboard.cn/service: ClusterIP
    k8s.kuboard.cn/ingress: 'false'
  labels:
    istio: pilot
spec:
  selector:
    matchLabels:
      istio: pilot
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        istio: pilot
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      serviceAccountName: istio-pilot-service-account
      initContainers: []
      containers:
        - image: 'gcr.io/istio-release/pilot:release-1.3-latest-daily'
          imagePullPolicy: IfNotPresent
          name: discovery
          volumeMounts:
            - name: config-volume
              mountPath: /etc/istio/config
            - name: istio-certs
              readOnly: true
              mountPath: /etc/certs
          args:
            - discovery
            - '--monitoringAddr=:15014'
            - '--log_output_level=default:info'
            - '--domain'
            - cluster.local
            - '--secureGrpcAddr'
            - ''
            - '--keepaliveMaxServerConnectionAge'
            - 30m
          resources:
            requests:
              cpu: 500m
              memory: 2Gi
            limits:
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: GODEBUG
              value: gctrace=1
            - name: PILOT_PUSH_THROTTLE
              value: '100'
            - name: PILOT_TRACE_SAMPLING
              value: '1'
            - name: PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND
              value: 'true'
            - name: PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND
              value: 'false'
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          lifecycle: {}
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 15010
              protocol: TCP
        - image: 'gcr.io/istio-release/proxyv2:release-1.3-latest-daily'
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          volumeMounts:
            - name: istio-certs
              readOnly: true
              mountPath: /etc/certs
            - name: sds-uds-path
              readOnly: true
              mountPath: /var/run/sds
            - name: istio-token
              mountPath: /var/run/secrets/tokens
          args:
            - proxy
            - '--domain'
            - $(POD_NAMESPACE).svc.cluster.local
            - '--serviceCluster'
            - istio-pilot
            - '--templateFile'
            - /etc/istio/proxy/envoy_pilot.yaml.tmpl
            - '--controlPlaneAuthPolicy'
            - MUTUAL_TLS
          resources:
            limits:
              cpu: '2'
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SDS_ENABLED
              value: 'true'
          lifecycle: {}
          ports:
            - containerPort: 15003
              protocol: TCP
            - containerPort: 15005
              protocol: TCP
            - containerPort: 15007
              protocol: TCP
            - containerPort: 15011
              protocol: TCP
      volumes:
        - name: sds-uds-path
          hostPath:
            path: /var/run/sds
            type: ''
        - name: istio-token
        - name: config-volume
          configMap:
            name: istio
            defaultMode: 420
            items: []
        - name: istio-certs
          secret:
            secretName: istio.istio-pilot-service-account
            defaultMode: 420
            optional: true
            items: []
      dnsPolicy: ClusterFirst
      dnsConfig:
        options: []
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 100%
  replicas: 1

---
apiVersion: v1
kind: Service
metadata:
  namespace: istio-system
  name: istio-pilot
  annotations:
    k8s.kuboard.cn/workload: istio-pilot
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"pilot","istio":"pilot"},"name":"istio-pilot","namespace":"istio-system"},"spec":{"ports":[{"name":"grpc-xds","port":15010},{"name":"https-xds","port":15011},{"name":"http-legacy-discovery","port":8080},{"name":"http-monitoring","port":15014}],"selector":{"istio":"pilot"}}}
  labels:
    istio: pilot
spec:
  selector:
    istio: pilot
  type: ClusterIP
  ports:
    - port: 15010
      targetPort: 15010
      protocol: TCP
      name: grpc-xds
      nodePort: 0
    - port: 15011
      targetPort: 15011
      protocol: TCP
      name: https-xds
      nodePort: 0
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http-legacy-discovery
      nodePort: 0
    - port: 15014
      targetPort: 15014
      protocol: TCP
      name: http-monitoring
      nodePort: 0
  sessionAffinity: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: istio-system
  name: istio-policy
  annotations:
    k8s.kuboard.cn/workload: istio-policy
    deployment.kubernetes.io/revision: '1'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"istio-mixer","istio":"mixer"},"name":"istio-policy","namespace":"istio-system"},"spec":{"selector":{"matchLabels":{"istio":"mixer","istio-mixer-type":"policy"}},"strategy":{"rollingUpdate":{"maxSurge":"100%","maxUnavailable":"25%"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/inject":"false"},"labels":{"app":"policy","istio":"mixer","istio-mixer-type":"policy"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["ppc64le"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["s390x"]}]},"weight":2}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64","ppc64le","s390x"]}]}]}}},"containers":[{"args":["--monitoringPort=15014","--address","unix:///sock/mixer.socket","--log_output_level=default:info","--configStoreURL=mcps://istio-galley.istio-system.svc:9901","--configDefaultNamespace=istio-system","--useAdapterCRDs=false","--useTemplateCRDs=false","--trace_zipkin_url=http://zipkin.istio-system:9411/api/v1/spans"],"env":[{"name":"GODEBUG","value":"gctrace=1"},{"name":"GOMAXPROCS","value":"6"}],"image":"gcr.io/istio-release/mixer:release-1.3-latest-daily","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/version","port":15014},"initialDelaySeconds":5,"periodSeconds":5},"name":"mixer","ports":[{"containerPort":15014},{"containerPort":42422}],"resources":{"requests":{"cpu":"10m"}},"volumeMounts":[{"mountPath":"/etc/certs","name":"istio-certs","readOnly":true},{"mountPath":"/sock","name":"uds-socket"}]},{"args":["proxy","--domain","$(POD_NAMESPACE).svc.cluster.local","--serviceCluster","istio-policy","--templateFile","/etc/istio/proxy/envoy_policy.yaml.tmpl","--controlPlaneAuthPolicy","MUTUAL_TLS"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"INSTANCE_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}},{"name":"SDS_ENABLED","value":"true"}],"image":"gcr.io/istio-release/proxyv2:release-1.3-latest-daily","imagePullPolicy":"IfNotPresent","name":"istio-proxy","ports":[{"containerPort":9091},{"containerPort":15004},{"containerPort":15090,"name":"http-envoy-prom","protocol":"TCP"}],"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"volumeMounts":[{"mountPath":"/etc/certs","name":"istio-certs","readOnly":true},{"mountPath":"/var/run/sds","name":"sds-uds-path","readOnly":true},{"mountPath":"/var/run/secrets/tokens","name":"istio-token"},{"mountPath":"/sock","name":"uds-socket"},{"mountPath":"/var/run/secrets/istio.io/policy/adapter","name":"policy-adapter-secret","readOnly":true}]}],"serviceAccountName":"istio-mixer-service-account","volumes":[{"name":"istio-certs","secret":{"optional":true,"secretName":"istio.istio-mixer-service-account"}},{"hostPath":{"path":"/var/run/sds"},"name":"sds-uds-path"},{"name":"istio-token","projected":{"sources":[{"serviceAccountToken":{"audience":"istio-ca","expirationSeconds":43200,"path":"istio-token"}}]}},{"name":"uds-socket"},{"name":"policy-adapter-secret","secret":{"optional":true,"secretName":"policy-adapter-secret"}}]}}}}
    k8s.kuboard.cn/service: ClusterIP
    k8s.kuboard.cn/ingress: 'false'
  labels:
    istio: mixer
    istio-mixer-type: policy
spec:
  selector:
    matchLabels:
      istio: mixer
      istio-mixer-type: policy
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        istio: mixer
        istio-mixer-type: policy
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      serviceAccountName: istio-mixer-service-account
      initContainers: []
      containers:
        - image: 'gcr.io/istio-release/mixer:release-1.3-latest-daily'
          imagePullPolicy: IfNotPresent
          name: mixer
          volumeMounts:
            - name: istio-certs
              readOnly: true
              mountPath: /etc/certs
            - name: uds-socket
              mountPath: /sock
          args:
            - '--monitoringPort=15014'
            - '--address'
            - 'unix:///sock/mixer.socket'
            - '--log_output_level=default:info'
            - '--configStoreURL=mcps://istio-galley.istio-system.svc:9901'
            - '--configDefaultNamespace=istio-system'
            - '--useAdapterCRDs=false'
            - '--useTemplateCRDs=false'
            - '--trace_zipkin_url=http://zipkin.istio-system:9411/api/v1/spans'
          resources:
            requests:
              cpu: 10m
            limits:
          env:
            - name: GODEBUG
              value: gctrace=1
            - name: GOMAXPROCS
              value: '6'
          livenessProbe:
            httpGet:
              path: /version
              port: 15014
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          lifecycle: {}
          ports:
            - containerPort: 15014
              protocol: TCP
            - containerPort: 42422
              protocol: TCP
        - image: 'gcr.io/istio-release/proxyv2:release-1.3-latest-daily'
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          volumeMounts:
            - name: istio-certs
              readOnly: true
              mountPath: /etc/certs
            - name: sds-uds-path
              readOnly: true
              mountPath: /var/run/sds
            - name: istio-token
              mountPath: /var/run/secrets/tokens
            - name: uds-socket
              mountPath: /sock
            - name: policy-adapter-secret
              readOnly: true
              mountPath: /var/run/secrets/istio.io/policy/adapter
          args:
            - proxy
            - '--domain'
            - $(POD_NAMESPACE).svc.cluster.local
            - '--serviceCluster'
            - istio-policy
            - '--templateFile'
            - /etc/istio/proxy/envoy_policy.yaml.tmpl
            - '--controlPlaneAuthPolicy'
            - MUTUAL_TLS
          resources:
            limits:
              cpu: '2'
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SDS_ENABLED
              value: 'true'
          lifecycle: {}
          ports:
            - containerPort: 9091
              protocol: TCP
            - containerPort: 15004
              protocol: TCP
            - name: http-envoy-prom
              containerPort: 15090
              protocol: TCP
      volumes:
        - name: istio-certs
          secret:
            secretName: istio.istio-mixer-service-account
            defaultMode: 420
            optional: true
            items: []
        - name: sds-uds-path
          hostPath:
            path: /var/run/sds
            type: ''
        - name: istio-token
        - name: uds-socket
          emptyDir: {}
        - name: policy-adapter-secret
          secret:
            secretName: policy-adapter-secret
            defaultMode: 420
            optional: true
            items: []
      dnsPolicy: ClusterFirst
      dnsConfig:
        options: []
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 100%
  replicas: 1

---
apiVersion: v1
kind: Service
metadata:
  namespace: istio-system
  name: istio-policy
  annotations:
    k8s.kuboard.cn/workload: istio-policy
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"networking.istio.io/exportTo":"*"},"labels":{"app":"mixer","istio":"mixer"},"name":"istio-policy","namespace":"istio-system"},"spec":{"ports":[{"name":"grpc-mixer","port":9091},{"name":"grpc-mixer-mtls","port":15004},{"name":"http-monitoring","port":15014}],"selector":{"istio":"mixer","istio-mixer-type":"policy"}}}
    networking.istio.io/exportTo: '*'
  labels:
    istio: mixer
    istio-mixer-type: policy
spec:
  selector:
    istio: mixer
    istio-mixer-type: policy
  type: ClusterIP
  ports:
    - port: 9091
      targetPort: 9091
      protocol: TCP
      name: grpc-mixer
      nodePort: 0
    - port: 15004
      targetPort: 15004
      protocol: TCP
      name: grpc-mixer-mtls
      nodePort: 0
    - port: 15014
      targetPort: 15014
      protocol: TCP
      name: http-monitoring
      nodePort: 0
  sessionAffinity: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: istio-system
  name: istio-sidecar-injector
  annotations:
    k8s.kuboard.cn/workload: istio-sidecar-injector
    deployment.kubernetes.io/revision: '1'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"sidecarInjectorWebhook","istio":"sidecar-injector"},"name":"istio-sidecar-injector","namespace":"istio-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"istio":"sidecar-injector"}},"strategy":{"rollingUpdate":{"maxSurge":"100%","maxUnavailable":"25%"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/inject":"false"},"labels":{"app":"sidecarInjectorWebhook","istio":"sidecar-injector"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["ppc64le"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["s390x"]}]},"weight":2}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64","ppc64le","s390x"]}]}]}}},"containers":[{"args":["--caCertFile=/etc/istio/certs/root-cert.pem","--tlsCertFile=/etc/istio/certs/cert-chain.pem","--tlsKeyFile=/etc/istio/certs/key.pem","--injectConfig=/etc/istio/inject/config","--meshConfig=/etc/istio/config/mesh","--healthCheckInterval=2s","--healthCheckFile=/health"],"image":"gcr.io/istio-release/sidecar_injector:release-1.3-latest-daily","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/usr/local/bin/sidecar-injector","probe","--probe-path=/health","--interval=4s"]},"initialDelaySeconds":4,"periodSeconds":4},"name":"sidecar-injector-webhook","readinessProbe":{"exec":{"command":["/usr/local/bin/sidecar-injector","probe","--probe-path=/health","--interval=4s"]},"initialDelaySeconds":4,"periodSeconds":4},"resources":{"requests":{"cpu":"10m"}},"volumeMounts":[{"mountPath":"/etc/istio/config","name":"config-volume","readOnly":true},{"mountPath":"/etc/istio/certs","name":"certs","readOnly":true},{"mountPath":"/etc/istio/inject","name":"inject-config","readOnly":true}]}],"serviceAccountName":"istio-sidecar-injector-service-account","volumes":[{"configMap":{"name":"istio"},"name":"config-volume"},{"name":"certs","secret":{"secretName":"istio.istio-sidecar-injector-service-account"}},{"configMap":{"items":[{"key":"config","path":"config"},{"key":"values","path":"values"}],"name":"istio-sidecar-injector"},"name":"inject-config"}]}}}}
    k8s.kuboard.cn/service: ClusterIP
    k8s.kuboard.cn/ingress: 'false'
  labels:
    istio: sidecar-injector
spec:
  selector:
    matchLabels:
      istio: sidecar-injector
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        istio: sidecar-injector
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      serviceAccountName: istio-sidecar-injector-service-account
      initContainers: []
      containers:
        - image: 'gcr.io/istio-release/sidecar_injector:release-1.3-latest-daily'
          imagePullPolicy: IfNotPresent
          name: sidecar-injector-webhook
          volumeMounts:
            - name: config-volume
              readOnly: true
              mountPath: /etc/istio/config
            - name: certs
              readOnly: true
              mountPath: /etc/istio/certs
            - name: inject-config
              readOnly: true
              mountPath: /etc/istio/inject
          args:
            - '--caCertFile=/etc/istio/certs/root-cert.pem'
            - '--tlsCertFile=/etc/istio/certs/cert-chain.pem'
            - '--tlsKeyFile=/etc/istio/certs/key.pem'
            - '--injectConfig=/etc/istio/inject/config'
            - '--meshConfig=/etc/istio/config/mesh'
            - '--healthCheckInterval=2s'
            - '--healthCheckFile=/health'
          resources:
            requests:
              cpu: 10m
            limits:
          env: []
          readinessProbe:
            exec:
              command:
                - /usr/local/bin/sidecar-injector
                - probe
                - '--probe-path=/health'
                - '--interval=4s'
            initialDelaySeconds: 4
            timeoutSeconds: 1
            periodSeconds: 4
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/sidecar-injector
                - probe
                - '--probe-path=/health'
                - '--interval=4s'
            initialDelaySeconds: 4
            timeoutSeconds: 1
            periodSeconds: 4
            successThreshold: 1
            failureThreshold: 3
          lifecycle: {}
      volumes:
        - name: config-volume
          configMap:
            name: istio
            defaultMode: 420
            items: []
        - name: certs
          secret:
            secretName: istio.istio-sidecar-injector-service-account
            defaultMode: 420
            items: []
        - name: inject-config
          configMap:
            name: istio-sidecar-injector
            items:
              - key: config
                path: config
              - key: values
                path: values
            defaultMode: 420
      dnsPolicy: ClusterFirst
      dnsConfig:
        options: []
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 100%
  replicas: 1

---
apiVersion: v1
kind: Service
metadata:
  namespace: istio-system
  name: istio-sidecar-injector
  annotations:
    k8s.kuboard.cn/workload: istio-sidecar-injector
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"sidecarInjectorWebhook","istio":"sidecar-injector"},"name":"istio-sidecar-injector","namespace":"istio-system"},"spec":{"ports":[{"name":"https-inject","port":443},{"name":"http-monitoring","port":15014}],"selector":{"istio":"sidecar-injector"}}}
  labels:
    istio: sidecar-injector
spec:
  selector:
    istio: sidecar-injector
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 443
      protocol: TCP
      name: https-inject
      nodePort: 0
    - port: 15014
      targetPort: 15014
      protocol: TCP
      name: http-monitoring
      nodePort: 0
  sessionAffinity: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: istio-system
  name: istio-telemetry
  annotations:
    k8s.kuboard.cn/workload: istio-telemetry
    deployment.kubernetes.io/revision: '1'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"istio-mixer","istio":"mixer"},"name":"istio-telemetry","namespace":"istio-system"},"spec":{"selector":{"matchLabels":{"istio":"mixer","istio-mixer-type":"telemetry"}},"strategy":{"rollingUpdate":{"maxSurge":"100%","maxUnavailable":"25%"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/inject":"false"},"labels":{"app":"telemetry","istio":"mixer","istio-mixer-type":"telemetry"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["ppc64le"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["s390x"]}]},"weight":2}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64","ppc64le","s390x"]}]}]}}},"containers":[{"args":["--monitoringPort=15014","--address","unix:///sock/mixer.socket","--log_output_level=default:info","--configStoreURL=mcps://istio-galley.istio-system.svc:9901","--certFile=/etc/certs/cert-chain.pem","--keyFile=/etc/certs/key.pem","--caCertFile=/etc/certs/root-cert.pem","--configDefaultNamespace=istio-system","--useAdapterCRDs=false","--trace_zipkin_url=http://zipkin.istio-system:9411/api/v1/spans","--averageLatencyThreshold","100ms","--loadsheddingMode","enforce"],"env":[{"name":"GODEBUG","value":"gctrace=1"},{"name":"GOMAXPROCS","value":"6"}],"image":"gcr.io/istio-release/mixer:release-1.3-latest-daily","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/version","port":15014},"initialDelaySeconds":5,"periodSeconds":5},"name":"mixer","ports":[{"containerPort":15014},{"containerPort":42422}],"resources":{"limits":{"cpu":"4800m","memory":"4G"},"requests":{"cpu":"1000m","memory":"1G"}},"volumeMounts":[{"mountPath":"/etc/certs","name":"istio-certs","readOnly":true},{"mountPath":"/var/run/secrets/istio.io/telemetry/adapter","name":"telemetry-adapter-secret","readOnly":true},{"mountPath":"/sock","name":"uds-socket"}]},{"args":["proxy","--domain","$(POD_NAMESPACE).svc.cluster.local","--serviceCluster","istio-telemetry","--templateFile","/etc/istio/proxy/envoy_telemetry.yaml.tmpl","--controlPlaneAuthPolicy","MUTUAL_TLS"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"INSTANCE_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}},{"name":"SDS_ENABLED","value":"true"}],"image":"gcr.io/istio-release/proxyv2:release-1.3-latest-daily","imagePullPolicy":"IfNotPresent","name":"istio-proxy","ports":[{"containerPort":9091},{"containerPort":15004},{"containerPort":15090,"name":"http-envoy-prom","protocol":"TCP"}],"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"volumeMounts":[{"mountPath":"/etc/certs","name":"istio-certs","readOnly":true},{"mountPath":"/var/run/sds","name":"sds-uds-path","readOnly":true},{"mountPath":"/var/run/secrets/tokens","name":"istio-token"},{"mountPath":"/sock","name":"uds-socket"}]}],"serviceAccountName":"istio-mixer-service-account","volumes":[{"name":"istio-certs","secret":{"optional":true,"secretName":"istio.istio-mixer-service-account"}},{"hostPath":{"path":"/var/run/sds"},"name":"sds-uds-path"},{"name":"istio-token","projected":{"sources":[{"serviceAccountToken":{"audience":"istio-ca","expirationSeconds":43200,"path":"istio-token"}}]}},{"name":"uds-socket"},{"name":"telemetry-adapter-secret","secret":{"optional":true,"secretName":"telemetry-adapter-secret"}}]}}}}
    k8s.kuboard.cn/service: ClusterIP
    k8s.kuboard.cn/ingress: 'false'
  labels:
    istio: mixer
    istio-mixer-type: telemetry
spec:
  selector:
    matchLabels:
      istio: mixer
      istio-mixer-type: telemetry
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        istio: mixer
        istio-mixer-type: telemetry
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      serviceAccountName: istio-mixer-service-account
      initContainers: []
      containers:
        - image: 'gcr.io/istio-release/mixer:release-1.3-latest-daily'
          imagePullPolicy: IfNotPresent
          name: mixer
          volumeMounts:
            - name: istio-certs
              readOnly: true
              mountPath: /etc/certs
            - name: telemetry-adapter-secret
              readOnly: true
              mountPath: /var/run/secrets/istio.io/telemetry/adapter
            - name: uds-socket
              mountPath: /sock
          args:
            - '--monitoringPort=15014'
            - '--address'
            - 'unix:///sock/mixer.socket'
            - '--log_output_level=default:info'
            - '--configStoreURL=mcps://istio-galley.istio-system.svc:9901'
            - '--certFile=/etc/certs/cert-chain.pem'
            - '--keyFile=/etc/certs/key.pem'
            - '--caCertFile=/etc/certs/root-cert.pem'
            - '--configDefaultNamespace=istio-system'
            - '--useAdapterCRDs=false'
            - '--trace_zipkin_url=http://zipkin.istio-system:9411/api/v1/spans'
            - '--averageLatencyThreshold'
            - 100ms
            - '--loadsheddingMode'
            - enforce
          resources:
            limits:
              cpu: 4800m
              memory: 4G
            requests:
              cpu: '1'
              memory: 1G
          env:
            - name: GODEBUG
              value: gctrace=1
            - name: GOMAXPROCS
              value: '6'
          livenessProbe:
            httpGet:
              path: /version
              port: 15014
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          lifecycle: {}
          ports:
            - containerPort: 15014
              protocol: TCP
            - containerPort: 42422
              protocol: TCP
        - image: 'gcr.io/istio-release/proxyv2:release-1.3-latest-daily'
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          volumeMounts:
            - name: istio-certs
              readOnly: true
              mountPath: /etc/certs
            - name: sds-uds-path
              readOnly: true
              mountPath: /var/run/sds
            - name: istio-token
              mountPath: /var/run/secrets/tokens
            - name: uds-socket
              mountPath: /sock
          args:
            - proxy
            - '--domain'
            - $(POD_NAMESPACE).svc.cluster.local
            - '--serviceCluster'
            - istio-telemetry
            - '--templateFile'
            - /etc/istio/proxy/envoy_telemetry.yaml.tmpl
            - '--controlPlaneAuthPolicy'
            - MUTUAL_TLS
          resources:
            limits:
              cpu: '2'
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SDS_ENABLED
              value: 'true'
          lifecycle: {}
          ports:
            - containerPort: 9091
              protocol: TCP
            - containerPort: 15004
              protocol: TCP
            - name: http-envoy-prom
              containerPort: 15090
              protocol: TCP
      volumes:
        - name: istio-certs
          secret:
            secretName: istio.istio-mixer-service-account
            defaultMode: 420
            optional: true
            items: []
        - name: sds-uds-path
          hostPath:
            path: /var/run/sds
            type: ''
        - name: istio-token
        - name: uds-socket
          emptyDir: {}
        - name: telemetry-adapter-secret
          secret:
            secretName: telemetry-adapter-secret
            defaultMode: 420
            optional: true
            items: []
      dnsPolicy: ClusterFirst
      dnsConfig:
        options: []
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 100%
  replicas: 1

---
apiVersion: v1
kind: Service
metadata:
  namespace: istio-system
  name: istio-telemetry
  annotations:
    k8s.kuboard.cn/workload: istio-telemetry
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"networking.istio.io/exportTo":"*"},"labels":{"app":"mixer","istio":"mixer"},"name":"istio-telemetry","namespace":"istio-system"},"spec":{"ports":[{"name":"grpc-mixer","port":9091},{"name":"grpc-mixer-mtls","port":15004},{"name":"http-monitoring","port":15014},{"name":"prometheus","port":42422}],"selector":{"istio":"mixer","istio-mixer-type":"telemetry"}}}
    networking.istio.io/exportTo: '*'
  labels:
    istio: mixer
    istio-mixer-type: telemetry
spec:
  selector:
    istio: mixer
    istio-mixer-type: telemetry
  type: ClusterIP
  ports:
    - port: 9091
      targetPort: 9091
      protocol: TCP
      name: grpc-mixer
      nodePort: 0
    - port: 15004
      targetPort: 15004
      protocol: TCP
      name: grpc-mixer-mtls
      nodePort: 0
    - port: 15014
      targetPort: 15014
      protocol: TCP
      name: http-monitoring
      nodePort: 0
    - port: 42422
      targetPort: 42422
      protocol: TCP
      name: prometheus
      nodePort: 0
  sessionAffinity: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: istio-system
  name: prometheus
  annotations:
    k8s.kuboard.cn/workload: prometheus
    deployment.kubernetes.io/revision: '1'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"prometheus"},"name":"prometheus","namespace":"istio-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"prometheus"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/inject":"false"},"labels":{"app":"prometheus"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["ppc64le"]}]},"weight":2},{"preference":{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["s390x"]}]},"weight":2}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64","ppc64le","s390x"]}]}]}}},"containers":[{"args":["--storage.tsdb.retention=6h","--config.file=/etc/prometheus/prometheus.yaml"],"image":"docker.io/prom/prometheus:v2.8.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/-/healthy","port":9090}},"name":"prometheus","ports":[{"containerPort":9090,"name":"http"}],"readinessProbe":{"httpGet":{"path":"/-/ready","port":9090}},"resources":{"requests":{"cpu":"10m"}},"volumeMounts":[{"mountPath":"/etc/prometheus","name":"config-volume"},{"mountPath":"/etc/istio-certs","name":"istio-certs"}]}],"serviceAccountName":"prometheus","volumes":[{"configMap":{"name":"prometheus"},"name":"config-volume"},{"name":"istio-certs","secret":{"defaultMode":420,"secretName":"istio.default"}}]}}}}
    k8s.kuboard.cn/service: ClusterIP
    k8s.kuboard.cn/ingress: 'false'
  labels:
    app: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
            - weight: 2
              preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      serviceAccountName: prometheus
      initContainers: []
      containers:
        - image: 'docker.io/prom/prometheus:v2.8.0'
          imagePullPolicy: IfNotPresent
          name: prometheus
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: istio-certs
              mountPath: /etc/istio-certs
          args:
            - '--storage.tsdb.retention=6h'
            - '--config.file=/etc/prometheus/prometheus.yaml'
          resources:
            requests:
              cpu: 10m
            limits:
          env: []
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          lifecycle: {}
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
      volumes:
        - name: config-volume
          configMap:
            name: prometheus
            defaultMode: 420
            items: []
        - name: istio-certs
          secret:
            secretName: istio.default
            defaultMode: 420
            items: []
      dnsPolicy: ClusterFirst
      dnsConfig:
        options: []
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  replicas: 1

---
apiVersion: v1
kind: Service
metadata:
  namespace: istio-system
  name: prometheus
  annotations:
    k8s.kuboard.cn/workload: prometheus
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"prometheus.io/scrape":"true"},"labels":{"app":"prometheus"},"name":"prometheus","namespace":"istio-system"},"spec":{"ports":[{"name":"http-prometheus","port":9090,"protocol":"TCP"}],"selector":{"app":"prometheus"}}}
    prometheus.io/scrape: 'true'
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: http-prometheus
      nodePort: 0
  sessionAffinity: None

---
metadata:
  name: cluster-local-gateway-parameters-tbbdb2842d
  namespace: istio-system
  labels:
    kustomize.component: cluster-local-gateway
  annotations: {}
  managedFields:
    - manager: kfctl
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:21Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:namespace': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
          'f:labels':
            .: {}
            'f:kustomize.component': {}
data:
  namespace: istio-system
kind: ConfigMap
apiVersion: v1

---
metadata:
  name: istio
  namespace: istio-system
  labels:
    app: istio
  annotations: {}
  managedFields:
    - manager: kfctl
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:mesh': {}
          'f:meshNetworks': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
          'f:labels':
            .: {}
            'f:app': {}
data:
  mesh: >-
    # Set the following variable to true to disable policy checks by the Mixer.

    # Note that metrics will still be reported to the Mixer.

    disablePolicyChecks: true

    # reportBatchMaxEntries is the number of requests that are batched before
    telemetry data is sent to the mixer server

    reportBatchMaxEntries: 100

    # reportBatchMaxTime is the max waiting time before the telemetry data of a
    request is sent to the mixer server

    reportBatchMaxTime: 1s


    # Set enableTracing to false to disable request tracing.

    enableTracing: true


    # Set accessLogFile to empty string to disable access log.

    accessLogFile: ""


    # If accessLogEncoding is TEXT, value will be used directly as the log
    format

    # example: "[%START_TIME%] %REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%
    %PROTOCOL%\n"

    # If AccessLogEncoding is JSON, value will be parsed as map[string]string

    # example: '{"start_time": "%START_TIME%", "req_method": "%REQ(:METHOD)%"}'

    # Leave empty to use default log format

    accessLogFormat: ""


    # Set accessLogEncoding to JSON or TEXT to configure sidecar access log

    accessLogEncoding: 'TEXT'


    enableEnvoyAccessLogService: false

    mixerCheckServer: istio-policy.istio-system.svc.cluster.local:15004

    mixerReportServer: istio-telemetry.istio-system.svc.cluster.local:15004

    # policyCheckFailOpen allows traffic in cases when the mixer policy service
    cannot be reached.

    # Default is false which means the traffic is denied when the client is
    unable to connect to Mixer.

    policyCheckFailOpen: false

    # Let Pilot give ingresses the public IP of the Istio ingressgateway

    ingressService: istio-ingressgateway


    # Default connect timeout for dynamic clusters generated by Pilot and
    returned via XDS

    connectTimeout: 10s


    # Automatic protocol detection uses a set of heuristics to

    # determine whether the connection is using TLS or not (on the

    # server side), as well as the application protocol being used

    # (e.g., http vs tcp). These heuristics rely on the client sending

    # the first bits of data. For server first protocols like MySQL,

    # MongoDB, etc., Envoy will timeout on the protocol detection after

    # the specified period, defaulting to non mTLS plain TCP

    # traffic. Set this field to tweak the period that Envoy will wait

    # for the client to send the first bits of data. (MUST BE >=1ms)

    protocolDetectionTimeout: 100ms


    # DNS refresh rate for Envoy clusters of type STRICT_DNS

    dnsRefreshRate: 300s


    # Unix Domain Socket through which envoy communicates with NodeAgent SDS to
    get

    # key/cert for mTLS. Use secret-mount files instead of SDS if set to empty.

    sdsUdsPath: "unix:/var/run/sds/uds_path"


    # The trust domain corresponds to the trust root of a system.

    # Refer to
    https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE-ID.md#21-trust-domain

    trustDomain: ""


    # Set the default behavior of the sidecar for handling outbound traffic from
    the application:

    # ALLOW_ANY - outbound traffic to unknown destinations will be allowed, in
    case there are no

    #   services or ServiceEntries for the destination port

    # REGISTRY_ONLY - restrict outbound traffic to services defined in the
    service registry as well

    #   as those defined through ServiceEntries

    outboundTrafficPolicy:
      mode: ALLOW_ANY
    localityLbSetting:
      enabled: true
    # The namespace to treat as the administrative root namespace for istio

    # configuration.

    rootNamespace: istio-system

    configSources:

    - address: istio-galley.istio-system.svc:9901
      tlsSettings:
        mode: ISTIO_MUTUAL

    defaultConfig:
      #
      # TCP connection timeout between Envoy & the application, and between Envoys.  Used for static clusters
      # defined in Envoy's configuration file
      connectTimeout: 10s
      #
      ### ADVANCED SETTINGS #############
      # Where should envoy's configuration be stored in the istio-proxy container
      configPath: "/etc/istio/proxy"
      binaryPath: "/usr/local/bin/envoy"
      # The pseudo service name used for Envoy.
      serviceCluster: istio-proxy
      # These settings that determine how long an old Envoy
      # process should be kept alive after an occasional reload.
      drainDuration: 45s
      parentShutdownDuration: 1m0s
      #
      # The mode used to redirect inbound connections to Envoy. This setting
      # has no effect on outbound traffic: iptables REDIRECT is always used for
      # outbound connections.
      # If "REDIRECT", use iptables REDIRECT to NAT and redirect to Envoy.
      # The "REDIRECT" mode loses source addresses during redirection.
      # If "TPROXY", use iptables TPROXY to redirect to Envoy.
      # The "TPROXY" mode preserves both the source and destination IP
      # addresses and ports, so that they can be used for advanced filtering
      # and manipulation.
      # The "TPROXY" mode also configures the sidecar to run with the
      # CAP_NET_ADMIN capability, which is required to use TPROXY.
      #interceptionMode: REDIRECT
      #
      # Port where Envoy listens (on local host) for admin commands
      # You can exec into the istio-proxy container in a pod and
      # curl the admin port (curl http://localhost:15000/) to obtain
      # diagnostic information from Envoy. See
      # https://lyft.github.io/envoy/docs/operations/admin.html
      # for more details
      proxyAdminPort: 15000
      #
      # Set concurrency to a specific number to control the number of Proxy worker threads.
      # If set to 0 (default), then start worker thread for each CPU thread/core.
      concurrency: 2
      #
      tracing:
        zipkin:
          # Address of the Zipkin collector
          address: zipkin.istio-system:9411
      #
      # Mutual TLS authentication between sidecars and istio control plane.
      controlPlaneAuthPolicy: MUTUAL_TLS
      #
      # Address where istio Pilot service is running
      discoveryAddress: istio-pilot.istio-system:15011
  meshNetworks: 'networks: {}'
kind: ConfigMap
apiVersion: v1

---
metadata:
  name: istio-galley-configuration
  namespace: istio-system
  annotations: {}
  managedFields:
    - manager: kfctl
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:validating-webhook-configuration.yaml': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
data:
  validating-webhook-configuration.yaml: |
    apiVersion: admissionregistration.k8s.io/v1beta1
    kind: ValidatingWebhookConfiguration
    metadata:
      name: istio-galley
      labels:
        app: galley
        istio: galley
    webhooks:
      - name: pilot.validation.istio.io
        clientConfig:
          service:
            name: istio-galley
            namespace: istio-system
            path: "/admitpilot"
          caBundle: ""
        rules:
          - operations:
            - CREATE
            - UPDATE
            apiGroups:
            - config.istio.io
            apiVersions:
            - v1alpha2
            resources:
            - httpapispecs
            - httpapispecbindings
            - quotaspecs
            - quotaspecbindings
          - operations:
            - CREATE
            - UPDATE
            apiGroups:
            - rbac.istio.io
            apiVersions:
            - "*"
            resources:
            - "*"
          - operations:
            - CREATE
            - UPDATE
            apiGroups:
            - authentication.istio.io
            apiVersions:
            - "*"
            resources:
            - "*"
          - operations:
            - CREATE
            - UPDATE
            apiGroups:
            - networking.istio.io
            apiVersions:
            - "*"
            resources:
            - destinationrules
            - envoyfilters
            - gateways
            - serviceentries
            - sidecars
            - virtualservices
        failurePolicy: Fail
        sideEffects: None
      - name: mixer.validation.istio.io
        clientConfig:
          service:
            name: istio-galley
            namespace: istio-system
            path: "/admitmixer"
          caBundle: ""
        rules:
          - operations:
            - CREATE
            - UPDATE
            apiGroups:
            - config.istio.io
            apiVersions:
            - v1alpha2
            resources:
            - rules
            - attributemanifests
            - circonuses
            - deniers
            - fluentds
            - kubernetesenvs
            - listcheckers
            - memquotas
            - noops
            - opas
            - prometheuses
            - rbacs
            - solarwindses
            - stackdrivers
            - cloudwatches
            - dogstatsds
            - statsds
            - stdios
            - apikeys
            - authorizations
            - checknothings
            # - kuberneteses
            - listentries
            - logentries
            - metrics
            - quotas
            - reportnothings
            - tracespans
            - adapters
            - handlers
            - instances
            - templates
            - zipkins
        failurePolicy: Fail
        sideEffects: None
kind: ConfigMap
apiVersion: v1

---
metadata:
  name: istio-install-parameters-5kmkd2f29g
  namespace: istio-system
  annotations: {}
  managedFields:
    - manager: kfctl
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:namespace': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
data:
  namespace: istio-system
kind: ConfigMap
apiVersion: v1

---
metadata:
  name: istio-security
  namespace: istio-system
  managedFields:
    - manager: istio_ca
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:22Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:caTLSRootCert': {}
data:
  caTLSRootCert: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRQVdMTTRlb0RhRDlzR29icFNIVnRYVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU1sb1hEVE13TURnegpNVEF3TWpZeU1sb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNGtPSUJ4Zkd0cUNGa0ZadTRlSHNINFhYbEVKcFY4UTdjOG15NnoKcExIS2FJVXVQNnh0L0pUVGp3cHlUbXFPWW53TFpCdWV1aFAxY25VSXRsczZRSDl1djNVK0VvbU9EcUtWMUlWcApNYzZ4VFhBaUMrVHcrSkpoNVNZL2w0QVIxN29LWi9hTi9vVXNKVGdEUnJGNmtiRmk1OEhXZ0ZDbVVub095UGVjClBza3NTMDBpSU95VDZ5cHB1ZjhKTFZXVkgvQmpNbHgxWHcwNERkZDN5ZVBDMWNSb0NDTnNpQjZmZmRtNEZWL20KL1libU5vMEVwc2FMUG5VWWNXa0M2UFQ0U1hUcjB2ZThaSG5Ub0ZJZzRlNytybmJHUEZYdURmNUg0YW4vRUNRegp1SEpQVm5kZTJvU0NzZ0I4a1JhWFNxZjBFcTZQMmMrYm83cS9TamkrK0JqSW1oY0NBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUVrcEkyRDZESE5YNVhtUVlRSkl0L3lmeTJIYlhRckN6ZGdFRnlJWFl1U2NTYkVxZGpTc3FFY0J4dHd0NFBMNwpyV3ovVzN6MnhBanp5bzE1N2VMaVd4RUo2SHZsT3FTNzFIZVd3WUM0RGQ3ZS85U2MwWGMyMEhOYk14bS9Sb213ClFUZ2lkeEY2UHhZMW9icjVNT0JXQ1VjTVFCNlM4Q3d0MzZvSTZkYXN4bHNzQytVZWlDdkxqZDV2YzZlbk9hRkwKWVh0WkZFd1JGUXg1bDRTSlhwTmRWZ1VUV0VSeU1XdlhHd0NWbkFwV1lvQlpVZ1B4TjdCTTkzbUdtWGdzZVBtUgpUSWxteHVQN3FCQ0s1RXRYT0NnL0FLa09jcktFaTJxNHB4b1JvVk5veXlCOXlRQVdzRlhLbHhYZmZxL1U5MWtkCmp0ZHM5NXZVV0g5VUpjZnBUTnV3NllRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
kind: ConfigMap
apiVersion: v1

---
metadata:
  name: istio-security-custom-resources
  namespace: istio-system
  annotations: {}
  managedFields:
    - manager: kfctl
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:istio-security-custom-resources.yaml': {}
          'f:istio-security-run.sh': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
data:
  istio-security-custom-resources.yaml: >
    # Authentication policy to enable permissive mode for all services (that
    have sidecar) in the mesh.

    apiVersion: "authentication.istio.io/v1alpha1"

    kind: "MeshPolicy"

    metadata:
      name: "default"
      labels:
        app: security
    spec:
      peers:
      - mtls:
          mode: PERMISSIVE
  istio-security-run.sh: |-
    #!/bin/sh

    set -x

    if [ "$#" -ne "1" ]; then
        echo "first argument should be path to custom resource yaml"
        exit 1
    fi

    pathToResourceYAML=${1}

    kubectl get validatingwebhookconfiguration istio-galley 2>/dev/null
    if [ "$?" -eq 0 ]; then
        echo "istio-galley validatingwebhookconfiguration found - waiting for istio-galley deployment to be ready"
        while true; do
            kubectl -n istio-system get deployment istio-galley 2>/dev/null
            if [ "$?" -eq 0 ]; then
                break
            fi
            sleep 1
        done
        kubectl -n istio-system rollout status deployment istio-galley
        if [ "$?" -ne 0 ]; then
            echo "istio-galley deployment rollout status check failed"
            exit 1
        fi
        echo "istio-galley deployment ready for configuration validation"
    fi
    sleep 5
    kubectl apply -f ${pathToResourceYAML}
kind: ConfigMap
apiVersion: v1

---
metadata:
  name: istio-sidecar-injector
  namespace: istio-system
  labels:
    app: istio
    istio: sidecar-injector
  annotations: {}
  managedFields:
    - manager: kfctl
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:config': {}
          'f:values': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:istio': {}
data:
  config: |-
    policy: enabled
    alwaysInjectSelector:
      []
    neverInjectSelector:
      []
    template: |-
      rewriteAppHTTPProbe: {{ valueOrDefault .Values.sidecarInjectorWebhook.rewriteAppHTTPProbe false }}
      {{- if or (not .Values.istio_cni.enabled) .Values.global.proxy.enableCoreDump }}
      initContainers:
      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
      {{- if not .Values.istio_cni.enabled }}
      - name: istio-init
      {{- if contains "/" .Values.global.proxy_init.image }}
        image: "{{ .Values.global.proxy_init.image }}"
      {{- else }}
        image: "{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag }}"
      {{- end }}
        args:
        - "-p"
        - "15001"
        - "-z"
        - "15006"
        - "-u"
        - 1337
        - "-m"
        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
        - "-i"
        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
        - "-x"
        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
        - "-b"
        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` `*` }}"
        - "-d"
        - "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") -}}
        - "-o"
        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
        {{ end -}}
        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
        - "-k"
        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
        {{ end -}}
        imagePullPolicy: "{{ .Values.global.imagePullPolicy }}"
      {{- if .Values.global.proxy.init.resources }}
        resources:
          {{ toYaml .Values.global.proxy.init.resources | indent 4 }}
      {{- else }}
        resources: {}
      {{- end }}
        securityContext:
          runAsUser: 0
          runAsNonRoot: false
          capabilities:
            add:
            - NET_ADMIN
          {{- if .Values.global.proxy.privileged }}
          privileged: true
          {{- end }}
        restartPolicy: Always
      {{- end }}
      {{  end -}}
      {{- if eq .Values.global.proxy.enableCoreDump true }}
      - name: enable-core-dump
        args:
        - -c
        - sysctl -w kernel.core_pattern=/var/lib/istio/core.proxy && ulimit -c unlimited
        command:
          - /bin/sh
        image: {{ $.Values.global.proxy.enableCoreDumpImage }}
        imagePullPolicy: IfNotPresent
        resources: {}
        securityContext:
          runAsUser: 0
          runAsNonRoot: false
          privileged: true
      {{ end }}
      {{- end }}
      containers:
      - name: istio-proxy
      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
      {{- else }}
        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
      {{- end }}
        ports:
        - containerPort: 15090
          protocol: TCP
          name: http-envoy-prom
        args:
        - proxy
        - sidecar
        - --domain
        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
        - --configPath
        - "{{ .ProxyConfig.ConfigPath }}"
        - --binaryPath
        - "{{ .ProxyConfig.BinaryPath }}"
        - --serviceCluster
        {{ if ne "" (index .ObjectMeta.Labels "app") -}}
        - "{{ index .ObjectMeta.Labels `app` }}.$(POD_NAMESPACE)"
        {{ else -}}
        - "{{ valueOrDefault .DeploymentMeta.Name `istio-proxy` }}.{{ valueOrDefault .DeploymentMeta.Namespace `default` }}"
        {{ end -}}
        - --drainDuration
        - "{{ formatDuration .ProxyConfig.DrainDuration }}"
        - --parentShutdownDuration
        - "{{ formatDuration .ProxyConfig.ParentShutdownDuration }}"
        - --discoveryAddress
        - "{{ annotation .ObjectMeta `sidecar.istio.io/discoveryAddress` .ProxyConfig.DiscoveryAddress }}"
      {{- if eq .Values.global.proxy.tracer "lightstep" }}
        - --lightstepAddress
        - "{{ .ProxyConfig.GetTracing.GetLightstep.GetAddress }}"
        - --lightstepAccessToken
        - "{{ .ProxyConfig.GetTracing.GetLightstep.GetAccessToken }}"
        - --lightstepSecure={{ .ProxyConfig.GetTracing.GetLightstep.GetSecure }}
        - --lightstepCacertPath
        - "{{ .ProxyConfig.GetTracing.GetLightstep.GetCacertPath }}"
      {{- else if eq .Values.global.proxy.tracer "zipkin" }}
        - --zipkinAddress
        - "{{ .ProxyConfig.GetTracing.GetZipkin.GetAddress }}"
      {{- else if eq .Values.global.proxy.tracer "datadog" }}
        - --datadogAgentAddress
        - "{{ .ProxyConfig.GetTracing.GetDatadog.GetAddress }}"
      {{- end }}
      {{- if .Values.global.proxy.logLevel }}
        - --proxyLogLevel={{ .Values.global.proxy.logLevel }}
      {{- end}}
      {{- if .Values.global.proxy.componentLogLevel }}
        - --proxyComponentLogLevel={{ .Values.global.proxy.componentLogLevel }}
      {{- end}}
        - --dnsRefreshRate
        - {{ .Values.global.proxy.dnsRefreshRate }}
        - --connectTimeout
        - "{{ formatDuration .ProxyConfig.ConnectTimeout }}"
      {{- if .Values.global.proxy.envoyStatsd.enabled }}
        - --statsdUdpAddress
        - "{{ .ProxyConfig.StatsdUdpAddress }}"
      {{- end }}
      {{- if .Values.global.proxy.envoyMetricsService.enabled }}
        - --envoyMetricsServiceAddress
        - "{{ .ProxyConfig.GetEnvoyMetricsService.GetAddress }}"
      {{- end }}
      {{- if .Values.global.proxy.envoyAccessLogService.enabled }}
        - --envoyAccessLogService
        - '{{ structToJSON .ProxyConfig.EnvoyAccessLogService }}'
      {{- end }}
        - --proxyAdminPort
        - "{{ .ProxyConfig.ProxyAdminPort }}"
        {{ if gt .ProxyConfig.Concurrency 0 -}}
        - --concurrency
        - "{{ .ProxyConfig.Concurrency }}"
        {{ end -}}
        - --controlPlaneAuthPolicy
        - "{{ annotation .ObjectMeta `sidecar.istio.io/controlPlaneAuthPolicy` .ProxyConfig.ControlPlaneAuthPolicy }}"
      {{- if (ne (annotation .ObjectMeta "status.sidecar.istio.io/port" .Values.global.proxy.statusPort) "0") }}
        - --statusPort
        - "{{ annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort }}"
        - --applicationPorts
        - "{{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/applicationPorts` (applicationPorts .Spec.Containers) }}"
      {{- end }}
      {{- if .Values.global.trustDomain }}
        - --trust-domain={{ .Values.global.trustDomain }}
      {{- end }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ISTIO_META_POD_PORTS
          value: |-
            [
            {{- range $index1, $c := .Spec.Containers }}
              {{- range $index2, $p := $c.Ports }}
                {{if or (ne $index1 0) (ne $index2 0)}},{{end}}{{ structToJSON $p }}
              {{- end}}
            {{- end}}
            ]
        - name: ISTIO_META_CLUSTER_ID
          value: "{{ valueOrDefault .Values.global.multicluster.clusterName `Kubernetes` }}"
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
      {{- if eq .Values.global.proxy.tracer "datadog" }}
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
      {{- if isset .ObjectMeta.Annotations `apm.datadoghq.com/env` }}
      {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
        - name: {{ $key }}
          value: "{{ $value }}"
      {{- end }}
      {{- end }}
      {{- end }}
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ISTIO_META_CONFIG_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SDS_ENABLED
          value: {{ $.Values.global.sds.enabled }}
        - name: ISTIO_META_INTERCEPTION_MODE
          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
        - name: ISTIO_META_INCLUDE_INBOUND_PORTS
          value: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` (applicationPorts .Spec.Containers) }}"
        {{- if .Values.global.network }}
        - name: ISTIO_META_NETWORK
          value: "{{ .Values.global.network }}"
        {{- end }}
        {{ if .ObjectMeta.Annotations }}
        - name: ISTIO_METAJSON_ANNOTATIONS
          value: |
                 {{ toJSON .ObjectMeta.Annotations }}
        {{ end }}
        {{ if .ObjectMeta.Labels }}
        - name: ISTIO_METAJSON_LABELS
          value: |
                 {{ toJSON .ObjectMeta.Labels }}
        {{ end }}
        {{- if .DeploymentMeta.Name }}
        - name: ISTIO_META_WORKLOAD_NAME
          value: {{ .DeploymentMeta.Name }}
        {{ end }}
        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
        - name: ISTIO_META_OWNER
          value: kubernetes://api/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
         {{- end}}
        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
        - name: ISTIO_BOOTSTRAP_OVERRIDE
          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
        {{- end }}
        {{- if .Values.global.sds.customTokenDirectory }}
        - name: ISTIO_META_SDS_TOKEN_PATH
          value: "{{ .Values.global.sds.customTokenDirectory -}}/sdstoken"
        {{- end }}
        {{- if .Values.global.meshID }}
        - name: ISTIO_META_MESH_ID
          value: "{{ .Values.global.meshID }}"
        {{- else if .Values.global.trustDomain }}
        - name: ISTIO_META_MESH_ID
          value: "{{ .Values.global.trustDomain }}"
        {{- end }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: {{ annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort }}
          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
        {{ end -}}
        securityContext:
          {{- if .Values.global.proxy.privileged }}
          privileged: true
          {{- end }}
          {{- if ne .Values.global.proxy.enableCoreDump true }}
          readOnlyRootFilesystem: true
          {{- end }}
          {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
          capabilities:
            add:
            - NET_ADMIN
          runAsGroup: 1337
          {{ else -}}
          {{ if .Values.global.sds.enabled }}
          runAsGroup: 1337
          {{- end }}
          runAsUser: 1337
          {{- end }}
        resources:
          {{ if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
          requests:
            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
            {{ end}}
            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
            {{ end }}
        {{ else -}}
      {{- if .Values.global.proxy.resources }}
          {{ toYaml .Values.global.proxy.resources | indent 4 }}
      {{- end }}
        {{  end -}}
        volumeMounts:
        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
        - mountPath: /etc/istio/custom-bootstrap
          name: custom-bootstrap-volume
        {{- end }}
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        {{- if .Values.global.sds.enabled }}
        - mountPath: /var/run/sds
          name: sds-uds-path
          readOnly: true
        - mountPath: /var/run/secrets/tokens
          name: istio-token
        {{- if .Values.global.sds.customTokenDirectory }}
        - mountPath: "{{ .Values.global.sds.customTokenDirectory -}}"
          name: custom-sds-token
          readOnly: true
        {{- end }}
        {{- else }}
        - mountPath: /etc/certs/
          name: istio-certs
          readOnly: true
        {{- end }}
        {{- if and (eq .Values.global.proxy.tracer "lightstep") .Values.global.tracer.lightstep.cacertPath }}
        - mountPath: {{ directory .ProxyConfig.GetTracing.GetLightstep.GetCacertPath }}
          name: lightstep-certs
          readOnly: true
        {{- end }}
          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
        - name: "{{  $index }}"
          {{ toYaml $value | indent 4 }}
          {{ end }}
          {{- end }}
      volumes:
      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
      - name: custom-bootstrap-volume
        configMap:
          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
      {{- end }}
      - emptyDir:
          medium: Memory
        name: istio-envoy
      {{- if .Values.global.sds.enabled }}
      - name: sds-uds-path
        hostPath:
          path: /var/run/sds
      - name: istio-token
        projected:
          sources:
            - serviceAccountToken:
                path: istio-token
                expirationSeconds: 43200
                audience: {{ .Values.global.sds.token.aud }}
      {{- if .Values.global.sds.customTokenDirectory }}
      - name: custom-sds-token
        secret:
          secretName: sdstokensecret
      {{- end }}
      {{- else }}
      - name: istio-certs
        secret:
          optional: true
          {{ if eq .Spec.ServiceAccountName "" }}
          secretName: istio.default
          {{ else -}}
          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
          {{  end -}}
        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
      - name: "{{ $index }}"
        {{ toYaml $value | indent 2 }}
        {{ end }}
        {{ end }}
      {{- end }}
      {{- if and (eq .Values.global.proxy.tracer "lightstep") .Values.global.tracer.lightstep.cacertPath }}
      - name: lightstep-certs
        secret:
          optional: true
          secretName: lightstep.cacert
      {{- end }}
      {{- if .Values.global.podDNSSearchNamespaces }}
      dnsConfig:
        searches:
          {{- range .Values.global.podDNSSearchNamespaces }}
          - {{ render . }}
          {{- end }}
      {{- end }}
      podRedirectAnnot:
         sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
         traffic.sidecar.istio.io/includeOutboundIPRanges: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
         traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
         traffic.sidecar.istio.io/includeInboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` (includeInboundPorts .Spec.Containers) }}"
         traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
      {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
         traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
      {{- end }}
         traffic.sidecar.istio.io/kubevirtInterfaces: "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
  values: >-
    {"certmanager":{"enabled":false},"galley":{"enabled":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":true,"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"gcr.io/istio-release","imagePullPolicy":"IfNotPresent","imagePullSecrets":[],"k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":false},"multiCluster":{"clusterName":"","enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"enabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"enableCoreDumpImage":"ubuntu:xenial","envoyAccessLogService":{"enabled":false,"host":null,"port":null,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":null,"clientCertificate":null,"mode":"DISABLE","privateKey":null,"sni":null,"subjectAltNames":[]}},"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","init":{"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"kubevirtInterfaces":"","logLevel":"","privileged":false,"protocolDetectionTimeout":"100ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"token":{"aud":"istio-ca"},"udsPath":"unix:/var/run/sds/uds_path"},"tag":"release-1.3-latest-daily","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"image":"galley","nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"replicaCount":1,"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","tolerations":[]},"gateways":{"enabled":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":true,"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"gcr.io/istio-release","imagePullPolicy":"IfNotPresent","imagePullSecrets":[],"k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":false},"multiCluster":{"clusterName":"","enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"enabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"enableCoreDumpImage":"ubuntu:xenial","envoyAccessLogService":{"enabled":false,"host":null,"port":null,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":null,"clientCertificate":null,"mode":"DISABLE","privateKey":null,"sni":null,"subjectAltNames":[]}},"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","init":{"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"kubevirtInterfaces":"","logLevel":"","privileged":false,"protocolDetectionTimeout":"100ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"token":{"aud":"istio-ca"},"udsPath":"unix:/var/run/sds/uds_path"},"tag":"release-1.3-latest-daily","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"istio-egressgateway":{"autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enabled":false,"env":{"ISTIO_META_ROUTER_MODE":"sni-dnat"},"labels":{"app":"istio-egressgateway","istio":"egressgateway"},"nodeSelector":{},"podAnnotations":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"ports":[{"name":"http2","port":80},{"name":"https","port":443},{"name":"tls","port":15443,"targetPort":15443}],"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","secretVolumes":[{"mountPath":"/etc/istio/egressgateway-certs","name":"egressgateway-certs","secretName":"istio-egressgateway-certs"},{"mountPath":"/etc/istio/egressgateway-ca-certs","name":"egressgateway-ca-certs","secretName":"istio-egressgateway-ca-certs"}],"serviceAnnotations":{},"tolerations":[],"type":"ClusterIP"},"istio-ilbgateway":{"autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enabled":false,"labels":{"app":"istio-ilbgateway","istio":"ilbgateway"},"loadBalancerIP":"","nodeSelector":{},"podAnnotations":{},"ports":[{"name":"grpc-pilot-mtls","port":15011},{"name":"grpc-pilot","port":15010},{"name":"tcp-citadel-grpc-tls","port":8060,"targetPort":8060},{"name":"tcp-dns","port":5353}],"resources":{"requests":{"cpu":"800m","memory":"512Mi"}},"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","secretVolumes":[{"mountPath":"/etc/istio/ilbgateway-certs","name":"ilbgateway-certs","secretName":"istio-ilbgateway-certs"},{"mountPath":"/etc/istio/ilbgateway-ca-certs","name":"ilbgateway-ca-certs","secretName":"istio-ilbgateway-ca-certs"}],"serviceAnnotations":{"cloud.google.com/load-balancer-type":"internal"},"tolerations":[],"type":"LoadBalancer"},"istio-ingressgateway":{"applicationPorts":"","autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enabled":true,"env":{"ISTIO_META_ROUTER_MODE":"sni-dnat"},"externalIPs":[],"labels":{"app":"istio-ingressgateway","istio":"ingressgateway"},"loadBalancerIP":"","loadBalancerSourceRanges":[],"meshExpansionPorts":[{"name":"tcp-pilot-grpc-tls","port":15011,"targetPort":15011},{"name":"tcp-mixer-grpc-tls","port":15004,"targetPort":15004},{"name":"tcp-citadel-grpc-tls","port":8060,"targetPort":8060},{"name":"tcp-dns-tls","port":853,"targetPort":853}],"nodeSelector":{},"podAnnotations":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"ports":[{"name":"status-port","port":15020,"targetPort":15020},{"name":"http2","nodePort":31380,"port":80,"targetPort":80},{"name":"https","nodePort":31390,"port":443},{"name":"tcp","nodePort":31400,"port":31400},{"name":"https-kiali","port":15029,"targetPort":15029},{"name":"https-prometheus","port":15030,"targetPort":15030},{"name":"https-grafana","port":15031,"targetPort":15031},{"name":"https-tracing","port":15032,"targetPort":15032},{"name":"tls","port":15443,"targetPort":15443}],"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","sds":{"enabled":false,"image":"node-agent-k8s","resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}}},"secretVolumes":[{"mountPath":"/etc/istio/ingressgateway-certs","name":"ingressgateway-certs","secretName":"istio-ingressgateway-certs"},{"mountPath":"/etc/istio/ingressgateway-ca-certs","name":"ingressgateway-ca-certs","secretName":"istio-ingressgateway-ca-certs"}],"serviceAnnotations":{},"tolerations":[],"type":"LoadBalancer"}},"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":true,"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"gcr.io/istio-release","imagePullPolicy":"IfNotPresent","imagePullSecrets":[],"k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":false},"multiCluster":{"clusterName":"","enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"enabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"enableCoreDumpImage":"ubuntu:xenial","envoyAccessLogService":{"enabled":false,"host":null,"port":null,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":null,"clientCertificate":null,"mode":"DISABLE","privateKey":null,"sni":null,"subjectAltNames":[]}},"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","init":{"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"kubevirtInterfaces":"","logLevel":"","privileged":false,"protocolDetectionTimeout":"100ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"token":{"aud":"istio-ca"},"udsPath":"unix:/var/run/sds/uds_path"},"tag":"release-1.3-latest-daily","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"grafana":{"enabled":false},"istio_cni":{"enabled":false},"istiocoredns":{"enabled":false},"kiali":{"enabled":false},"mixer":{"adapters":{"kubernetesenv":{"enabled":true},"prometheus":{"enabled":true,"metricsExpiryDuration":"10m"},"stdio":{"enabled":false,"outputAsJson":true},"useAdapterCRDs":false},"env":{"GODEBUG":"gctrace=1","GOMAXPROCS":"6"},"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":true,"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"gcr.io/istio-release","imagePullPolicy":"IfNotPresent","imagePullSecrets":[],"k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":false},"multiCluster":{"clusterName":"","enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"enabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"enableCoreDumpImage":"ubuntu:xenial","envoyAccessLogService":{"enabled":false,"host":null,"port":null,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":null,"clientCertificate":null,"mode":"DISABLE","privateKey":null,"sni":null,"subjectAltNames":[]}},"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","init":{"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"kubevirtInterfaces":"","logLevel":"","privileged":false,"protocolDetectionTimeout":"100ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"token":{"aud":"istio-ca"},"udsPath":"unix:/var/run/sds/uds_path"},"tag":"release-1.3-latest-daily","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"image":"mixer","nodeSelector":{},"podAnnotations":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"policy":{"autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enabled":true,"replicaCount":1,"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%"},"telemetry":{"autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enabled":true,"loadshedding":{"latencyThreshold":"100ms","mode":"enforce"},"replicaCount":1,"reportBatchMaxEntries":100,"reportBatchMaxTime":"1s","resources":{"limits":{"cpu":"4800m","memory":"4G"},"requests":{"cpu":"1000m","memory":"1G"}},"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","sessionAffinityEnabled":false},"tolerations":[]},"nodeagent":{"enabled":true,"env":{"CA_ADDR":"istio-citadel:8060","CA_PROVIDER":"Citadel","PLUGINS":"","VALID_TOKEN":true},"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":true,"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"gcr.io/istio-release","imagePullPolicy":"IfNotPresent","imagePullSecrets":[],"k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":false},"multiCluster":{"clusterName":"","enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"enabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"enableCoreDumpImage":"ubuntu:xenial","envoyAccessLogService":{"enabled":false,"host":null,"port":null,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":null,"clientCertificate":null,"mode":"DISABLE","privateKey":null,"sni":null,"subjectAltNames":[]}},"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","init":{"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"kubevirtInterfaces":"","logLevel":"","privileged":false,"protocolDetectionTimeout":"100ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"token":{"aud":"istio-ca"},"udsPath":"unix:/var/run/sds/uds_path"},"tag":"release-1.3-latest-daily","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"image":"node-agent-k8s","nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"tolerations":[]},"pilot":{"autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enableProtocolSniffingForInbound":false,"enableProtocolSniffingForOutbound":true,"enabled":true,"env":{"GODEBUG":"gctrace=1","PILOT_PUSH_THROTTLE":100},"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":true,"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"gcr.io/istio-release","imagePullPolicy":"IfNotPresent","imagePullSecrets":[],"k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":false},"multiCluster":{"clusterName":"","enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"enabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"enableCoreDumpImage":"ubuntu:xenial","envoyAccessLogService":{"enabled":false,"host":null,"port":null,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":null,"clientCertificate":null,"mode":"DISABLE","privateKey":null,"sni":null,"subjectAltNames":[]}},"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","init":{"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"kubevirtInterfaces":"","logLevel":"","privileged":false,"protocolDetectionTimeout":"100ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"token":{"aud":"istio-ca"},"udsPath":"unix:/var/run/sds/uds_path"},"tag":"release-1.3-latest-daily","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"image":"pilot","keepaliveMaxServerConnectionAge":"30m","nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"resources":{"requests":{"cpu":"500m","memory":"2048Mi"}},"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","sidecar":true,"tolerations":[],"traceSampling":1},"prometheus":{"contextPath":"/prometheus","enabled":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":true,"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"gcr.io/istio-release","imagePullPolicy":"IfNotPresent","imagePullSecrets":[],"k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":false},"multiCluster":{"clusterName":"","enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"enabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"enableCoreDumpImage":"ubuntu:xenial","envoyAccessLogService":{"enabled":false,"host":null,"port":null,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":null,"clientCertificate":null,"mode":"DISABLE","privateKey":null,"sni":null,"subjectAltNames":[]}},"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","init":{"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"kubevirtInterfaces":"","logLevel":"","privileged":false,"protocolDetectionTimeout":"100ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"token":{"aud":"istio-ca"},"udsPath":"unix:/var/run/sds/uds_path"},"tag":"release-1.3-latest-daily","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"hub":"docker.io/prom","image":"prometheus","ingress":{"annotations":null,"enabled":false,"hosts":["prometheus.local"],"tls":null},"nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"replicaCount":1,"retention":"6h","scrapeInterval":"15s","security":{"enabled":true},"service":{"annotations":{},"nodePort":{"enabled":false,"port":32090}},"tag":"v2.8.0","tolerations":[]},"security":{"citadelHealthCheck":false,"createMeshPolicy":true,"enableNamespacesByDefault":true,"enabled":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":true,"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"gcr.io/istio-release","imagePullPolicy":"IfNotPresent","imagePullSecrets":[],"k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":false},"multiCluster":{"clusterName":"","enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"enabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"enableCoreDumpImage":"ubuntu:xenial","envoyAccessLogService":{"enabled":false,"host":null,"port":null,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":null,"clientCertificate":null,"mode":"DISABLE","privateKey":null,"sni":null,"subjectAltNames":[]}},"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","init":{"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"kubevirtInterfaces":"","logLevel":"","privileged":false,"protocolDetectionTimeout":"100ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"token":{"aud":"istio-ca"},"udsPath":"unix:/var/run/sds/uds_path"},"tag":"release-1.3-latest-daily","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"image":"citadel","nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"replicaCount":1,"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","selfSigned":true,"tolerations":[],"workloadCertTtl":"2160h"},"sidecarInjectorWebhook":{"alwaysInjectSelector":[],"enableNamespacesByDefault":false,"enabled":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":true,"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"gcr.io/istio-release","imagePullPolicy":"IfNotPresent","imagePullSecrets":[],"k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":false},"multiCluster":{"clusterName":"","enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"enabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"enableCoreDumpImage":"ubuntu:xenial","envoyAccessLogService":{"enabled":false,"host":null,"port":null,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":null,"clientCertificate":null,"mode":"DISABLE","privateKey":null,"sni":null,"subjectAltNames":[]}},"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","init":{"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"kubevirtInterfaces":"","logLevel":"","privileged":false,"protocolDetectionTimeout":"100ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"token":{"aud":"istio-ca"},"udsPath":"unix:/var/run/sds/uds_path"},"tag":"release-1.3-latest-daily","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"image":"sidecar_injector","neverInjectSelector":[],"nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"replicaCount":1,"rewriteAppHTTPProbe":false,"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","tolerations":[]},"tracing":{"enabled":false}}
kind: ConfigMap
apiVersion: v1

---
metadata:
  name: prometheus
  namespace: istio-system
  annotations: {}
  managedFields:
    - manager: kfctl
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:prometheus.yaml': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
data:
  prometheus.yaml: |-
    global:
      scrape_interval: 15s
    scrape_configs:

    - job_name: 'istio-mesh'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - istio-system

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: istio-telemetry;prometheus

    # Scrape config for envoy stats
    - job_name: 'envoy-stats'
      metrics_path: /stats/prometheus
      kubernetes_sd_configs:
      - role: pod

      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_container_port_name]
        action: keep
        regex: '.*-envoy-prom'
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:15090
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod_name

    - job_name: 'istio-policy'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - istio-system


      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: istio-policy;http-monitoring

    - job_name: 'istio-telemetry'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - istio-system

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: istio-telemetry;http-monitoring

    - job_name: 'pilot'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - istio-system

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: istio-pilot;http-monitoring

    - job_name: 'galley'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - istio-system

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: istio-galley;http-monitoring

    - job_name: 'citadel'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - istio-system

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: istio-citadel;http-monitoring

    # scrape config for API servers
    - job_name: 'kubernetes-apiservers'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - default
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: kubernetes;https

    # scrape config for nodes (kubelet)
    - job_name: 'kubernetes-nodes'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

    # Scrape config for Kubelet cAdvisor.
    #
    # This is required for Kubernetes 1.7.3 and later, where cAdvisor metrics
    # (those whose names begin with 'container_') have been removed from the
    # Kubelet metrics endpoint.  This job scrapes the cAdvisor endpoint to
    # retrieve those metrics.
    #
    # In Kubernetes 1.7.0-1.7.2, these metrics are only exposed on the cAdvisor
    # HTTP endpoint; use "replacement: /api/v1/nodes/${1}:4194/proxy/metrics"
    # in that case (and ensure cAdvisor's HTTP server hasn't been disabled with
    # the --cadvisor-port=0 Kubelet flag).
    #
    # This job is not necessary and should be removed in Kubernetes 1.6 and
    # earlier versions, or it will cause the metrics to be scraped twice.
    - job_name: 'kubernetes-cadvisor'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

    # scrape config for service endpoints.
    - job_name: 'kubernetes-service-endpoints'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name

    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:  # If first two labels are present, pod should be scraped  by the istio-secure job.
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      # Keep target if there's no sidecar or if prometheus.io/scheme is explicitly set to "http"
      - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status, __meta_kubernetes_pod_annotation_prometheus_io_scheme]
        action: keep
        regex: ((;.*)|(.*;http))
      - source_labels: [__meta_kubernetes_pod_annotation_istio_mtls]
        action: drop
        regex: (true)
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod_name

    - job_name: 'kubernetes-pods-istio-secure'
      scheme: https
      tls_config:
        ca_file: /etc/istio-certs/root-cert.pem
        cert_file: /etc/istio-certs/cert-chain.pem
        key_file: /etc/istio-certs/key.pem
        insecure_skip_verify: true  # prometheus does not support secure naming.
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      # sidecar status annotation is added by sidecar injector and
      # istio_workload_mtls_ability can be specifically placed on a pod to indicate its ability to receive mtls traffic.
      - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status, __meta_kubernetes_pod_annotation_istio_mtls]
        action: keep
        regex: (([^;]+);([^;]*))|(([^;]*);(true))
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
        action: drop
        regex: (http)
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__]  # Only keep address that is host:port
        action: keep    # otherwise an extra target with ':443' is added for https scheme
        regex: ([^:]+):(\d+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod_name
kind: ConfigMap
apiVersion: v1

---
metadata:
  name: cluster-local-gateway-service-account-token-5mxtv
  namespace: istio-system
  annotations:
    kubernetes.io/service-account.name: cluster-local-gateway-service-account
    kubernetes.io/service-account.uid: 0fabcf69-2270-497f-9046-a646a2abd35e
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:21Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:ca.crt': {}
          'f:namespace': {}
          'f:token': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubernetes.io/service-account.name': {}
            'f:kubernetes.io/service-account.uid': {}
        'f:type': {}
data:
  ca.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EZ3hPREF6TVRZek5sb1hEVE13TURneE5qQXpNVFl6Tmxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTURqCi9idld2NHl3cEZwazErT0ZTVFhmNE9wSUoxNXdhNVZuSURYN2x4MHlqdjJlcll3aUVVZ0gwWDdCSlh3TTlpNG4KeVphSHNtcnY0RGRkekNxS25jSlZBanRQTk9kemNOd1IxS0twY2JaNzNWODdZeDNNSVZaZi9vU0tLdDcvLzNwSwp1dWxmWGtabU5KRktYQW96QTNyZjg5bWtpZVpRRlgwN0V1K2VSNDdweGkzMTNkTnJQT0xXSlhVd1VhVDhKT2YrCi9DWDZxOW1vQ01CVnR5eUY2UkxoaGp0VG9wdnZrSWlveXNTbTByNkNiejBYc0RwUlBkZUtHWXU0WjVYSlVrcFgKZ3FNUDh4RktsLzJhWERLeng4ZGdjckk5V0h3UXR3MmtXK3ZGSHN0RnRwdG1OdFExN01jaGJERHJDd00rcFhVeAovbFE2RWE4ZkIxckM4c09WR1U4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGeVI0eTgzTHNtcjl4a1Uwd2lUc0gzdXRvbisKYzJGeXMyZy9jNXRwUUxXSDZUZFczZ01OWjhMTk5BNDgzdkE1NEFZeG1jbWJzeklCYnhwekVZRE1kT0FQSFRqagowaUpZei9Ra0ZveThuSFFUNk9Yd0xjQk9iRmJnQktNdlRQRGNFNjZ0YWNMdUYrWXMxVFRqYmJRc1RqNytUaUVGCkN1WnJzam44U1l3czRaMlJ6bE9na3prem9FdHZCY3hwZXhDQUNkZ2ZyR3dBd3ZNVTQyS2hxeXg4bHptQm1HMWIKZ3R4MUNQQW12TjUxd05UUjVvL1JMWURQb2Nhc1dPMU9tT0lLQmplKzhHTGFNMnFqcmkyb3p6YTNoMERnekF5OQpQL0h0dGNuZ042WlZCcTYyU2gyR3hZOGxaL2Zod0N6R2w3TDlzWkk5TDdBUG81bnZRVHF2TlBEbUVnMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  namespace: aXN0aW8tc3lzdGVt
  token: >-
    ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpMTRTelJ0UkhoR2RVTXlkbHBFYlZGRldWOXNVMDB4Y0RKVlRXc3liSGR5ZVdndFpscE1aM2hqY1VFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpwYzNScGJ5MXplWE4wWlcwaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaVkyeDFjM1JsY2kxc2IyTmhiQzFuWVhSbGQyRjVMWE5sY25acFkyVXRZV05qYjNWdWRDMTBiMnRsYmkwMWJYaDBkaUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG01aGJXVWlPaUpqYkhWemRHVnlMV3h2WTJGc0xXZGhkR1YzWVhrdGMyVnlkbWxqWlMxaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTUdaaFltTm1Oamt0TWpJM01DMDBPVGRtTFRrd05EWXRZVFkwTm1FeVlXSmtNelZsSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tbHpkR2x2TFhONWMzUmxiVHBqYkhWemRHVnlMV3h2WTJGc0xXZGhkR1YzWVhrdGMyVnlkbWxqWlMxaFkyTnZkVzUwSW4wLlg5ZExxZk9oNGJ0cW9zWmwyemxkOEJxNEh4R29LVXdJNTR4VnFQUzBpOC1pcnlKSTh2cUxyZkw3RDdTb2E3RHRVUjI5bTBlZGFOVnJoWE9XU3VrQkFhWWl4SHkxUl9jb0RLRTNZcUQzOFJLNHBOdXlQQW1ONVlaNnd2Rkt6Z0Iycmhpb0RZSC1kTHNLMVBxNkpfTFVscmpkLVVyQ19XZjU3UllYcDY5UElaUmo2R2xOdEZWMmJILUFmS24ybVQ3SUZpY3hWUFJjWWpkZ1MtZWxrSWoyeEpac2tVTGdJaHkxVG51YnpQR3EyU21Mb2lMZFpTYnhHamFHbHZJYmhUd1pHTVd3VjRETFlHb1N5dUhPTnlhWFJ5SW1sUnpNZk80Wkg0U0g4ZnpjdUl4Zk8tVWpEMGxCeHJORHhpeExmQ0QwczBFT3YxblF0MVBrNHF3ZzQwWTBwdw==
type: kubernetes.io/service-account-token
kind: Secret
apiVersion: v1

---
metadata:
  name: istio-ca-secret
  namespace: istio-system
  managedFields:
    - manager: istio_ca
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:22Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:ca-cert.pem': {}
          'f:ca-key.pem': {}
          'f:cert-chain.pem': {}
          'f:key.pem': {}
          'f:root-cert.pem': {}
        'f:type': {}
data:
  ca-cert.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRQVdMTTRlb0RhRDlzR29icFNIVnRYVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU1sb1hEVE13TURnegpNVEF3TWpZeU1sb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNGtPSUJ4Zkd0cUNGa0ZadTRlSHNINFhYbEVKcFY4UTdjOG15NnoKcExIS2FJVXVQNnh0L0pUVGp3cHlUbXFPWW53TFpCdWV1aFAxY25VSXRsczZRSDl1djNVK0VvbU9EcUtWMUlWcApNYzZ4VFhBaUMrVHcrSkpoNVNZL2w0QVIxN29LWi9hTi9vVXNKVGdEUnJGNmtiRmk1OEhXZ0ZDbVVub095UGVjClBza3NTMDBpSU95VDZ5cHB1ZjhKTFZXVkgvQmpNbHgxWHcwNERkZDN5ZVBDMWNSb0NDTnNpQjZmZmRtNEZWL20KL1libU5vMEVwc2FMUG5VWWNXa0M2UFQ0U1hUcjB2ZThaSG5Ub0ZJZzRlNytybmJHUEZYdURmNUg0YW4vRUNRegp1SEpQVm5kZTJvU0NzZ0I4a1JhWFNxZjBFcTZQMmMrYm83cS9TamkrK0JqSW1oY0NBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUVrcEkyRDZESE5YNVhtUVlRSkl0L3lmeTJIYlhRckN6ZGdFRnlJWFl1U2NTYkVxZGpTc3FFY0J4dHd0NFBMNwpyV3ovVzN6MnhBanp5bzE1N2VMaVd4RUo2SHZsT3FTNzFIZVd3WUM0RGQ3ZS85U2MwWGMyMEhOYk14bS9Sb213ClFUZ2lkeEY2UHhZMW9icjVNT0JXQ1VjTVFCNlM4Q3d0MzZvSTZkYXN4bHNzQytVZWlDdkxqZDV2YzZlbk9hRkwKWVh0WkZFd1JGUXg1bDRTSlhwTmRWZ1VUV0VSeU1XdlhHd0NWbkFwV1lvQlpVZ1B4TjdCTTkzbUdtWGdzZVBtUgpUSWxteHVQN3FCQ0s1RXRYT0NnL0FLa09jcktFaTJxNHB4b1JvVk5veXlCOXlRQVdzRlhLbHhYZmZxL1U5MWtkCmp0ZHM5NXZVV0g5VUpjZnBUTnV3NllRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  ca-key.pem: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmlRNGdIRjhhMm9JV1FWbTdoNGV3ZmhkZVVRbWxYeER0enliTHJPa3NjcG9oUzQvCnJHMzhsTk9QQ25KT2FvNWlmQXRrRzU2NkUvVnlkUWkyV3pwQWYyNi9kVDRTaVk0T29wWFVoV2t4enJGTmNDSUwKNVBENGttSGxKaitYZ0JIWHVncG45bzMraFN3bE9BTkdzWHFSc1dMbndkYUFVS1pTZWc3STk1dyt5U3hMVFNJZwo3SlByS21tNS93a3RWWlVmOEdNeVhIVmZEVGdOMTNmSjQ4TFZ4R2dJSTJ5SUhwOTkyYmdWWCtiOWh1WTJqUVNtCnhvcytkUmh4YVFMbzlQaEpkT3ZTOTd4a2VkT2dVaURoN3Y2dWRzWThWZTROL2tmaHFmOFFKRE80Y2s5V2QxN2EKaElLeUFIeVJGcGRLcC9RU3JvL1p6NXVqdXI5S09MNzRHTWlhRndJREFRQUJBb0lCQUdjbSswZ2pTUjUwM2FaOQoyY05ncjhzSFZKNlBMR2Q0akx3QnN5WjQ2dVpSS3JibHlrRmZRZUh6aSt4YzZ0SEFBUW5PbkRhbnU4ZE1KeFg2CjdnTTc3UFcxUFVUN3NjN1NOSHBiMG5tMkFnRmlDdUxFZGJOMFQwWUt1ZWd3STU2bEQyV3NjNDQ4cGxIVkN6UUMKQXY0UndxeDdQY1BZL0svRUs0WndNdkt4M3hYL2MydDRtRDFpakNOSFMxWHcwamZVNnduQ3hhVEFmcVEzMjdhbApVNCtiYXpGdlFaaE9DUSttKytFaFo5NzArTFlrQ2hjalNVU0ZYbnZHbERoV0VnNy9wdkJ1aytTUkZmQndUQzJXCjl1R2Q2cUlPNC9qa3kwQjFXWXRoWVpoWjMrelZtcEVodUlNNDJqUTU0SXFGMU43a1ptZXBESTV6MXpabjBScmMKUmNlMndLRUNnWUVBeW1Cd3RXbTBLNThYSkIyNjkveCs2ajNtU21yS2hSWXY0T0IycUdibHpDaTY3YlZ0MUpmNAovMjFhd2g1cE5uN0tKWUhyZHVYVHpaZHJZVGR1cnhIZ29BeTlwNHNPem1ZeHlmT0hkN1lzN0w2M1ZWMzR5dUQrCnh0NzRGSGJZNWZWQWRIVHljYnZKNzhTNXh1SDA5OFkwS0pQS2xsYUU4T3JnSE1KRjhTTVVHUzhDZ1lFQThJWFgKK1BnQXlXVkFYVDk0Vis4QTU2dHlod2Y4eEQ1aUttbU56eCt5M2VHMEJjU1dyUG5YTnV4Z2ZIUVRIVWlQdXhQWQpGQy9RakdDVm9pcVFWY210YWhLSFpNSjBvTXRQZlhtcUMxVCs0dkVBY1pyaG1yQ2trOU02bmVOR1NQRm5ldGFLCjdVTlkvNmlrdXZBa1dmWTBMUUpzUzM5c0RhMmVvektNcWorbUE1a0NnWUVBaTd5emxrLzZlL1JKd2tKVkMwNXAKUTh5aDZ0aDZKaEwvMUVLcEsvYUF6Y3VCNXdqVFlXdmVIbUNmdmxISlREdVgwUFk0WTh5bHh0dTY1VkdsTjNVYwpxT2FqUGNDaTVKbGozNUlzQTlqaWhFWGJ5VEl0eThnM281SHBzaGV1Qkhxbm1zSDFkZHE0d0xvUm5PWUFnK1Z6CnRtRDJEWUNJSXVITEJaQ1BRc1Y1NXprQ2dZQkdTN2Z0YWY1QTNqakxpQXRTRitZNXoxL3ZteVFDN3dDZHlLL0wKZzBZeGx3K1lSL2FKbzVPRTE5enpRckY3YzRPZWQ1UkZnaHYvaXhMd2pHUVd6cFRDVlp3QWxOeWxTZ1ozYzZHQgpJbHhFVTQ5L3BIYWZVVlVvWnluUWoyWXhWMnlZK0M4dVhPcWIvZHYzVHN3eEJzWUZDWnBCRG9LMEZMUXlta21HClVJZmlzUUtCZ0NKUXEvN0Zmd2FBRXMwU3pnY2tFWFUwU0EzN2JVOFB5bUZnQ0lvdUh6cjNkNXQ3TmNadzlmSEwKVVR1ZTlTdVpWS2hpZytNZmRVdEhid0JMNjd4dmI4Ynh0c1ZtQklwYjJGNjRHZzB3bzhOdmxkalZVNzRPYzM4cQp2RGdBNy90VmdRSWE4eVZrelM1bTNoazQvVTB2QWkvWUZnL0I3RVdFblVwVVN2VW9kS29vCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  cert-chain.pem: ''
  key.pem: ''
  root-cert.pem: ''
type: istio.io/ca-root
kind: Secret
apiVersion: v1

---
metadata:
  name: istio-citadel-service-account-token-8b79p
  namespace: istio-system
  annotations:
    kubernetes.io/service-account.name: istio-citadel-service-account
    kubernetes.io/service-account.uid: 2406367a-e333-4ec7-a2f9-a29fef83f52e
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:ca.crt': {}
          'f:namespace': {}
          'f:token': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubernetes.io/service-account.name': {}
            'f:kubernetes.io/service-account.uid': {}
        'f:type': {}
data:
  ca.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EZ3hPREF6TVRZek5sb1hEVE13TURneE5qQXpNVFl6Tmxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTURqCi9idld2NHl3cEZwazErT0ZTVFhmNE9wSUoxNXdhNVZuSURYN2x4MHlqdjJlcll3aUVVZ0gwWDdCSlh3TTlpNG4KeVphSHNtcnY0RGRkekNxS25jSlZBanRQTk9kemNOd1IxS0twY2JaNzNWODdZeDNNSVZaZi9vU0tLdDcvLzNwSwp1dWxmWGtabU5KRktYQW96QTNyZjg5bWtpZVpRRlgwN0V1K2VSNDdweGkzMTNkTnJQT0xXSlhVd1VhVDhKT2YrCi9DWDZxOW1vQ01CVnR5eUY2UkxoaGp0VG9wdnZrSWlveXNTbTByNkNiejBYc0RwUlBkZUtHWXU0WjVYSlVrcFgKZ3FNUDh4RktsLzJhWERLeng4ZGdjckk5V0h3UXR3MmtXK3ZGSHN0RnRwdG1OdFExN01jaGJERHJDd00rcFhVeAovbFE2RWE4ZkIxckM4c09WR1U4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGeVI0eTgzTHNtcjl4a1Uwd2lUc0gzdXRvbisKYzJGeXMyZy9jNXRwUUxXSDZUZFczZ01OWjhMTk5BNDgzdkE1NEFZeG1jbWJzeklCYnhwekVZRE1kT0FQSFRqagowaUpZei9Ra0ZveThuSFFUNk9Yd0xjQk9iRmJnQktNdlRQRGNFNjZ0YWNMdUYrWXMxVFRqYmJRc1RqNytUaUVGCkN1WnJzam44U1l3czRaMlJ6bE9na3prem9FdHZCY3hwZXhDQUNkZ2ZyR3dBd3ZNVTQyS2hxeXg4bHptQm1HMWIKZ3R4MUNQQW12TjUxd05UUjVvL1JMWURQb2Nhc1dPMU9tT0lLQmplKzhHTGFNMnFqcmkyb3p6YTNoMERnekF5OQpQL0h0dGNuZ042WlZCcTYyU2gyR3hZOGxaL2Zod0N6R2w3TDlzWkk5TDdBUG81bnZRVHF2TlBEbUVnMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  namespace: aXN0aW8tc3lzdGVt
  token: >-
    ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpMTRTelJ0UkhoR2RVTXlkbHBFYlZGRldWOXNVMDB4Y0RKVlRXc3liSGR5ZVdndFpscE1aM2hqY1VFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpwYzNScGJ5MXplWE4wWlcwaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaWFYTjBhVzh0WTJsMFlXUmxiQzF6WlhKMmFXTmxMV0ZqWTI5MWJuUXRkRzlyWlc0dE9HSTNPWEFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1dVlXMWxJam9pYVhOMGFXOHRZMmwwWVdSbGJDMXpaWEoyYVdObExXRmpZMjkxYm5RaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lJeU5EQTJNelkzWVMxbE16TXpMVFJsWXpjdFlUSm1PUzFoTWpsbVpXWTRNMlkxTW1VaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZhWE4wYVc4dGMzbHpkR1Z0T21semRHbHZMV05wZEdGa1pXd3RjMlZ5ZG1salpTMWhZMk52ZFc1MEluMC5nSUxGel96TkR2ZTFuY1BUa05wN05NT1hSVDVkRndfb014bkRONU9SbjcwQWdEVk9OcGwyczBFNUw3ZXU4OTlwTHNZeWd3d210dTNXSzRNUHdXdkktT1diQUwwN2V5WkdvRV9lVUNqN25raEN5Szh0bVdCQm5hV3JVUFJJNHREWERhS1kzWFVUSnpOaGdkMzdTdW5OeEdlRWpvZDZ4Y1BEVmUxaFNkUUtxdGxOSTRycDhxVUkyT0xxSHNGTXNfcmdxOHVncGhROHVjLUpCMXJtX2lIOERuNXc0OWkzTm1pUHBvS0dQM1dXUkxEbDgxbWp4S3lMZHcweTlqOXBKcTZwY0VGZHRUSnUtcmRaMVM4d2NjSGl1V1ZaaUxfSDgyZVNUWVRONlFZTnNtblZfcmxKZHBOYUxndk1IYVQ1SDlZVlM0TWtYdGd1SEJMdFFPZlRRTjFucWc=
type: kubernetes.io/service-account-token
kind: Secret
apiVersion: v1

---
metadata:
  name: istio-galley-service-account-token-hq7ws
  namespace: istio-system
  annotations:
    kubernetes.io/service-account.name: istio-galley-service-account
    kubernetes.io/service-account.uid: 77e7a66e-65a8-4e7f-9a41-4974d1c9d514
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:ca.crt': {}
          'f:namespace': {}
          'f:token': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubernetes.io/service-account.name': {}
            'f:kubernetes.io/service-account.uid': {}
        'f:type': {}
data:
  ca.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EZ3hPREF6TVRZek5sb1hEVE13TURneE5qQXpNVFl6Tmxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTURqCi9idld2NHl3cEZwazErT0ZTVFhmNE9wSUoxNXdhNVZuSURYN2x4MHlqdjJlcll3aUVVZ0gwWDdCSlh3TTlpNG4KeVphSHNtcnY0RGRkekNxS25jSlZBanRQTk9kemNOd1IxS0twY2JaNzNWODdZeDNNSVZaZi9vU0tLdDcvLzNwSwp1dWxmWGtabU5KRktYQW96QTNyZjg5bWtpZVpRRlgwN0V1K2VSNDdweGkzMTNkTnJQT0xXSlhVd1VhVDhKT2YrCi9DWDZxOW1vQ01CVnR5eUY2UkxoaGp0VG9wdnZrSWlveXNTbTByNkNiejBYc0RwUlBkZUtHWXU0WjVYSlVrcFgKZ3FNUDh4RktsLzJhWERLeng4ZGdjckk5V0h3UXR3MmtXK3ZGSHN0RnRwdG1OdFExN01jaGJERHJDd00rcFhVeAovbFE2RWE4ZkIxckM4c09WR1U4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGeVI0eTgzTHNtcjl4a1Uwd2lUc0gzdXRvbisKYzJGeXMyZy9jNXRwUUxXSDZUZFczZ01OWjhMTk5BNDgzdkE1NEFZeG1jbWJzeklCYnhwekVZRE1kT0FQSFRqagowaUpZei9Ra0ZveThuSFFUNk9Yd0xjQk9iRmJnQktNdlRQRGNFNjZ0YWNMdUYrWXMxVFRqYmJRc1RqNytUaUVGCkN1WnJzam44U1l3czRaMlJ6bE9na3prem9FdHZCY3hwZXhDQUNkZ2ZyR3dBd3ZNVTQyS2hxeXg4bHptQm1HMWIKZ3R4MUNQQW12TjUxd05UUjVvL1JMWURQb2Nhc1dPMU9tT0lLQmplKzhHTGFNMnFqcmkyb3p6YTNoMERnekF5OQpQL0h0dGNuZ042WlZCcTYyU2gyR3hZOGxaL2Zod0N6R2w3TDlzWkk5TDdBUG81bnZRVHF2TlBEbUVnMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  namespace: aXN0aW8tc3lzdGVt
  token: >-
    ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpMTRTelJ0UkhoR2RVTXlkbHBFYlZGRldWOXNVMDB4Y0RKVlRXc3liSGR5ZVdndFpscE1aM2hqY1VFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpwYzNScGJ5MXplWE4wWlcwaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaWFYTjBhVzh0WjJGc2JHVjVMWE5sY25acFkyVXRZV05qYjNWdWRDMTBiMnRsYmkxb2NUZDNjeUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG01aGJXVWlPaUpwYzNScGJ5MW5ZV3hzWlhrdGMyVnlkbWxqWlMxaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTnpkbE4yRTJObVV0TmpWaE9DMDBaVGRtTFRsaE5ERXRORGszTkdReFl6bGtOVEUwSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tbHpkR2x2TFhONWMzUmxiVHBwYzNScGJ5MW5ZV3hzWlhrdGMyVnlkbWxqWlMxaFkyTnZkVzUwSW4wLmVqSEZ6YVgxanc3VDRNMHRlbm1DbVByX1dLYm1PdWNnQ3BVeUhGdzYtQk5jbk5rdWx3N3o5Nng0LXpwSndpZ0c4TzllMEdaREF2OXNhRFlmV3JwYlhSTF85YjlieTdGRFc5WmlzeTBVY2tKZUNJMDZ3c3BlcnJVWlNpbHIydkNlbHR3SEVWSWF4X2ppRjk5TGc5bUJzSFduNElfWWdoVzloMEFfRmZzOEZrSjR4N0dqYk1XUTA2RzJrUHhLT2dSdXNXdHhTVDNmRlN4MkYtSUFSQ25PaDlGY25waVhlOXFRdU02VmpuRGxiLWtiYkg0UkI4ZkVLTkRuVmxucHlEY2NLZlV2MTBtcnpuNzl6NnBuYXFKa0lfR0VRVUg5Wk5aUFp3TFJ0UVhud00wOXR3ZWZTeGp3SXE3aHFmT2JzQVlkdTFiaEI3eW9jZEE5U3M5dnVpZlp3UQ==
type: kubernetes.io/service-account-token
kind: Secret
apiVersion: v1

---
metadata:
  name: istio-ingressgateway-service-account-token-95p9c
  namespace: istio-system
  annotations:
    kubernetes.io/service-account.name: istio-ingressgateway-service-account
    kubernetes.io/service-account.uid: 1f11a438-3414-453c-b7db-64005ea023ca
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:ca.crt': {}
          'f:namespace': {}
          'f:token': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubernetes.io/service-account.name': {}
            'f:kubernetes.io/service-account.uid': {}
        'f:type': {}
data:
  ca.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EZ3hPREF6TVRZek5sb1hEVE13TURneE5qQXpNVFl6Tmxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTURqCi9idld2NHl3cEZwazErT0ZTVFhmNE9wSUoxNXdhNVZuSURYN2x4MHlqdjJlcll3aUVVZ0gwWDdCSlh3TTlpNG4KeVphSHNtcnY0RGRkekNxS25jSlZBanRQTk9kemNOd1IxS0twY2JaNzNWODdZeDNNSVZaZi9vU0tLdDcvLzNwSwp1dWxmWGtabU5KRktYQW96QTNyZjg5bWtpZVpRRlgwN0V1K2VSNDdweGkzMTNkTnJQT0xXSlhVd1VhVDhKT2YrCi9DWDZxOW1vQ01CVnR5eUY2UkxoaGp0VG9wdnZrSWlveXNTbTByNkNiejBYc0RwUlBkZUtHWXU0WjVYSlVrcFgKZ3FNUDh4RktsLzJhWERLeng4ZGdjckk5V0h3UXR3MmtXK3ZGSHN0RnRwdG1OdFExN01jaGJERHJDd00rcFhVeAovbFE2RWE4ZkIxckM4c09WR1U4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGeVI0eTgzTHNtcjl4a1Uwd2lUc0gzdXRvbisKYzJGeXMyZy9jNXRwUUxXSDZUZFczZ01OWjhMTk5BNDgzdkE1NEFZeG1jbWJzeklCYnhwekVZRE1kT0FQSFRqagowaUpZei9Ra0ZveThuSFFUNk9Yd0xjQk9iRmJnQktNdlRQRGNFNjZ0YWNMdUYrWXMxVFRqYmJRc1RqNytUaUVGCkN1WnJzam44U1l3czRaMlJ6bE9na3prem9FdHZCY3hwZXhDQUNkZ2ZyR3dBd3ZNVTQyS2hxeXg4bHptQm1HMWIKZ3R4MUNQQW12TjUxd05UUjVvL1JMWURQb2Nhc1dPMU9tT0lLQmplKzhHTGFNMnFqcmkyb3p6YTNoMERnekF5OQpQL0h0dGNuZ042WlZCcTYyU2gyR3hZOGxaL2Zod0N6R2w3TDlzWkk5TDdBUG81bnZRVHF2TlBEbUVnMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  namespace: aXN0aW8tc3lzdGVt
  token: >-
    ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpMTRTelJ0UkhoR2RVTXlkbHBFYlZGRldWOXNVMDB4Y0RKVlRXc3liSGR5ZVdndFpscE1aM2hqY1VFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpwYzNScGJ5MXplWE4wWlcwaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaWFYTjBhVzh0YVc1bmNtVnpjMmRoZEdWM1lYa3RjMlZ5ZG1salpTMWhZMk52ZFc1MExYUnZhMlZ1TFRrMWNEbGpJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbWx6ZEdsdkxXbHVaM0psYzNObllYUmxkMkY1TFhObGNuWnBZMlV0WVdOamIzVnVkQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJakZtTVRGaE5ETTRMVE0wTVRRdE5EVXpZeTFpTjJSaUxUWTBNREExWldFd01qTmpZU0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcGMzUnBieTF6ZVhOMFpXMDZhWE4wYVc4dGFXNW5jbVZ6YzJkaGRHVjNZWGt0YzJWeWRtbGpaUzFoWTJOdmRXNTBJbjAuRW16OGtlRWlaWDVPaElLTTBSbG0xVTdJYmt2dUUxZHF0S1VWdGhyU3VfMlQzclFYS0RITHUzNk9HbjJwMDh2Y0ZVUGhwbk1sOEFndHpGV3ZCRXhaYWpXQVdCZUJuSVVtQUF3NVIyTUdNMHRfZi1tVW43Ymp1UzR0c3JadjFVdWZCWm4xN0VOQjAtYzlTNFA1TjFvamFEZEUycHRTVU50SGhGS3FwUzNkWHhPMzRLVWdUQU9TZk9Lci1yVEtWbTNkbEVQd2FoUmdzZHFHY1oxNlZWdnZFM2VUaGVtbmV1ZnRpSVhyMzNjRHVfZzRqRlB5UTE3V2xIWHNESThJOFlJUktuNS16dWtIZ3llVnpnVGw2aF9nMVhjQ29QbjcwLUpFcmdBcTFPTFJ6M3AtaXdEeTR3ZTRueFZSVTdCcHcyQ2M3T2ZwZl9VbmxPLXpieGVZOXVxN2Nn
type: kubernetes.io/service-account-token
kind: Secret
apiVersion: v1

---
metadata:
  name: istio-mixer-service-account-token-bnpf9
  namespace: istio-system
  annotations:
    kubernetes.io/service-account.name: istio-mixer-service-account
    kubernetes.io/service-account.uid: 74657186-ecfc-4af3-855a-ed23e68d458d
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:ca.crt': {}
          'f:namespace': {}
          'f:token': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubernetes.io/service-account.name': {}
            'f:kubernetes.io/service-account.uid': {}
        'f:type': {}
data:
  ca.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EZ3hPREF6TVRZek5sb1hEVE13TURneE5qQXpNVFl6Tmxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTURqCi9idld2NHl3cEZwazErT0ZTVFhmNE9wSUoxNXdhNVZuSURYN2x4MHlqdjJlcll3aUVVZ0gwWDdCSlh3TTlpNG4KeVphSHNtcnY0RGRkekNxS25jSlZBanRQTk9kemNOd1IxS0twY2JaNzNWODdZeDNNSVZaZi9vU0tLdDcvLzNwSwp1dWxmWGtabU5KRktYQW96QTNyZjg5bWtpZVpRRlgwN0V1K2VSNDdweGkzMTNkTnJQT0xXSlhVd1VhVDhKT2YrCi9DWDZxOW1vQ01CVnR5eUY2UkxoaGp0VG9wdnZrSWlveXNTbTByNkNiejBYc0RwUlBkZUtHWXU0WjVYSlVrcFgKZ3FNUDh4RktsLzJhWERLeng4ZGdjckk5V0h3UXR3MmtXK3ZGSHN0RnRwdG1OdFExN01jaGJERHJDd00rcFhVeAovbFE2RWE4ZkIxckM4c09WR1U4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGeVI0eTgzTHNtcjl4a1Uwd2lUc0gzdXRvbisKYzJGeXMyZy9jNXRwUUxXSDZUZFczZ01OWjhMTk5BNDgzdkE1NEFZeG1jbWJzeklCYnhwekVZRE1kT0FQSFRqagowaUpZei9Ra0ZveThuSFFUNk9Yd0xjQk9iRmJnQktNdlRQRGNFNjZ0YWNMdUYrWXMxVFRqYmJRc1RqNytUaUVGCkN1WnJzam44U1l3czRaMlJ6bE9na3prem9FdHZCY3hwZXhDQUNkZ2ZyR3dBd3ZNVTQyS2hxeXg4bHptQm1HMWIKZ3R4MUNQQW12TjUxd05UUjVvL1JMWURQb2Nhc1dPMU9tT0lLQmplKzhHTGFNMnFqcmkyb3p6YTNoMERnekF5OQpQL0h0dGNuZ042WlZCcTYyU2gyR3hZOGxaL2Zod0N6R2w3TDlzWkk5TDdBUG81bnZRVHF2TlBEbUVnMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  namespace: aXN0aW8tc3lzdGVt
  token: >-
    ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpMTRTelJ0UkhoR2RVTXlkbHBFYlZGRldWOXNVMDB4Y0RKVlRXc3liSGR5ZVdndFpscE1aM2hqY1VFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpwYzNScGJ5MXplWE4wWlcwaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaWFYTjBhVzh0YldsNFpYSXRjMlZ5ZG1salpTMWhZMk52ZFc1MExYUnZhMlZ1TFdKdWNHWTVJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbWx6ZEdsdkxXMXBlR1Z5TFhObGNuWnBZMlV0WVdOamIzVnVkQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJamMwTmpVM01UZzJMV1ZqWm1NdE5HRm1NeTA0TlRWaExXVmtNak5sTmpoa05EVTRaQ0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcGMzUnBieTF6ZVhOMFpXMDZhWE4wYVc4dGJXbDRaWEl0YzJWeWRtbGpaUzFoWTJOdmRXNTBJbjAuTTY5U09Qa0VnT0hTYXNLY0RSSXJKcGdDbXJIeEQ2UWtFLWdtNkNCTldkY3NrbDNRRTFXMnJ3cWo5aHVVQUNfQi14ZG5MQW1WTkEwcWxYbGRMZ1V3UEF5TDVpTFpUOEItbmp6a3FvSmg3OXkwZEZXQkZXZEFtZ1NEWU5XVVpDSkJ2azFQb185cnI0ZFVBWWhEV0RmNS0yVy1Xa2lQdHdfTy13akEyYWJJTTcycVVnQlpic3Axb3F3WmlCNERHU3k1d3p5TU5aNnVjMVhhZGZhcVp5NTY1LXkwSjVHeWNsWEVDQTRoYzZ3eWVjWkRjdF9NNWpFNkJhaHJ3VXlXaGVvM0NaVFppcWZOcWZnU2lNVG9tOENiQUluY1pQTXI2TU9PZlg2N042U3Z6RF9sYTJ3S3AzaFg5TVFIUFNTaGdBSmVfcHRUSktDVDlaR2M1ODJNWTJiemJR
type: kubernetes.io/service-account-token
kind: Secret
apiVersion: v1

---
metadata:
  name: istio-multi-token-kbpg8
  namespace: istio-system
  annotations:
    kubernetes.io/service-account.name: istio-multi
    kubernetes.io/service-account.uid: a77c01a6-58fa-4a7c-835a-c57fb712a633
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:ca.crt': {}
          'f:namespace': {}
          'f:token': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubernetes.io/service-account.name': {}
            'f:kubernetes.io/service-account.uid': {}
        'f:type': {}
data:
  ca.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EZ3hPREF6TVRZek5sb1hEVE13TURneE5qQXpNVFl6Tmxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTURqCi9idld2NHl3cEZwazErT0ZTVFhmNE9wSUoxNXdhNVZuSURYN2x4MHlqdjJlcll3aUVVZ0gwWDdCSlh3TTlpNG4KeVphSHNtcnY0RGRkekNxS25jSlZBanRQTk9kemNOd1IxS0twY2JaNzNWODdZeDNNSVZaZi9vU0tLdDcvLzNwSwp1dWxmWGtabU5KRktYQW96QTNyZjg5bWtpZVpRRlgwN0V1K2VSNDdweGkzMTNkTnJQT0xXSlhVd1VhVDhKT2YrCi9DWDZxOW1vQ01CVnR5eUY2UkxoaGp0VG9wdnZrSWlveXNTbTByNkNiejBYc0RwUlBkZUtHWXU0WjVYSlVrcFgKZ3FNUDh4RktsLzJhWERLeng4ZGdjckk5V0h3UXR3MmtXK3ZGSHN0RnRwdG1OdFExN01jaGJERHJDd00rcFhVeAovbFE2RWE4ZkIxckM4c09WR1U4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGeVI0eTgzTHNtcjl4a1Uwd2lUc0gzdXRvbisKYzJGeXMyZy9jNXRwUUxXSDZUZFczZ01OWjhMTk5BNDgzdkE1NEFZeG1jbWJzeklCYnhwekVZRE1kT0FQSFRqagowaUpZei9Ra0ZveThuSFFUNk9Yd0xjQk9iRmJnQktNdlRQRGNFNjZ0YWNMdUYrWXMxVFRqYmJRc1RqNytUaUVGCkN1WnJzam44U1l3czRaMlJ6bE9na3prem9FdHZCY3hwZXhDQUNkZ2ZyR3dBd3ZNVTQyS2hxeXg4bHptQm1HMWIKZ3R4MUNQQW12TjUxd05UUjVvL1JMWURQb2Nhc1dPMU9tT0lLQmplKzhHTGFNMnFqcmkyb3p6YTNoMERnekF5OQpQL0h0dGNuZ042WlZCcTYyU2gyR3hZOGxaL2Zod0N6R2w3TDlzWkk5TDdBUG81bnZRVHF2TlBEbUVnMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  namespace: aXN0aW8tc3lzdGVt
  token: >-
    ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpMTRTelJ0UkhoR2RVTXlkbHBFYlZGRldWOXNVMDB4Y0RKVlRXc3liSGR5ZVdndFpscE1aM2hqY1VFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpwYzNScGJ5MXplWE4wWlcwaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaWFYTjBhVzh0YlhWc2RHa3RkRzlyWlc0dGEySndaemdpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1dVlXMWxJam9pYVhOMGFXOHRiWFZzZEdraUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lKaE56ZGpNREZoTmkwMU9HWmhMVFJoTjJNdE9ETTFZUzFqTlRkbVlqY3hNbUUyTXpNaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZhWE4wYVc4dGMzbHpkR1Z0T21semRHbHZMVzExYkhScEluMC50QnRqRUwtYjluVmJZbV9tSGZDYjI4aC1Jb2kxekYxdzlESks1azFVSUdrWFVtajdlcE1jS2FydndidXZjUkxDcy02cVBGak1LR0ZJdEx2Wk0zNFo2XzhQRU1vV0h4blZ5ZlQ4NjhvSGU0aTVkQ1VEZ2tlUHdFZHdIMDFrWWJ5ZGtkRE5MVS1HSG5XOVJCR1NHRy1jUTZBQ0JVdXNaTl9xQTkwd1owWlkwTGxSdV9VOWhtaTZKSG9TWWtnYjd6cHBZQm1hVE50c1Fpc0JhLXpJdHhrSjFSUzFPamVUSTdOYmVJLUxwUm1hZjZyOEdRdW1rX2o2VWRZYzdkYklmSmNTRGptUHlsUnZRWUpFMnpOVVcyaWdjTkFHazI2YWpvWXlpSVpEckVQTHlvRkpTNUlRVXVjTWlDSnYtaTFBNDNUTVNvZnpaWjQ5ZW9FYjA3NUVCQlpvcUE=
type: kubernetes.io/service-account-token
kind: Secret
apiVersion: v1

---
metadata:
  name: istio-nodeagent-service-account-token-lz6g9
  namespace: istio-system
  annotations:
    kubernetes.io/service-account.name: istio-nodeagent-service-account
    kubernetes.io/service-account.uid: 1b3e1842-d1e0-443e-853f-93538e56f4b7
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:ca.crt': {}
          'f:namespace': {}
          'f:token': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubernetes.io/service-account.name': {}
            'f:kubernetes.io/service-account.uid': {}
        'f:type': {}
data:
  ca.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EZ3hPREF6TVRZek5sb1hEVE13TURneE5qQXpNVFl6Tmxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTURqCi9idld2NHl3cEZwazErT0ZTVFhmNE9wSUoxNXdhNVZuSURYN2x4MHlqdjJlcll3aUVVZ0gwWDdCSlh3TTlpNG4KeVphSHNtcnY0RGRkekNxS25jSlZBanRQTk9kemNOd1IxS0twY2JaNzNWODdZeDNNSVZaZi9vU0tLdDcvLzNwSwp1dWxmWGtabU5KRktYQW96QTNyZjg5bWtpZVpRRlgwN0V1K2VSNDdweGkzMTNkTnJQT0xXSlhVd1VhVDhKT2YrCi9DWDZxOW1vQ01CVnR5eUY2UkxoaGp0VG9wdnZrSWlveXNTbTByNkNiejBYc0RwUlBkZUtHWXU0WjVYSlVrcFgKZ3FNUDh4RktsLzJhWERLeng4ZGdjckk5V0h3UXR3MmtXK3ZGSHN0RnRwdG1OdFExN01jaGJERHJDd00rcFhVeAovbFE2RWE4ZkIxckM4c09WR1U4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGeVI0eTgzTHNtcjl4a1Uwd2lUc0gzdXRvbisKYzJGeXMyZy9jNXRwUUxXSDZUZFczZ01OWjhMTk5BNDgzdkE1NEFZeG1jbWJzeklCYnhwekVZRE1kT0FQSFRqagowaUpZei9Ra0ZveThuSFFUNk9Yd0xjQk9iRmJnQktNdlRQRGNFNjZ0YWNMdUYrWXMxVFRqYmJRc1RqNytUaUVGCkN1WnJzam44U1l3czRaMlJ6bE9na3prem9FdHZCY3hwZXhDQUNkZ2ZyR3dBd3ZNVTQyS2hxeXg4bHptQm1HMWIKZ3R4MUNQQW12TjUxd05UUjVvL1JMWURQb2Nhc1dPMU9tT0lLQmplKzhHTGFNMnFqcmkyb3p6YTNoMERnekF5OQpQL0h0dGNuZ042WlZCcTYyU2gyR3hZOGxaL2Zod0N6R2w3TDlzWkk5TDdBUG81bnZRVHF2TlBEbUVnMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  namespace: aXN0aW8tc3lzdGVt
  token: >-
    ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpMTRTelJ0UkhoR2RVTXlkbHBFYlZGRldWOXNVMDB4Y0RKVlRXc3liSGR5ZVdndFpscE1aM2hqY1VFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpwYzNScGJ5MXplWE4wWlcwaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaWFYTjBhVzh0Ym05a1pXRm5aVzUwTFhObGNuWnBZMlV0WVdOamIzVnVkQzEwYjJ0bGJpMXNlalpuT1NJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKcGMzUnBieTF1YjJSbFlXZGxiblF0YzJWeWRtbGpaUzFoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1ZFdsa0lqb2lNV0l6WlRFNE5ESXRaREZsTUMwME5ETmxMVGcxTTJZdE9UTTFNemhsTlRabU5HSTNJaXdpYzNWaUlqb2ljM2x6ZEdWdE9uTmxjblpwWTJWaFkyTnZkVzUwT21semRHbHZMWE41YzNSbGJUcHBjM1JwYnkxdWIyUmxZV2RsYm5RdGMyVnlkbWxqWlMxaFkyTnZkVzUwSW4wLkkyTFF5c1hfcVZ5d0s5UGZLTDFscnBsdTY5LVc0TTRtVWgwalJZYnFmRFp5blVfT2h6aVpHcVlwZHZKVUw3RHByZF9HMl84SXZkYnAwdkVkM2gxaFFjUUdybDY1dG5FaWxxRXZsWGh3MHdIWC1vLWMxMU1GYWNsZ2hFLTVqbkV1SDh6d2N6aWJqUHkyUzBWOUFFMHFqOXA1b29uc2ZfNlRmSUVsaGU2YUdNQVFHRzhPNHlhV1FPNFMyT2NSam9DelN4NHhhWHUtQi1NWXpvMG42Zllxb2V6bm1YYXR0a2tRRmxiTDN3b0Z1RDNsT3JlOWZiLXZvRnN0RUFVajdVOGdnYnFIcm5CQUs4cm42S2I5MlRqYk4zek03bE1xRkNtaXRfTy1rTkN1eVBtWVhZdkEwM0ExM0Zrd1pULUZOa2lyN0hnd0dQelNHeWRrNnJ1XzU2NmpUZw==
type: kubernetes.io/service-account-token
kind: Secret
apiVersion: v1

---
metadata:
  name: istio-pilot-service-account-token-xthb7
  namespace: istio-system
  annotations:
    kubernetes.io/service-account.name: istio-pilot-service-account
    kubernetes.io/service-account.uid: f4da98d7-dab3-4778-8bdf-363afd152fd0
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:ca.crt': {}
          'f:namespace': {}
          'f:token': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubernetes.io/service-account.name': {}
            'f:kubernetes.io/service-account.uid': {}
        'f:type': {}
data:
  ca.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EZ3hPREF6TVRZek5sb1hEVE13TURneE5qQXpNVFl6Tmxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTURqCi9idld2NHl3cEZwazErT0ZTVFhmNE9wSUoxNXdhNVZuSURYN2x4MHlqdjJlcll3aUVVZ0gwWDdCSlh3TTlpNG4KeVphSHNtcnY0RGRkekNxS25jSlZBanRQTk9kemNOd1IxS0twY2JaNzNWODdZeDNNSVZaZi9vU0tLdDcvLzNwSwp1dWxmWGtabU5KRktYQW96QTNyZjg5bWtpZVpRRlgwN0V1K2VSNDdweGkzMTNkTnJQT0xXSlhVd1VhVDhKT2YrCi9DWDZxOW1vQ01CVnR5eUY2UkxoaGp0VG9wdnZrSWlveXNTbTByNkNiejBYc0RwUlBkZUtHWXU0WjVYSlVrcFgKZ3FNUDh4RktsLzJhWERLeng4ZGdjckk5V0h3UXR3MmtXK3ZGSHN0RnRwdG1OdFExN01jaGJERHJDd00rcFhVeAovbFE2RWE4ZkIxckM4c09WR1U4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGeVI0eTgzTHNtcjl4a1Uwd2lUc0gzdXRvbisKYzJGeXMyZy9jNXRwUUxXSDZUZFczZ01OWjhMTk5BNDgzdkE1NEFZeG1jbWJzeklCYnhwekVZRE1kT0FQSFRqagowaUpZei9Ra0ZveThuSFFUNk9Yd0xjQk9iRmJnQktNdlRQRGNFNjZ0YWNMdUYrWXMxVFRqYmJRc1RqNytUaUVGCkN1WnJzam44U1l3czRaMlJ6bE9na3prem9FdHZCY3hwZXhDQUNkZ2ZyR3dBd3ZNVTQyS2hxeXg4bHptQm1HMWIKZ3R4MUNQQW12TjUxd05UUjVvL1JMWURQb2Nhc1dPMU9tT0lLQmplKzhHTGFNMnFqcmkyb3p6YTNoMERnekF5OQpQL0h0dGNuZ042WlZCcTYyU2gyR3hZOGxaL2Zod0N6R2w3TDlzWkk5TDdBUG81bnZRVHF2TlBEbUVnMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  namespace: aXN0aW8tc3lzdGVt
  token: >-
    ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpMTRTelJ0UkhoR2RVTXlkbHBFYlZGRldWOXNVMDB4Y0RKVlRXc3liSGR5ZVdndFpscE1aM2hqY1VFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpwYzNScGJ5MXplWE4wWlcwaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaWFYTjBhVzh0Y0dsc2IzUXRjMlZ5ZG1salpTMWhZMk52ZFc1MExYUnZhMlZ1TFhoMGFHSTNJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbWx6ZEdsdkxYQnBiRzkwTFhObGNuWnBZMlV0WVdOamIzVnVkQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJbVkwWkdFNU9HUTNMV1JoWWpNdE5EYzNPQzA0WW1SbUxUTTJNMkZtWkRFMU1tWmtNQ0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcGMzUnBieTF6ZVhOMFpXMDZhWE4wYVc4dGNHbHNiM1F0YzJWeWRtbGpaUzFoWTJOdmRXNTBJbjAuZWtwcEhEdTZKczQ1bWlTbmhfQlZoM0R1bEYzcjhVY25IWC1zRld0cmJGNTE1b3VnOVFwRnlzd283Mm1QZDlYM0s2bF9VUVdUOW9YNVYzUXBKWC1jemRibU1KRDA1RGNoZUtHUm5OQ3IzRHJjRlJOdEREaUhHR1k3OWJjaU83cGt5c1ZCUDN6VzZuZVJLdVg5MXhDSVNvbUpWa2k4cFlTN0g2N0QweWNTeElvV3VicHNlUmdQZDRuRnFHZGh5eGVNRlhnLTcxc2dxMTlpLURscVA1WlNqTWdhUk96YllnYzRYYW84NWRVNUdKazRMNlpld3FVbUpoa3dKelVGd08yRk9ibEZGNF9TRVFLczdJOVZvelBlTi1reHladzBXdC16dFdJSVBreGRTYS1kWXFVc0FIaVlUb0xzV0UxM0FpN29VNUY1dkE0ZEhmQTNMZUM2QW93bDBR
type: kubernetes.io/service-account-token
kind: Secret
apiVersion: v1

---
metadata:
  name: istio-security-post-install-account-token-fhvzm
  namespace: istio-system
  annotations:
    kubernetes.io/service-account.name: istio-security-post-install-account
    kubernetes.io/service-account.uid: 5491eb30-d254-4bdd-a92c-80ff18578c25
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:ca.crt': {}
          'f:namespace': {}
          'f:token': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubernetes.io/service-account.name': {}
            'f:kubernetes.io/service-account.uid': {}
        'f:type': {}
data:
  ca.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EZ3hPREF6TVRZek5sb1hEVE13TURneE5qQXpNVFl6Tmxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTURqCi9idld2NHl3cEZwazErT0ZTVFhmNE9wSUoxNXdhNVZuSURYN2x4MHlqdjJlcll3aUVVZ0gwWDdCSlh3TTlpNG4KeVphSHNtcnY0RGRkekNxS25jSlZBanRQTk9kemNOd1IxS0twY2JaNzNWODdZeDNNSVZaZi9vU0tLdDcvLzNwSwp1dWxmWGtabU5KRktYQW96QTNyZjg5bWtpZVpRRlgwN0V1K2VSNDdweGkzMTNkTnJQT0xXSlhVd1VhVDhKT2YrCi9DWDZxOW1vQ01CVnR5eUY2UkxoaGp0VG9wdnZrSWlveXNTbTByNkNiejBYc0RwUlBkZUtHWXU0WjVYSlVrcFgKZ3FNUDh4RktsLzJhWERLeng4ZGdjckk5V0h3UXR3MmtXK3ZGSHN0RnRwdG1OdFExN01jaGJERHJDd00rcFhVeAovbFE2RWE4ZkIxckM4c09WR1U4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGeVI0eTgzTHNtcjl4a1Uwd2lUc0gzdXRvbisKYzJGeXMyZy9jNXRwUUxXSDZUZFczZ01OWjhMTk5BNDgzdkE1NEFZeG1jbWJzeklCYnhwekVZRE1kT0FQSFRqagowaUpZei9Ra0ZveThuSFFUNk9Yd0xjQk9iRmJnQktNdlRQRGNFNjZ0YWNMdUYrWXMxVFRqYmJRc1RqNytUaUVGCkN1WnJzam44U1l3czRaMlJ6bE9na3prem9FdHZCY3hwZXhDQUNkZ2ZyR3dBd3ZNVTQyS2hxeXg4bHptQm1HMWIKZ3R4MUNQQW12TjUxd05UUjVvL1JMWURQb2Nhc1dPMU9tT0lLQmplKzhHTGFNMnFqcmkyb3p6YTNoMERnekF5OQpQL0h0dGNuZ042WlZCcTYyU2gyR3hZOGxaL2Zod0N6R2w3TDlzWkk5TDdBUG81bnZRVHF2TlBEbUVnMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  namespace: aXN0aW8tc3lzdGVt
  token: >-
    ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpMTRTelJ0UkhoR2RVTXlkbHBFYlZGRldWOXNVMDB4Y0RKVlRXc3liSGR5ZVdndFpscE1aM2hqY1VFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpwYzNScGJ5MXplWE4wWlcwaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaWFYTjBhVzh0YzJWamRYSnBkSGt0Y0c5emRDMXBibk4wWVd4c0xXRmpZMjkxYm5RdGRHOXJaVzR0Wm1oMmVtMGlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzV1WVcxbElqb2lhWE4wYVc4dGMyVmpkWEpwZEhrdGNHOXpkQzFwYm5OMFlXeHNMV0ZqWTI5MWJuUWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSTFORGt4WldJek1DMWtNalUwTFRSaVpHUXRZVGt5WXkwNE1HWm1NVGcxTnpoak1qVWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2YVhOMGFXOHRjM2x6ZEdWdE9tbHpkR2x2TFhObFkzVnlhWFI1TFhCdmMzUXRhVzV6ZEdGc2JDMWhZMk52ZFc1MEluMC5iUHowSUFZZkY4VTJzMWNNOGlvbnhGUXJaSUR6eHFsWVdWQ2wyU0QxR3JBNDBQUDR4N2x2ZURZTU5SYUFXRGhHRVdPUmREZWVtZU96OWFvVmJpMThKbUE5clozbjBiM3lkWkM2aXpXaHR3RmRuSG94bDF1MVdYNjkyMWJoT0VoWUdDM1gwMm42dzRoZzJlbm43SG9PT3g4X0NJWmViXzZNNEpCS3hQQlhDc2M3WW8wdVNrTDhkbjQwOFNjTzJFRkNnaF9ZQTFLM0lZdnF0Y2FlLTE3S3EwYWh4WTVDYnpJTkJfQU11T1NFX3BBMC1tTGZTX2pSNmEyX1NLU2E1bGxxU2laRDkxcUVva1hfcjBrYnZwTFBJWXE2SVVGUkJrUFpka1F1b3ZLdElzRkRHTm9VclIwN1JNQkwyaHJhOGtkZ0dXVXVhMEh0ZjJxTVMzbXQ4RDRIYlE=
type: kubernetes.io/service-account-token
kind: Secret
apiVersion: v1

---
metadata:
  name: istio-sidecar-injector-service-account-token-nwpz5
  namespace: istio-system
  annotations:
    kubernetes.io/service-account.name: istio-sidecar-injector-service-account
    kubernetes.io/service-account.uid: e18f4890-2396-4205-b985-98d60369dde6
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:ca.crt': {}
          'f:namespace': {}
          'f:token': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubernetes.io/service-account.name': {}
            'f:kubernetes.io/service-account.uid': {}
        'f:type': {}
data:
  ca.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EZ3hPREF6TVRZek5sb1hEVE13TURneE5qQXpNVFl6Tmxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTURqCi9idld2NHl3cEZwazErT0ZTVFhmNE9wSUoxNXdhNVZuSURYN2x4MHlqdjJlcll3aUVVZ0gwWDdCSlh3TTlpNG4KeVphSHNtcnY0RGRkekNxS25jSlZBanRQTk9kemNOd1IxS0twY2JaNzNWODdZeDNNSVZaZi9vU0tLdDcvLzNwSwp1dWxmWGtabU5KRktYQW96QTNyZjg5bWtpZVpRRlgwN0V1K2VSNDdweGkzMTNkTnJQT0xXSlhVd1VhVDhKT2YrCi9DWDZxOW1vQ01CVnR5eUY2UkxoaGp0VG9wdnZrSWlveXNTbTByNkNiejBYc0RwUlBkZUtHWXU0WjVYSlVrcFgKZ3FNUDh4RktsLzJhWERLeng4ZGdjckk5V0h3UXR3MmtXK3ZGSHN0RnRwdG1OdFExN01jaGJERHJDd00rcFhVeAovbFE2RWE4ZkIxckM4c09WR1U4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGeVI0eTgzTHNtcjl4a1Uwd2lUc0gzdXRvbisKYzJGeXMyZy9jNXRwUUxXSDZUZFczZ01OWjhMTk5BNDgzdkE1NEFZeG1jbWJzeklCYnhwekVZRE1kT0FQSFRqagowaUpZei9Ra0ZveThuSFFUNk9Yd0xjQk9iRmJnQktNdlRQRGNFNjZ0YWNMdUYrWXMxVFRqYmJRc1RqNytUaUVGCkN1WnJzam44U1l3czRaMlJ6bE9na3prem9FdHZCY3hwZXhDQUNkZ2ZyR3dBd3ZNVTQyS2hxeXg4bHptQm1HMWIKZ3R4MUNQQW12TjUxd05UUjVvL1JMWURQb2Nhc1dPMU9tT0lLQmplKzhHTGFNMnFqcmkyb3p6YTNoMERnekF5OQpQL0h0dGNuZ042WlZCcTYyU2gyR3hZOGxaL2Zod0N6R2w3TDlzWkk5TDdBUG81bnZRVHF2TlBEbUVnMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  namespace: aXN0aW8tc3lzdGVt
  token: >-
    ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpMTRTelJ0UkhoR2RVTXlkbHBFYlZGRldWOXNVMDB4Y0RKVlRXc3liSGR5ZVdndFpscE1aM2hqY1VFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpwYzNScGJ5MXplWE4wWlcwaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaWFYTjBhVzh0YzJsa1pXTmhjaTFwYm1wbFkzUnZjaTF6WlhKMmFXTmxMV0ZqWTI5MWJuUXRkRzlyWlc0dGJuZHdlalVpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1dVlXMWxJam9pYVhOMGFXOHRjMmxrWldOaGNpMXBibXBsWTNSdmNpMXpaWEoyYVdObExXRmpZMjkxYm5RaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lKbE1UaG1ORGc1TUMweU16azJMVFF5TURVdFlqazROUzA1T0dRMk1ETTJPV1JrWlRZaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZhWE4wYVc4dGMzbHpkR1Z0T21semRHbHZMWE5wWkdWallYSXRhVzVxWldOMGIzSXRjMlZ5ZG1salpTMWhZMk52ZFc1MEluMC5JLW9peDdydzA2dnFjS0h6NjVBdmpuekdFTWVISm91eldPSlBsSm1LSURLWFY5RlZyaWlOU2Z0YnhNTkc0anRhUjVEOFJwbmYxd2ZwNFYwNGQ1TVh1LVBFTW9pY0p0aWw4MmNxNDczZF9TZG5BUFZqT21DNEgwUWhyeXBycHUyNzNYcC1oTnpJTlBnWDF1QXF0YXptZzZNdUZYMkptZTNJRWE5UUZDcWVJR0l4MExPa0lMbFRYTGk3RlRLNVFFbExLamJhdmVNRWtVTlFIR1A0anR1U2NLSElGNFFGd0xJcjY1TTc1U0l2MWZDM3RpX00zV2RsbGxvNUpER1FFWC16V3hPVGhrd2UyYlJtUlFwd1JBZXJaQWVXQjhMajQ2MWRocUdBVkM3a0NSczhUbUQ2TXBXV3hqTmZ2b09lTzFFc0pPb0FsWGgyb2FJRFVnSm5Gc2JvWGc=
type: kubernetes.io/service-account-token
kind: Secret
apiVersion: v1

---
metadata:
  name: istio.cluster-local-gateway-service-account
  namespace: istio-system
  annotations:
    istio.io/service-account.name: cluster-local-gateway-service-account
  managedFields:
    - manager: istio_ca
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:27Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:cert-chain.pem': {}
          'f:key.pem': {}
          'f:root-cert.pem': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:istio.io/service-account.name': {}
        'f:type': {}
data:
  cert-chain.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lRV2hMRlh5Z01zeitxVWlNbWlnampsakFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU4xb1hEVEl3TVRJdwpNVEF3TWpZeU4xb3dBRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLNVBaYis0CkptODBta2pBMHVLcjJEcHpFMjFXcnVmTjYwM25zbkxZdmx1cWFBV0RYMzA3dXVtVzc1ZDhYZkpXZ0wrZGxLL2sKanZpTE1tSFkyVzRudE5ERS8xL3JTQnhaZWxNc1FhQmtCeTZBNXFOZElRM1lmbFY0c1ZFQTVOZlUzWEg3a29IRgo3ckYwTHUwMThMSGJFMk1Ga2hQdWgrQU9ubG9HYjBlRm9CVmdDTkE1N1o2K20raWVPTFV3RnUwVWRDNU51ZWN0ClBjVCtHbE1MakFOczN4SjVkUFZoM2VnU1VtLzNFR09EeU5Sa0Q0QXBUZS9uL1UrQTFyZHh2am9wK2diMzFXem0KU0J2c09rSFQydzFJU1h5MDZSM2dnV1k5MXMxTE1mNUpZR0dXa1BCV01lbmh0eHlRRTl3dUxzYXpmSHVpUm1LZgpOR3VNaWZVdWpCeHRtYThDQXdFQUFhT0JuekNCbkRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd1hRWURWUjBSQVFIL0JGTXcKVVlaUGMzQnBabVpsT2k4dlkyeDFjM1JsY2k1c2IyTmhiQzl1Y3k5cGMzUnBieTF6ZVhOMFpXMHZjMkV2WTJ4MQpjM1JsY2kxc2IyTmhiQzFuWVhSbGQyRjVMWE5sY25acFkyVXRZV05qYjNWdWREQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBV1RSenlDaHhDVVRLcUptS2hlRVVOTFFuRjRUZ3FyNlRqbG5Md3p6THRFeDBXQzNYV05GSjB1azcKY2swU2tMMVZhcU5adXJoRGxvajZRVVdiMUpsb0R3a3VLNmsxQ05URUUxSWhGT1BWREwvSXgyTTVsMExSWGFPNQo1bWNWQVFRVW1GanVoSTMzSjhsZ0ZlQjZSUmQwNjZFRXZYeUt6UzZFQ1hjMGdqK1hPcUhIYklHaTZ4anY5S0dUCkwxUGNCV0V1czB6azYxY053THJ4RG5HMXA1bFlWQXJzek1ZTTVkSFBxcnZ3ZU9TQnMwVmJCWVhnSVd4Q2prUzgKZURwc0hlRG1yckhHVS8vVm1kbnFQblVFUzVBWlJWT3k1MnVtWS9XVFZkNk1tdk9oV1g2b3FZelc1a0RQMzdEVgpwT0FUVlBlak4wNXJlbytZVlR3Z2FrMnJZUjArVnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  key.pem: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBcms5bHY3Z21ielNhU01EUzRxdllPbk1UYlZhdTU4M3JUZWV5Y3RpK1c2cG9CWU5mCmZUdTY2WmJ2bDN4ZDhsYUF2NTJVcitTTytJc3lZZGpaYmllMDBNVC9YK3RJSEZsNlV5eEJvR1FITG9EbW8xMGgKRGRoK1ZYaXhVUURrMTlUZGNmdVNnY1h1c1hRdTdUWHdzZHNUWXdXU0UrNkg0QTZlV2dadlI0V2dGV0FJMERudApucjZiNko0NHRUQVc3UlIwTGsyNTV5MDl4UDRhVXd1TUEyemZFbmwwOVdIZDZCSlNiL2NRWTRQSTFHUVBnQ2xOCjcrZjlUNERXdDNHK09pbjZCdmZWYk9aSUcrdzZRZFBiRFVoSmZMVHBIZUNCWmozV3pVc3gva2xnWVphUThGWXgKNmVHM0hKQVQzQzR1eHJOOGU2SkdZcDgwYTR5SjlTNk1IRzJacndJREFRQUJBb0lCQUZrTzMrR1FhTEt3b1pOQwpVWHpXWitlVkcvdmxLZi90U2FmSUZYaHdIUElnb24wT25oOFNBWEdQV0dLQmZFNXd1OThxMStqMlVjWFMrSzdkCmFGbkxsNnFDdkNkNXdxSVpaVkpSYmtaUVZRc0JlTlZHbzdpN1AvRFRkV1Q1bS9KYUk3bzAycW5MUXlVUFExcVgKRUo4T1cxMWdYejRueE94SkM4YmJPc2ZFRWdKWThtM3VrRE81b1pGWVZXRHJ5a1BlTVZvRktqUDF0eTFLOVlyNwpRZTdURmtHMUF3TSswZFRnUXE5R0p6azJ6bzdXdllxaXFnbFora0tnVTJjMUJLOFRISlVsTVhDSXFQZTZpTFlGCnYxQm41WG8yUkJCUm4wZCswWEowU0hpR3F4QU50ZG9PdW1HUWFxeUdEQzFRTEc3UTJqVEsrYXdjZUNqOTIxZHUKc21Pa3FnRUNnWUVBMy9DVVYrdUtQTkJwcVBOTzlmT3dEa3ZDYTA1SmxISHkzRk52cE16eXk2cVc4YVJ2dldCbQpPTVh5TWx2dHFKN3B6ZnBLNnFKTlBWcEFyV2ZSUnBaZVJYVnI4REMzeUlWTnpsb2ZRbkxiM0p0eG91cngvOE9YCkpDaXFCaU5jVWNPYjJyUVhEemhUWG1FRy96R2x2NzRNS0xMS3loWnhiREZqUUVkb3U4Sms2RUVDZ1lFQXgwUGkKNG9qVnRnUUprc1o5QXFQQ2ZTQWQybWlTR3ovQzFWMEh1ajNlcm5yWjRpWDI0N3haUWZHaWxzZHBETTYyZjhiaQpUQmRwMmtEemlkeDd0WG0zZmxDRUc2QjVTamhlbitQTmdwRmdtem5NaWRONUd5VzFab1BzcDhRdUJCTi95Z1lGClRWS0VZQWpQWWdNbi92MXJsK0NuNlh0Q0pjUUNLOUkxNmFmUGhlOENnWUVBc3luV2RWVUVIMDJiQzBuR1JhNjIKajJsN1hjQ2Z5NzB5MGFXTGIrMXMzeGRYZG5MWjEwaVY0QncyZnFYZnlZV0NoNElWaUExY0FKY0JvZnFxaTIvbwpjbWZVZUxGeGlHTm1jWTdXN2FIWlYzR2lBL2Myc0NyNjlEbjRkYnE2dE12c0dKajJ6ZjJCYmNQeEJpRGhmRHQvCm5Od1d0SUlxTXFaOHdzT2Uvb0V6bkVFQ2dZRUF3TU84YmRkZm5xZ0ROdGtMUUExNWJTQXZvUVMrS3R3Z3Q5VTYKVDRIZ3RMdWxvYStHU2tML3VkcHVwaHdjVk1aNEo5NFhOdk1EZEo2V3VrdnY1TnZ0bGFXQVYxV0RZRGh0MlpFLwpVc3NlUUt2R1lhS1JLcURzL2xJckV4U21TMDB0dHhyaDhDNGVYdVRHOGhNSmt4UkhESExKSFFZZk5IZU1maVhwCi83SldBRU1DZ1lFQXcyeGpsRnk3UWhTandSVXdCYWRLaVZSVUJ3K1U1TlFlQldVajB1eHMxSWVBSnBFMWZYdmwKTzloaTZkQndRcWo0aXJXMlFSNWQ0bjcrMndjZEVQZStwMVZkbkp4Q1BRNnlzLzlhQ2NLamxNN3BJa2V5SDE3OQoxVjQ5Qi9XQnN3d2lhdVRSRmRuWG1zOTlYdGpJM2VTcVhNVFBpeElrMXlXcEZHNHEvVDN3dWpvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  root-cert.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRQVdMTTRlb0RhRDlzR29icFNIVnRYVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU1sb1hEVE13TURnegpNVEF3TWpZeU1sb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNGtPSUJ4Zkd0cUNGa0ZadTRlSHNINFhYbEVKcFY4UTdjOG15NnoKcExIS2FJVXVQNnh0L0pUVGp3cHlUbXFPWW53TFpCdWV1aFAxY25VSXRsczZRSDl1djNVK0VvbU9EcUtWMUlWcApNYzZ4VFhBaUMrVHcrSkpoNVNZL2w0QVIxN29LWi9hTi9vVXNKVGdEUnJGNmtiRmk1OEhXZ0ZDbVVub095UGVjClBza3NTMDBpSU95VDZ5cHB1ZjhKTFZXVkgvQmpNbHgxWHcwNERkZDN5ZVBDMWNSb0NDTnNpQjZmZmRtNEZWL20KL1libU5vMEVwc2FMUG5VWWNXa0M2UFQ0U1hUcjB2ZThaSG5Ub0ZJZzRlNytybmJHUEZYdURmNUg0YW4vRUNRegp1SEpQVm5kZTJvU0NzZ0I4a1JhWFNxZjBFcTZQMmMrYm83cS9TamkrK0JqSW1oY0NBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUVrcEkyRDZESE5YNVhtUVlRSkl0L3lmeTJIYlhRckN6ZGdFRnlJWFl1U2NTYkVxZGpTc3FFY0J4dHd0NFBMNwpyV3ovVzN6MnhBanp5bzE1N2VMaVd4RUo2SHZsT3FTNzFIZVd3WUM0RGQ3ZS85U2MwWGMyMEhOYk14bS9Sb213ClFUZ2lkeEY2UHhZMW9icjVNT0JXQ1VjTVFCNlM4Q3d0MzZvSTZkYXN4bHNzQytVZWlDdkxqZDV2YzZlbk9hRkwKWVh0WkZFd1JGUXg1bDRTSlhwTmRWZ1VUV0VSeU1XdlhHd0NWbkFwV1lvQlpVZ1B4TjdCTTkzbUdtWGdzZVBtUgpUSWxteHVQN3FCQ0s1RXRYT0NnL0FLa09jcktFaTJxNHB4b1JvVk5veXlCOXlRQVdzRlhLbHhYZmZxL1U5MWtkCmp0ZHM5NXZVV0g5VUpjZnBUTnV3NllRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
type: istio.io/key-and-cert
kind: Secret
apiVersion: v1

---
metadata:
  name: istio.default
  namespace: istio-system
  annotations:
    istio.io/service-account.name: default
  managedFields:
    - manager: istio_ca
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:27:46Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:cert-chain.pem': {}
          'f:key.pem': {}
          'f:root-cert.pem': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:istio.io/service-account.name': {}
        'f:type': {}
data:
  cert-chain.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQU1ML3pGRTlHNDBlRHZCQnI2Q1NaMHN3RFFZSktvWklodmNOQVFFTEJRQXcKR0RFV01CUUdBMVVFQ2hNTlkyeDFjM1JsY2k1c2IyTmhiREFlRncweU1EQTVNREl3TURJM05EWmFGdzB5TURFeQpNREV3TURJM05EWmFNQUF3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFBkdDl0CnArRWcvK0ZOOGFRSmxEc09YZEpGMVhQbitlbUVBVDZ1YWtnVnl0TmpEZGp6QTQ5Z3hINVp2cGFJZXB6U1JteVYKUXd6WmdlWno0OE9uTFppY0pCYUUyZTBrK093NU1oRjI5RldWU1RoYUEzTEZlZUpic1Bkem1Hd0MzYUYxNXdsNwpZVDB4ZUdyVUdONDJSQ3R2TjRFVmEzSDVnZ0IyR2FyNXJtWHoyeFRTQm5oOGpRSUVjQjVRd3RGbDVhZE9Md1BmCkFWMkRqMGIxWVZac2dBSVlwSlZublkyRldJaXFiVG5WVUJielNvSllMQ2hvb08rcUErNEJ5bDBHeTJFUlNsNW0KaWVkMExJdmtrcWtEODRQbWdDbmNhUFNTL3BpOXA1M3p6dWVxdnJiVXkrK3FHTGlQREZFUU5IZDJIL2ZzZXA0Sgp0Mkd1bDJSVzVXSHJJQ2ViQWdNQkFBR2pnWUF3ZmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd1B3WURWUjBSQVFIL0JEVXcKTTRZeGMzQnBabVpsT2k4dlkyeDFjM1JsY2k1c2IyTmhiQzl1Y3k5cGMzUnBieTF6ZVhOMFpXMHZjMkV2WkdWbQpZWFZzZERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWdwWkZCQVlpbDNNQkwzbkNsVVFTMzZFWnR1cyttV2hvCnBWcC9pQndQbG9tR3AyRlAvbml3cEpUSENjcW1GRGhzWTJ5dTgzV2xEMVFuR1ZmaFE3R0cwSmdFM3Jrb2l3aSsKZHQ4VXFnZ3YxMU1mZ3hqVFFKazVkTVd1SzZaYitjSXA2K1AvZTRvUUNTZWJHVXZ4RS9UNGE5bFoxaml4V2lWUQplbEh5Z1diUHU3WVZvTXZRQ1pFMGFzTjdwSUNWa3o4YnFFNDZJNEJkUGpvWEVRYldTUTczNVBabUlQdjRhREZxCkNTYm1iQWREUmFFUnN1MTFsb2lxSXkyY2FiM1hKUjRNZm9Wd3RFYU5ONElJaEd5S1BOMkhHOUx6VkkwRFNFSUQKY2p2alJHZmhhMjhzNGtFaHhrR0xmdlR1NlhINjdjRTVMWWlOcWhqR1RXUFBaTVJwYWM1and3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  key.pem: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBejNiZmJhZmhJUC9oVGZHa0NaUTdEbDNTUmRWejUvbnBoQUUrcm1wSUZjclRZdzNZCjh3T1BZTVIrV2I2V2lIcWMwa1pzbFVNTTJZSG1jK1BEcHkyWW5DUVdoTm50SlBqc09USVJkdlJWbFVrNFdnTnkKeFhuaVc3RDNjNWhzQXQyaGRlY0plMkU5TVhocTFCamVOa1FyYnplQkZXdHgrWUlBZGhtcSthNWw4OXNVMGdaNApmSTBDQkhBZVVNTFJaZVduVGk4RDN3RmRnNDlHOVdGV2JJQUNHS1NWWjUyTmhWaUlxbTA1MVZBVzgwcUNXQ3dvCmFLRHZxZ1B1QWNwZEJzdGhFVXBlWm9ubmRDeUw1SktwQS9PRDVvQXAzR2owa3Y2WXZhZWQ4ODducXI2MjFNdnYKcWhpNGp3eFJFRFIzZGgvMzdIcWVDYmRocnBka1Z1Vmg2eUFubXdJREFRQUJBb0lCQUVKYmdVZHZwUUNMRjZONApvTUUzbWxRVUNrZXY2R3pRY0xKNk8zUktKbGhpRVk3alJQc2xybHlEUE82em1TNTZHV0xnaDZhT1ZiUFVhc095Cm5FZ0N1NGRsdTVZdXBqMW5LUmQ2UGovUUV2ZTIvY0U4elI4QXh6Z1F1SFZPMFcxeE9rMmQ0bGlHVjY1VkY4WlQKVmZBQmllciswOWpvRHdLQlpHaGgrVi8zT2tEdXhIcDlUK3dGdHlmK0xHdXpGZ2xobnBPZUQ5U1k4eWFFZ0xvbApUMGtNRFN5citNV0IyZTY5YzZuTjF4NE5mMzZoTGl3N3hvb0JDSkFUMXVVR2ptQngycG53UVc5YlJNVFhSMFVHCjdSRHJHc00wNXFMeWZxRVRtRjM0djZUd1U3dlhkemRKR0h6Ny9MOTMzM1BLQjdZa0JjSmlHTVF0WlBFK0gybkgKQU01MmRRRUNnWUVBM0Fja3l6b2ZEZDl4RDZ5SjRwRnVPakh2RlZlOXRkSUs2Q3BjMkRtY0RZU3lqYlgrU2hSSApLQXVoWi84cWQyMDQ3SmlIU25EM1dwcTVnZzh4MFZrTDVpWGh0ODBHY0ZLcXNGOEQ3VDRFTE5PVWVGUEdXVFlUClEwcFdTWHNOZGJ5UTkrVk1zcnRKaFg5TEIyMW9kV2I1emYyOTBhRzB0emxmTmwyZTFhOHFia0VDZ1lFQThXSG4Kb2FwcGE2OU11Vi8xeXBvTHRqbGhrbW0veVdnWmEvbUZ5RUJobUh4N3VLOVJqS2s2aytYVW9EcjNhcEdFRGtzOApBQjNSMmpmYklQbnVIVDJKT0JoS3NGTmJIUXl5U280Qm1wVFFXVGd5azhMbVY4N29vUi8zS0RGV1BCNmw0VmRsCjFyQXRiMWwyYWM3WGZuUlNRSjViS0RlU3lQVUY5QlpjWUhKS1Z0c0NnWUVBZ1BOcTIvUlhTT0VnT1FoczB5MWEKaFo3SU9TRHdIVVJaZ2hGNTBudUkrdDgvYWhBMFZTUW5ROC8xSzZiL00zait1S0wzLzJmUGYvbFlLV0pRVnhveQpBQk5KZzFnVW92Vy85WmZxRER1aFpNZ25wcEdxbUpRNW0rRlFTc1prY0JFd2dTaVExOXN0enFCNHo0U09pT2Z1CkZZelZsNnVHNXk4bm53d2xUNlRXWUVFQ2dZQXVMdGc5a3poR1ZTenR6dEZkS1NvU2ZGb1J4RS9nZmgxWERrK3QKWjd3RWk5UzBHajhWRlkvU21rZWJQSXo0QTgxcldyT3BKZ3R2bi80NkNmZW4rbzBWZ1hoUTBqSDlsZDlLNm02ZQpIOWpaS1Nwc0lQOG5UN3dzajh3ZkVZbDVTVGZkckhZY3BHcWRBbFhvbXAyYVlURVhrZlRJOWhFTWgrelNyYkNRCjkyMEh2d0tCZ1FDRTRCeklySnFWMGdkNmMva3VJeG94dUpCR2tiL2dqbzJYRHEzWWhlNFp5cGNXVVJyUFRLSDcKczNvak5aaGxZUFgzWFUzRkcwVW9zeUh6ZVRnZlJ3YTJUeXQwNVZFUjJVWXFxTGJ5MVFkNDc1MTM1T3dWdDlZSApNK0NEY3ozejlXcjB4a1dZUWlQRUpLdDRrUS9ERTNTMlZEbkZEaklmbm1nZENNM2cveDdiUUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  root-cert.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRQVdMTTRlb0RhRDlzR29icFNIVnRYVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU1sb1hEVE13TURnegpNVEF3TWpZeU1sb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNGtPSUJ4Zkd0cUNGa0ZadTRlSHNINFhYbEVKcFY4UTdjOG15NnoKcExIS2FJVXVQNnh0L0pUVGp3cHlUbXFPWW53TFpCdWV1aFAxY25VSXRsczZRSDl1djNVK0VvbU9EcUtWMUlWcApNYzZ4VFhBaUMrVHcrSkpoNVNZL2w0QVIxN29LWi9hTi9vVXNKVGdEUnJGNmtiRmk1OEhXZ0ZDbVVub095UGVjClBza3NTMDBpSU95VDZ5cHB1ZjhKTFZXVkgvQmpNbHgxWHcwNERkZDN5ZVBDMWNSb0NDTnNpQjZmZmRtNEZWL20KL1libU5vMEVwc2FMUG5VWWNXa0M2UFQ0U1hUcjB2ZThaSG5Ub0ZJZzRlNytybmJHUEZYdURmNUg0YW4vRUNRegp1SEpQVm5kZTJvU0NzZ0I4a1JhWFNxZjBFcTZQMmMrYm83cS9TamkrK0JqSW1oY0NBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUVrcEkyRDZESE5YNVhtUVlRSkl0L3lmeTJIYlhRckN6ZGdFRnlJWFl1U2NTYkVxZGpTc3FFY0J4dHd0NFBMNwpyV3ovVzN6MnhBanp5bzE1N2VMaVd4RUo2SHZsT3FTNzFIZVd3WUM0RGQ3ZS85U2MwWGMyMEhOYk14bS9Sb213ClFUZ2lkeEY2UHhZMW9icjVNT0JXQ1VjTVFCNlM4Q3d0MzZvSTZkYXN4bHNzQytVZWlDdkxqZDV2YzZlbk9hRkwKWVh0WkZFd1JGUXg1bDRTSlhwTmRWZ1VUV0VSeU1XdlhHd0NWbkFwV1lvQlpVZ1B4TjdCTTkzbUdtWGdzZVBtUgpUSWxteHVQN3FCQ0s1RXRYT0NnL0FLa09jcktFaTJxNHB4b1JvVk5veXlCOXlRQVdzRlhLbHhYZmZxL1U5MWtkCmp0ZHM5NXZVV0g5VUpjZnBUTnV3NllRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
type: istio.io/key-and-cert
kind: Secret
apiVersion: v1

---
metadata:
  name: istio.istio-citadel-service-account
  namespace: istio-system
  annotations:
    istio.io/service-account.name: istio-citadel-service-account
  managedFields:
    - manager: istio_ca
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:39Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:cert-chain.pem': {}
          'f:key.pem': {}
          'f:root-cert.pem': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:istio.io/service-account.name': {}
        'f:type': {}
data:
  cert-chain.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPekNDQWlPZ0F3SUJBZ0lSQU1sZVJxTDgxYXpmakZRUGpMTWlFYkl3RFFZSktvWklodmNOQVFFTEJRQXcKR0RFV01CUUdBMVVFQ2hNTlkyeDFjM1JsY2k1c2IyTmhiREFlRncweU1EQTVNREl3TURJMk16aGFGdzB5TURFeQpNREV3TURJMk16aGFNQUF3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ1UvS1RrCnI0MkttTkRhM0RPZjc1ME9VdGJqUGxCN29xbGZ3T05SUm5RS0pueGx3MmFScHo4QnNIVUdsOG9HL2ZIc3Q4SnQKbUsvR1RUMmNLR2lCL1R6STZuZ2NPTUNpTitJQWY1bTNHT2JMNnYwN1MxeFN1Q3BsSktvT2VOaGUwUk5hWnBRcwpVVTVzcW5MZGgxN1l5eUpiN08zVVNBMlpxcC9rellBVG05MjhBUmlMT0I3NEw1T2lUZGFmK3hlMWFoODlSWGNTClhuWmljY0lPK1ZTaFBRc3BhZjU0enFodmdsSGQ1dUsyTVpWMGQxQVpyeWgxdldHSzYwa2gvaHpTenJRdUg2aC8Kb3poQ1B6TzllWTRMWVlROFlNRTQ4RlFMZDMwUnAwS04raHZMa29wbVV6dVVaZnQxS2hXcGNtZVBwd0N3RU5TRgpNK3REZDU0ZHhac3ZNU3BWQWdNQkFBR2pnWmN3Z1pRd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1GVUdBMVVkRVFFQi93UkwKTUVtR1IzTndhV1ptWlRvdkwyTnNkWE4wWlhJdWJHOWpZV3d2Ym5NdmFYTjBhVzh0YzNsemRHVnRMM05oTDJsegpkR2x2TFdOcGRHRmtaV3d0YzJWeWRtbGpaUzFoWTJOdmRXNTBNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUN5CjNYSnVaOHF5WHhRbktrZlNYMnl1ZnVsWVJ4WmNwV21yMFZ6VEs3cDJYSEVMZ25VRk5WVGxtRzJacDhYcWRTWnkKL0R0Vys2SnFxMXg5K0ZvQXN4dmlNNjVFTFBTZHIzQ3pzVkx0YmF4cWFiRHg5Z3RSSkZkbzNFd3JUeHMvZjdmcgpxbjRuaUMwdFlUTFY4S0pjTTg1b00renk3YzU4OFFJMXFSZ3dMd1BqTHY3RTd1TjhXWkxVcDFuaCtaZ0lvbkIwCk5MaktTdmlWbGJDVmZ1Tk5LL2NlbzhWbUJOa1dIandqTWlYNVdHRVc4WXZ5czlNWnN6UTgwaTA5ODBnRW1GbkwKeUpmNVJZeTJMaTVlZE54dnpqWlZDZms5QWFpQmRhMkVDa2RWSWVob1o3MUZlanZpN3ZhSjVaVUZhVUs4dkZaQQpFL3VWOW5kV3pkSXhNYkRUdjNmQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  key.pem: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbFB5azVLK05pcGpRMnR3em4rK2REbExXNHo1UWU2S3BYOERqVVVaMENpWjhaY05tCmthYy9BYkIxQnBmS0J2M3g3TGZDYlppdnhrMDluQ2hvZ2YwOHlPcDRIRGpBb2pmaUFIK1p0eGpteStyOU8wdGMKVXJncVpTU3FEbmpZWHRFVFdtYVVMRkZPYktweTNZZGUyTXNpVyt6dDFFZ05tYXFmNU0yQUU1dmR2QUVZaXpnZQorQytUb2szV24vc1h0V29mUFVWM0VsNTJZbkhDRHZsVW9UMExLV24rZU02b2I0SlIzZWJpdGpHVmRIZFFHYThvCmRiMWhpdXRKSWY0YzBzNjBMaCtvZjZNNFFqOHp2WG1PQzJHRVBHREJPUEJVQzNkOUVhZENqZm9ieTVLS1psTTcKbEdYN2RTb1ZxWEpuajZjQXNCRFVoVFByUTNlZUhjV2JMekVxVlFJREFRQUJBb0lCQUhXeHo2RklmWXdMaEpJZwplamZTVmtQR2RUTTNPdVV3YnBUU0Q4Rlk0cnBTQk50dkxVdkt6eDlLZ21nZTZOMzFKblJXQmlZR0JIV205eEN4CmF6MmxDNnU4YmYzOVowKyt6YTZQSHFOaDdKRVNwZEY5aXdWZHIwQVBZcmZrQnltQUNNWFZXeUJYYXBpMVhlQmEKM0RadTRrbTBOWDBKSHBWU0VOWHk4VWFNVHZJQXh3WUpXb1Ird2krWlFHMm5GbFVhZzBoY2dtMkw0NnhJMGxUYQo0QTdrSG1SYkRtWFhKU0lIU01ydHlTalJrcHluSmdFenV5VzArZzNDc3hzb2dLM3NNVmw2R0VwcWt1V1VlTjE2ClA0T0RJNkE1NTczQ05BdVZLakh0R25HNE93MEhnck9JWE9rMXprc05zajJ5b3dRWllsMWlxMm41cW44OCtxL2oKS0tPYVNRRUNnWUVBd0VqSW1zRXd2TjFmMDduMFhrR2xpdGhhUE1rYm1UK3FKK2t6ZmY5MzJsTGVhQmcrNjd0VApjWXAyb2pGeWhXNUV3UjJjRHpnc0t2QWNRQWM3bm9uMU4vWnRGTGNSZjVYblY5RjdQa3h2eXpHRlhCK0tHaEdaClFsNHo2TGIvbGVBUU55eHAyT3MySjRRUGVDSjFHTUhPOU9TRElqczRaL05QV25nRG4ybTJvUEVDZ1lFQXhsci8KMGxBbDZMZUt4NkJPdlcxR3REbG44TUhoelZUZ3BqUllEMjIyQTQrL3V5bG83NHpIL2RoWFFEcVB1L1BMVnFIcAp4MG55dzhFT3dtS2pnQmVkZjcvd016TXZEcHpDckd3NXFkbTJRR1M1c1ExblV6NnNZSm9qQzlaSyt2eGVNSzFPCm9jNjcySnI4Y2llbWRGN212OTZZZU5qMXNoRDNReGJpZWxMaVg2VUNnWUVBdlUycXViampDNzJDWDBjZXowRWcKQWw3WUVDb0tFc2o3ODBrQ21kUk9JZEllQml1QW5zSVE5NkpUQTRGYzl3SkZqRDVqYXhScFgyaCsxNGFIYXFEMQptNy92U2txbFhvK3RiK2JieDh5bTcwdjB1R3FRb3ZPYWlCMklTMThHcDM0dFdMUlFEUEFjbzdDL0xnMzJiSVk2CkF4MktBTVIrMXRCUzJvVjNRNVZtNkhFQ2dZQXBpeG1WVk0vN3c2VS9WaVhucXFGcVViT2hTeG9keFM4ZjRFcXAKUUpNa2Y5RHFSQ3dFTC9vYkFscVR5ekFiYjE0aEVOeERyd3MzVUpIa3lIL3g3Z0JBcDFTSmhLalFhS2lsTUMyTAprMXVHZFJJbk1PVjVHK0ZDZ2tYZ3pzcjVjaTNRQ0J3MTYzU1FVeldZT3hHendjU1dYdXFVTk95UWxOa1VwaEJkCkNrcjdPUUtCZ0hQbjhGNk9BekF3TkE5T1gzZ0U0cFVxeEc3VHBjaERkamVqZHFpVzBSMzFNQlo4WnVKWlJtK1oKN2lVemo5eFdlSFdqVU1FTDFFLytxV1BmeUJtNmNjb0d5azRsWXdnVFFFeFJ1bTV0TExMaGtnSDFydGhhMFJlagpoRHJXemVBaHFGV0pGOHF5RnBMRjRHRUpEZzRrVjk4Q3ltcENFUmdNV0dudHJVSkhkU002Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  root-cert.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRQVdMTTRlb0RhRDlzR29icFNIVnRYVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU1sb1hEVE13TURnegpNVEF3TWpZeU1sb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNGtPSUJ4Zkd0cUNGa0ZadTRlSHNINFhYbEVKcFY4UTdjOG15NnoKcExIS2FJVXVQNnh0L0pUVGp3cHlUbXFPWW53TFpCdWV1aFAxY25VSXRsczZRSDl1djNVK0VvbU9EcUtWMUlWcApNYzZ4VFhBaUMrVHcrSkpoNVNZL2w0QVIxN29LWi9hTi9vVXNKVGdEUnJGNmtiRmk1OEhXZ0ZDbVVub095UGVjClBza3NTMDBpSU95VDZ5cHB1ZjhKTFZXVkgvQmpNbHgxWHcwNERkZDN5ZVBDMWNSb0NDTnNpQjZmZmRtNEZWL20KL1libU5vMEVwc2FMUG5VWWNXa0M2UFQ0U1hUcjB2ZThaSG5Ub0ZJZzRlNytybmJHUEZYdURmNUg0YW4vRUNRegp1SEpQVm5kZTJvU0NzZ0I4a1JhWFNxZjBFcTZQMmMrYm83cS9TamkrK0JqSW1oY0NBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUVrcEkyRDZESE5YNVhtUVlRSkl0L3lmeTJIYlhRckN6ZGdFRnlJWFl1U2NTYkVxZGpTc3FFY0J4dHd0NFBMNwpyV3ovVzN6MnhBanp5bzE1N2VMaVd4RUo2SHZsT3FTNzFIZVd3WUM0RGQ3ZS85U2MwWGMyMEhOYk14bS9Sb213ClFUZ2lkeEY2UHhZMW9icjVNT0JXQ1VjTVFCNlM4Q3d0MzZvSTZkYXN4bHNzQytVZWlDdkxqZDV2YzZlbk9hRkwKWVh0WkZFd1JGUXg1bDRTSlhwTmRWZ1VUV0VSeU1XdlhHd0NWbkFwV1lvQlpVZ1B4TjdCTTkzbUdtWGdzZVBtUgpUSWxteHVQN3FCQ0s1RXRYT0NnL0FLa09jcktFaTJxNHB4b1JvVk5veXlCOXlRQVdzRlhLbHhYZmZxL1U5MWtkCmp0ZHM5NXZVV0g5VUpjZnBUTnV3NllRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
type: istio.io/key-and-cert
kind: Secret
apiVersion: v1

---
metadata:
  name: istio.istio-galley-service-account
  namespace: istio-system
  annotations:
    istio.io/service-account.name: istio-galley-service-account
  managedFields:
    - manager: istio_ca
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:47Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:cert-chain.pem': {}
          'f:key.pem': {}
          'f:root-cert.pem': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:istio.io/service-account.name': {}
        'f:type': {}
data:
  cert-chain.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkakNDQWw2Z0F3SUJBZ0lRSk1QTGMySmlmSUZ0T1RzQkhIWUFiVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZME4xb1hEVEl3TVRJdwpNVEF3TWpZME4xb3dBRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNaERiVnZJCk5BL3E5SDIzSUtCZEdhYjlWaTA1ckU1WkdaSHJJZ0k5N3gxZVB4YUdtT3NNeGdoaDd6MzQvQlpWMkFBQ1Z3VmkKMEJ2cmdOYXlMcnBFSG03NGhZa1ZqM085TmZNeGU3Yjlpb0pqL0ZwUUoxL3dFQVBTQUhWdkFMbVNPaGFzQ0p3awpXaHZsdXZjaXEzT2wrN01lM2ZwNGEwU0hDWGgrbDRGRXo5bmFtUm1qMUY3RVo0OGhLOWxIWVBGQ1Y1T09keHZYCnJVdXZ0Y1UyOXJFa0cyT1pDa3FIK0habjFkOWVGTitoRmUrY09tTTVMVThoTlZta3h6RDRWSjZZelVCN3pGMEkKNm55Y3gvaGkrWUdRcUNiTzU5WGJBTjZKTGRhV0RGd0ZxRHYrZmlFTHJJb3JJaVY2WENSMUZ1SjBFTXNiVTl1YgpMYTBXTjJ0ajRTVWxESzBDQXdFQUFhT0IwekNCMERBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd2daQUdBMVVkRVFFQi93U0IKaFRDQmdvWkdjM0JwWm1abE9pOHZZMngxYzNSbGNpNXNiMk5oYkM5dWN5OXBjM1JwYnkxemVYTjBaVzB2YzJFdgphWE4wYVc4dFoyRnNiR1Y1TFhObGNuWnBZMlV0WVdOamIzVnVkSUlkYVhOMGFXOHRaMkZzYkdWNUxtbHpkR2x2CkxYTjVjM1JsYlM1emRtT0NHV2x6ZEdsdkxXZGhiR3hsZVM1cGMzUnBieTF6ZVhOMFpXMHdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUNZRlF1T1hoSi9JZ080ekhqZGZvcTcvV0VoL2NDeVFVbjFFVC9yZ1Y1Mzk0ZXBuTHhWUQpsY0M0UUx4eWRZOEJzdkJmeXNyanZqM0FSanZDOFE1TGlwbmRjK1pqK2R5MEREQ1pqMG1henl5VWg3K2NDczRoCkhDOGlvdzdNV3lMNXRtTklEV2VjMmdOTjl3ZXgyU1BvWklCSHhMSFAxN3J1NUhBNEhzZEI1QWZ3NU1YaHlvTE0KQVRvOHZmSnlqM3NVSmkyc2NLN0xzaHlhUVhZSXkyQVlldHZHaWxOUUxLWTRDbERXQWtaWk93L0NwUjNkemRXbAp1bXhKRTFDQ3FVUDgwSUZ1SEkrVkZwZkdSa052Uy8zNDl4bVgzU21LZ3ZYWnVlMWFjZGRRZXJORUMxUkoxK0xPCjNBTldrSTd0c004K3R1WVl2WE5rajRQUER3MXZCZDc2ekt3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  key.pem: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeUVOdFc4ZzBEK3IwZmJjZ29GMFpwdjFXTFRtc1Rsa1prZXNpQWozdkhWNC9Gb2FZCjZ3ekdDR0h2UGZqOEZsWFlBQUpYQldMUUcrdUExckl1dWtRZWJ2aUZpUldQYzcwMTh6Rjd0djJLZ21QOFdsQW4KWC9BUUE5SUFkVzhBdVpJNkZxd0luQ1JhRytXNjl5S3JjNlg3c3g3ZCtuaHJSSWNKZUg2WGdVVFAyZHFaR2FQVQpYc1JuanlFcjJVZGc4VUpYazQ1M0c5ZXRTNisxeFRiMnNTUWJZNWtLU29mNGRtZlYzMTRVMzZFVjc1dzZZemt0ClR5RTFXYVRITVBoVW5wak5RSHZNWFFqcWZKekgrR0w1Z1pDb0pzN24xZHNBM29rdDFwWU1YQVdvTy81K0lRdXMKaWlzaUpYcGNKSFVXNG5RUXl4dFQyNXN0clJZM2EyUGhKU1VNclFJREFRQUJBb0lCQVFDWG9hWXQ5bnFsQ3N1dwpYSFpSdGV4MGFpRlVBUFVjSlk2YzA2SmVmREtPMUF1RXJNa2dQLzI1M3gxY21TZVdhYzB3eEpUTE9UUkZ6NTB2CjhwNDYzdFVFUlJ3bTNiSk9laGRkV2p4SUk5VTZRU2FUNDFqTTVXSGE0cWtDUWRnVXFrbGRYVWp2b1A2eFhOS2gKeVJoMGFsc1lGdWtRZXhrTlBBbkp1R0JTdXAxK1h4VGNGOWF2NHVGdHVmV3R0azY2R1d1RTlXMGVieExIVTNZOApoRlRQODZ1ZlVoQi8yRElFS2x3Ynp6UkNjSE50MUNZY0R0cWYwU0RhTHRhamYwbnRzU0V1d0NCTUhjU09yWjFECmxPcDZkMjJISGdrcW9JbWNjY21xYmhaNUJ6Q1oyM1NKWXlUdkpMbHYyaG93Z2J6ZjBmYnZLYkJ4QXl3NDkyK0QKWFh4OVVpWXBBb0dCQU43VEg4eW9HVS8wb21SOEYxSWZJcGl6c3ZMUjlsbDRKeWluVVJhZjI4WTdjclRBVGFxLwp3QnNmM0VvMkN3WEJKSXFiN0h5Mnd6WXpWSTA5ek8wNjJTWFVINlViUThaYjNyR2hKaC9Eczk1ajNtWjdOWGhxCjIyL3BhREpzQWp6UWoxS1kyTVFpR25tTlNYcFlMYThtYUJKMC91U3dxZEJkNWxqbklVVzdsK283QW9HQkFPWVUKWXlTRE5GQ2Jlb1UvZU5GMUlJZ2dDbms5SGFhTExxeGhaVGs1VXdEdnFRaUJsb2JQdkgrSzROOG41VUVyZ2lqago0c0w5SFFxWWk2eXA2WDdUdkJ4RDFaeUtXTG4wRGVyL3ZYYlRmVTRyYS8xYzNkT3FRUExEakJkZ0lXcDhVeFVZCnFiS0dQenNtQVFRL0k2cTJCRTE5Z3licTNybExLaXZUUjliTWI0NDNBb0dBT0lFYlFEK2tZNVVxbFFhdXQwRnoKK1hzZ050a3RlbFN3d1d0a2NiTkovUVBZTzZQRVRqZGYxTUVJa0wwUm9Ienc4a0ZGLy80c2xKTUJydXRzQ3dCdwpUbHB6UitBWkdMVDFUT0FMbGVSL3VUWmtFR0xRRldBcmt6NkNFTDg0OWdrQlB6WEpTanRIc1drMXA5T3lpZ2JZClAwM3gwVFpIYWJKV0ZsZE9KYXZEZ3o4Q2dZQTkvQkFacmg5UitCRXlCTCtQN25ZdE5qU2NKUkx2NDE5WG9ZV2IKdlEzWG1ybDNTVEk4YjRyZzhaRlRqWFA5OHJMR1FWNitHV0xSai9kUk5SVnF6YkJJRFI1blpmNHhXc2JGSU5EeQpTbGZmejJMd2h5eGI4ZW85Zk9FcEN3VDFvemplM2g0WnNvRW1kajZmM2tMRm92UFZ6SktnMFhYZmhaaCs1aFRjCmtZY2NVUUtCZ1FDYndtSmpkUkl3STltZERvV0FBRlJjeVkrVTV1NVJzempFODJyMjB4cVFBRlo4aGEvZmtqK0IKcWVjNWVZM2plZTd1QXR2RVFEVlBaVk9wSzRGRXhPTmpOdGNxTmtsbGhQRllPWHJLTGhvNXdtRGtBTnhYaHBMbQpjbDIyUllKWE10VVVhd2VKR2JmQTFnSGRTa0tSd0pUajhIZHBTLy9FTjJsemxja3NaU0Y4OUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  root-cert.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRQVdMTTRlb0RhRDlzR29icFNIVnRYVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU1sb1hEVE13TURnegpNVEF3TWpZeU1sb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNGtPSUJ4Zkd0cUNGa0ZadTRlSHNINFhYbEVKcFY4UTdjOG15NnoKcExIS2FJVXVQNnh0L0pUVGp3cHlUbXFPWW53TFpCdWV1aFAxY25VSXRsczZRSDl1djNVK0VvbU9EcUtWMUlWcApNYzZ4VFhBaUMrVHcrSkpoNVNZL2w0QVIxN29LWi9hTi9vVXNKVGdEUnJGNmtiRmk1OEhXZ0ZDbVVub095UGVjClBza3NTMDBpSU95VDZ5cHB1ZjhKTFZXVkgvQmpNbHgxWHcwNERkZDN5ZVBDMWNSb0NDTnNpQjZmZmRtNEZWL20KL1libU5vMEVwc2FMUG5VWWNXa0M2UFQ0U1hUcjB2ZThaSG5Ub0ZJZzRlNytybmJHUEZYdURmNUg0YW4vRUNRegp1SEpQVm5kZTJvU0NzZ0I4a1JhWFNxZjBFcTZQMmMrYm83cS9TamkrK0JqSW1oY0NBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUVrcEkyRDZESE5YNVhtUVlRSkl0L3lmeTJIYlhRckN6ZGdFRnlJWFl1U2NTYkVxZGpTc3FFY0J4dHd0NFBMNwpyV3ovVzN6MnhBanp5bzE1N2VMaVd4RUo2SHZsT3FTNzFIZVd3WUM0RGQ3ZS85U2MwWGMyMEhOYk14bS9Sb213ClFUZ2lkeEY2UHhZMW9icjVNT0JXQ1VjTVFCNlM4Q3d0MzZvSTZkYXN4bHNzQytVZWlDdkxqZDV2YzZlbk9hRkwKWVh0WkZFd1JGUXg1bDRTSlhwTmRWZ1VUV0VSeU1XdlhHd0NWbkFwV1lvQlpVZ1B4TjdCTTkzbUdtWGdzZVBtUgpUSWxteHVQN3FCQ0s1RXRYT0NnL0FLa09jcktFaTJxNHB4b1JvVk5veXlCOXlRQVdzRlhLbHhYZmZxL1U5MWtkCmp0ZHM5NXZVV0g5VUpjZnBUTnV3NllRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
type: istio.io/key-and-cert
kind: Secret
apiVersion: v1

---
metadata:
  name: istio.istio-ingressgateway-service-account
  namespace: istio-system
  annotations:
    istio.io/service-account.name: istio-ingressgateway-service-account
  managedFields:
    - manager: istio_ca
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:46Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:cert-chain.pem': {}
          'f:key.pem': {}
          'f:root-cert.pem': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:istio.io/service-account.name': {}
        'f:type': {}
data:
  cert-chain.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lSQU0zMGdlU2RQZzZldjA4Z3p0K0VQV1V3RFFZSktvWklodmNOQVFFTEJRQXcKR0RFV01CUUdBMVVFQ2hNTlkyeDFjM1JsY2k1c2IyTmhiREFlRncweU1EQTVNREl3TURJMk5EWmFGdzB5TURFeQpNREV3TURJMk5EWmFNQUF3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3VpK2dyCkdNZGxlWi9NSXRFcHdOMEszWVBDSnBTMFRXS01GRVE1R0ZCVFppTjdyT1JkNllaakRNR3FwRlpSMkRMQ2JiWHEKZ0MyYU00OVBiQmV1WDJ6S1Vjd1ZrMU0rVlFrRys2T1FMZmhuUVpQSUE1U1RPOC9IaHRJQWphWUNTOVI3YUlLSQpqY20vekhxMEpncWxabHJhTWdhM1dpSW1Gaml2cW1mRDBwQ2Z0Z1hMbjY2RFNDa2tQRFhKRzVZN0F2ZTJBVE52CjFaU1ZIZTYvVEVUckQ4ZTlzS0pJbzJ3aTBiNGQzRDdTNHN2Sm5icU0rT3RGL05nenlNYlJzN2pIS0Q3N2F6ZHIKblBUNERKNVBTZmx3OWM2aDZweUI3LzV5b0hUSTlycTQ0blBiSnpVY0xtMUZHOVlvMTVOWnMrK3RPU2tGcXBzVQpuT0MyN1Z4QnkveG1MS0psQWdNQkFBR2pnWjR3Z1pzd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1Gd0dBMVVkRVFFQi93UlMKTUZDR1RuTndhV1ptWlRvdkwyTnNkWE4wWlhJdWJHOWpZV3d2Ym5NdmFYTjBhVzh0YzNsemRHVnRMM05oTDJsegpkR2x2TFdsdVozSmxjM05uWVhSbGQyRjVMWE5sY25acFkyVXRZV05qYjNWdWREQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBcU91Yi9XZDNMaG9NZVkvU0tET01IazJIN2g1TFF4bUs5Y0RUT1lJWEhCbGtaVlRKcnJwWVlqUUYKWnNKSVIzQmRCci9FOENSY3M3ZHN6M0lrWmFEMFlBb1lZQ3Z3QmlySFJkVVFiZmNmR3ZzaEhOdEw2NUhDVTdpWApDa2ZUc0RVNUNKK2R1SjV1dHJFMkZ2RXM4SnlkYUQ1ZXlDZnliUWdpa2RXd3dOdHRNdHlxSWVSMDAzQVVuUGQ0CkNoRmtaRG5nZzBBdEtRTFE0ZkI1YnI0a01jY1ovMlllblM0NFpKN2JjdW0zcVhiNUJISUFzUDJSOWpXa3NveG4KYU1RTjc4VjgvcThRSUZ3QldYdTlRa0xKV1EvbU1IRUFMZS9mN2ZqdUNtemJMS3VDc1B0YmJuNG9pMEVVOHVLcwozVU5MYnA5RHhhckhYdVdENHcwR0pISklKNXZrU0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  key.pem: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcm92b0t4akhaWG1mekNMUktjRGRDdDJEd2lhVXRFMWlqQlJFT1JoUVUyWWplNnprClhlbUdZd3pCcXFSV1VkZ3l3bTIxNm9BdG1qT1BUMndYcmw5c3lsSE1GWk5UUGxVSkJ2dWprQzM0WjBHVHlBT1UKa3p2UHg0YlNBSTJtQWt2VWUyaUNpSTNKdjh4NnRDWUtwV1phMmpJR3Qxb2lKaFk0cjZwbnc5S1FuN1lGeTUrdQpnMGdwSkR3MXlSdVdPd0wzdGdFemI5V1VsUjN1djB4RTZ3L0h2YkNpU0tOc0l0RytIZHcrMHVMTHlaMjZqUGpyClJmellNOGpHMGJPNHh5ZysrMnMzYTV6MCtBeWVUMG41Y1BYT29lcWNnZS8rY3FCMHlQYTZ1T0p6MnljMUhDNXQKUlJ2V0tOZVRXYlB2clRrcEJhcWJGSnpndHUxY1FjdjhaaXlpWlFJREFRQUJBb0lCQUU4QlJMVTlJZ1BzYVVnYworay9MM0VGdXdwUytvZEI2dG9CeEsvQXI4Uy9PcTREdllPNmhKUkx3VXpqSjZjaGg4NWZOME9tejJ2QlJKaXpzCjRFc3RKakR0bFZLdXZKOGFIbHZxeXI0WUVMZXNGeGdSaHM2ZDVBNk1GOEhvVzV2dWR0N2xEekIvL1RHemZGYk8KWVVNOGNTTVNRYmY4TkRqSkZoOXRJa3FncEpXbExvditVYUdnNjZYZVFSZG9OUHdubm1FZnRIL3l2L3BPRm11QQpBYU0wVGhHWktjZjBjbUZ6SmxrRUhNQUNpb2JuQlhYOUpVTllZcjNlTjhGTFl1WTIyTkRScmlzNEo3R0JEbzlNCmdoQ3ZKNWN6MWFXcWliNkNJM3dpT3VXT1NJakdVeVV4MnBneGNYdnBxaXd6NHNMb2RoYmJScEcySWpGaXh1Q3gKWkMvR3ZvRUNnWUVBeDRXNlJrUDFUQklvb1lhSXhuWkg5aS82MHhQeGlyQkZ2Q3NieFkvcEU4aXplZGNHS0lVRwpZM2FGUGUxenpGZnY0Y3Irc01RNHBCZjgvMkFST0VSR2dleHMwOVlnVlFHQlZzOXZxYVl4eFlNMzhRcUo3VGwwCnpSaVRvc1Z1T3ZPZ1YxbWFaeUw5UnZ4NHpBSXNRTFViOUp0U1JEQi9Ucmw1STMvMzBTdkFZbThDZ1lFQTMvUlIKWi9pK0xOSjViQWVyMWM1czVtSnF0ajlpUG9jYTRrV1JDanlWa2ZBN1ZYSzc5M3ZIYTZ1ckMxck91L3JIYkVDMgpWWkQ1dWRxZE1wa1pOdWFoSUNJNyt6anJNNkFIMDZXNnJmeWFJRU13dzR4aW50Q3QvRFZ5WEJoaFVtTms3dzhJCkEwajBPU3dpekswb0FNcTZIN1dXT0sxMjM4MWIvSVkrdVhDN1ltc0NnWUJLanRSZThZSTJuUXFGNGFvMnozaHcKck5sRUMwM1ZqNjFmZFpSNUxSL2gvcnZpcWRGcFR0eG1TcUhiMUdIVFdJRVJsVE83aG5mTUNoTEdzM1Y3MnplbAowVjJSZzVDdGMxU0x4aFJxQnVyT2JneDNqSUtpSFRoaWMrNm5nck9BWUEzbzFsajJkWUxFQmhCMTI5SUJsQ3dRCktnS0I3TVdGKzVVakNPem9RenN2RFFLQmdRQyt4ZTJ1cHRyQmJjMlhNL1d4M1BVeFQ3YmRacUwyNXJvRTlBTzQKZDZGbHZ3R2NLVzlyUTFxK0ltOUM3ZWpiZ3FYc1ZqZThMaEk4dXJoY0NNVE0ycXQ0cHhEM1VTWXlST2xGNXBCZQpjNmFMUXhGQUVzOVR3Q25saFZYVWs4UWJuYVcyYXRTRmo5alM5d0R4MzdNSzhhYVpLbU04QnJBVHQyamJkVFByClhkZVIzd0tCZ0FzaDVBMG42Y0F3bGZ3RU5NYmxHbE9CUmpRZm12U2NTcGF4bDhSaDdPbFN5UTI0V2pya0xjWEMKNm1Wc3hXVGUydHR6eThZUG5mMTQ5WnhaMk1qcGQwczBlaHE3VWxzMVRlNGZWdUtTVzVNSjczR1IzSURMUXllbQp2ZWM0Nm5RdmExc0VHVEZ1V29DWmU5VWlBZWFxNk1nMTFLYXV2S21BR0tEMG5HWjBOYU13Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  root-cert.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRQVdMTTRlb0RhRDlzR29icFNIVnRYVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU1sb1hEVE13TURnegpNVEF3TWpZeU1sb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNGtPSUJ4Zkd0cUNGa0ZadTRlSHNINFhYbEVKcFY4UTdjOG15NnoKcExIS2FJVXVQNnh0L0pUVGp3cHlUbXFPWW53TFpCdWV1aFAxY25VSXRsczZRSDl1djNVK0VvbU9EcUtWMUlWcApNYzZ4VFhBaUMrVHcrSkpoNVNZL2w0QVIxN29LWi9hTi9vVXNKVGdEUnJGNmtiRmk1OEhXZ0ZDbVVub095UGVjClBza3NTMDBpSU95VDZ5cHB1ZjhKTFZXVkgvQmpNbHgxWHcwNERkZDN5ZVBDMWNSb0NDTnNpQjZmZmRtNEZWL20KL1libU5vMEVwc2FMUG5VWWNXa0M2UFQ0U1hUcjB2ZThaSG5Ub0ZJZzRlNytybmJHUEZYdURmNUg0YW4vRUNRegp1SEpQVm5kZTJvU0NzZ0I4a1JhWFNxZjBFcTZQMmMrYm83cS9TamkrK0JqSW1oY0NBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUVrcEkyRDZESE5YNVhtUVlRSkl0L3lmeTJIYlhRckN6ZGdFRnlJWFl1U2NTYkVxZGpTc3FFY0J4dHd0NFBMNwpyV3ovVzN6MnhBanp5bzE1N2VMaVd4RUo2SHZsT3FTNzFIZVd3WUM0RGQ3ZS85U2MwWGMyMEhOYk14bS9Sb213ClFUZ2lkeEY2UHhZMW9icjVNT0JXQ1VjTVFCNlM4Q3d0MzZvSTZkYXN4bHNzQytVZWlDdkxqZDV2YzZlbk9hRkwKWVh0WkZFd1JGUXg1bDRTSlhwTmRWZ1VUV0VSeU1XdlhHd0NWbkFwV1lvQlpVZ1B4TjdCTTkzbUdtWGdzZVBtUgpUSWxteHVQN3FCQ0s1RXRYT0NnL0FLa09jcktFaTJxNHB4b1JvVk5veXlCOXlRQVdzRlhLbHhYZmZxL1U5MWtkCmp0ZHM5NXZVV0g5VUpjZnBUTnV3NllRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
type: istio.io/key-and-cert
kind: Secret
apiVersion: v1

---
metadata:
  name: istio.istio-mixer-service-account
  namespace: istio-system
  annotations:
    istio.io/service-account.name: istio-mixer-service-account
  managedFields:
    - manager: istio_ca
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:42Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:cert-chain.pem': {}
          'f:key.pem': {}
          'f:root-cert.pem': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:istio.io/service-account.name': {}
        'f:type': {}
data:
  cert-chain.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPRENDQWlDZ0F3SUJBZ0lRV1RmNnc1VUFyMWt2UEJ5ZVU2TDUxekFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZME1Wb1hEVEl3TVRJdwpNVEF3TWpZME1Wb3dBRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPRU05ZGNZCnN4VEJ0eGkxNk5IQzA5Ynlham0xblhlYlVvM2ZYcXBBVG1CZ2s2R2w4YVk4UUtQYXE2U3NuT2JRcDk5ZGw0ZDIKdlJBczA4VGR3dVNTN0tCdjJQUU82S09sODZDNEs5Z1FBc2JhUkJrQmtjVFBITnhUdWUxaTRQczVGeW1lbi9SMgpuVktHSW9ISHg0NzFCU1Zjemp6V3VPYXFWaHBoaStQeE5tQlN5Rmgrb00xR0hRQW40S3lLak9CRW9kQVg4akhvCmZWenRKbXA2VldEVi9ZNkgreDRTT25NdVdpeVZ6ancySEhiTVhLblI4UWg4dVZubko1OHh5b0FGSTRnVnhVZVoKK0JiZXhHOUR6eG1zUGNmZHdEOFVlZnd3dERiNjJhRGhqQzc3U01FazNJMWhGZWJLRXEyNzBnQlNnNnZQZzd5NwpTWDlLTW9xZWVLVmNxeFVDQXdFQUFhT0JsVENCa2pBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd1V3WURWUjBSQVFIL0JFa3cKUjRaRmMzQnBabVpsT2k4dlkyeDFjM1JsY2k1c2IyTmhiQzl1Y3k5cGMzUnBieTF6ZVhOMFpXMHZjMkV2YVhOMAphVzh0YldsNFpYSXRjMlZ5ZG1salpTMWhZMk52ZFc1ME1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmNXb2k2ClJjeGg4ZnBTaFlMR3lhci9Xdk1mL1RZTmprdHhMNGQrNmlJck5WejJHRDlvV1FFcWNYMFJCTGlkN25uaUhXVmcKVWRoS05rV1QxUk1jdWpjakhXTzJvbEd4RVE3cmp5aHkxTkRUM05ta2R3U29kL091M3Z2eW9LMEJSSXFpMS9JYQo0VHBQSlFqaHdlK01lbE4rMFRCei9hMlVXMGt6OGJKZnFMTzgrTDlOWWdFT0U3aW1hei9OWjFjRkZnWE9qdzVqClFaSGRCTDlvQys5M2YzcnBUZTlWV3dmQ0kyNDZKZUJNMnUvQXhrZFVTcXhTOXVqMHprR0twbVFMeWZSTm9jSmkKOCtpSk4rclg1QkoySlBPbk9ra2pydnBOVGkxQW9TREozTGJSZk94QVBHdWU3UXQ3a0x0NmhhR0VsUVdkUUxicAo5eWZaTjBmRzFCZkZjNGxxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key.pem: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBNFF6MTF4aXpGTUczR0xYbzBjTFQxdkpxT2JXZGQ1dFNqZDllcWtCT1lHQ1RvYVh4CnBqeEFvOXFycEt5YzV0Q24zMTJYaDNhOUVDelR4TjNDNUpMc29HL1k5QTdvbzZYem9MZ3IyQkFDeHRwRUdRR1IKeE04YzNGTzU3V0xnK3prWEtaNmY5SGFkVW9ZaWdjZkhqdlVGSlZ6T1BOYTQ1cXBXR21HTDQvRTJZRkxJV0g2Zwp6VVlkQUNmZ3JJcU00RVNoMEJmeU1laDlYTzBtYW5wVllOWDlqb2Y3SGhJNmN5NWFMSlhPUERZY2RzeGNxZEh4CkNIeTVXZWNubnpIS2dBVWppQlhGUjVuNEZ0N0ViMFBQR2F3OXg5M0FQeFI1L0RDME52clpvT0dNTHZ0SXdTVGMKaldFVjVzb1NyYnZTQUZLRHE4K0R2THRKZjBveWlwNTRwVnlyRlFJREFRQUJBb0lCQUVGdkVqK3pKOForT0cxUAozdHkyWi8rVVJqeDNTTXlROWFUWWNGN1NDYmZOL0w3QVVBMkVjVXJ5OW5zUDBTTHZRaEFZMTBrRXhoM2cyc1hmCnNKM2k5amdEclRIdzc4VTlLQ1B2eUpldXVBLzNRRnVBOEZBbjQvMVB2cng5eG1wbEJBNE8xL1V0VTdxOTAyU20Kb0tnNUo0RGdoZnA4ZUJCaE1GM0ZSUFpHbVFmU0hseGQ3NkdXQlhzaksyR25PVitQWmh1TGJzS0diNWo3Z3BmNApOQVBEcVVqdlNKa0JROXZDWHhBdjhTckw5cXBnUjMxdU91ODZ2QTI4TWNvci85SWJicmpHRkczRG0xWm9DSDFZClRDUWVHeGszYkxQRGd5d3NXUURubDFDd2tWaERULzV2UVYvRDBuejlwKzZmV3pXNzJYOFJmdDhhOGhGMkVRTDEKSFlxSFp3RUNnWUVBNmU2bmJOZURFd2loQnVoMVl5aGg4NHF1MytaN255TGt2WHl2UFhBQmhJMmVMOFpNdVlLMQpmNnZKSGVNYmJkcUdONWZWaXZzZTlFQzc5eWx4cFZYZElPbjE2aHFVZHRrSGJUWjJ6Y1d3L0ZScFJRd1o0dXVGCjExRHFrL2FJbDhQaGVlWHdyTS9KNG5FL2FYVXFUS1hFUlo0WVA5aHk0QmxFYXRYdE9xcGVvVUVDZ1lFQTlrZlIKMng5RVFQNWlHWG5qT2JqWHA3NFo4eXF5Q3N3M0pFd3BmSkZhYmlySUtPeitYSTYraXN6b1dLbWs0U3lva2VWZgphKzR6dHhmTGhzbDZvamJjdVZQK2NPd1R4Vys0TnJSZ2ZGOHJXVzJDZ2gyVENScVd1TVRtQkVtMmE0OTF3SmVICmlkeGsyNEVLTmtUbDBDVGVrT0ZUMGxpaGNSZFl1ODFpUUpRQWdOVUNnWUFRWHB6a3B1Z0xLdTFwdUZhT2k4TGUKOGZOdXc0Z2ZDS2dOQW02WTAvK25NT25DMmhPQVg3OG5vZk8rM2FlTHRtRHgvdlA0ZDc0Z3hXN2h5c3FqRVRFYQpIb1VRenE5WTZiTDFWM3hVeGVLdXBaR0FQV3FLVUlUYkhsUnI2aktBdkRwSTkyZ3lENUJIQWptM3ZYVXFTK2RDCkg5LytoN3p5SlpKK0QxNDhYck9rZ1FLQmdDSXhhSDUrd2RBd1FWaCtKc0VkMjdzclZwai9SWWJnUVl1bGsyRDcKSVU0SVhJL3FENHEwT3RvMGh0SEFnK2JMZDRBQ0U1UjlsdXFGd0RrdmdmcEJtYldWWnM4d3g3SHl4K1c0ZDJqdApJYXloMnF2TUJWMFBOdnZpUW5rMzdyN1NSU3YvSGM5VExTR1lzZDFGQlk4M2Z6c29QYVlIcmlwd2JsNXNyb1orCnhlOGRBb0dBUDNJTkJQSStwVHJYOERldXg5YitOMm5uRUtFV3dpY054bDRBUlRIQWJGanR4ZWc1eHdGdEhpRVMKRS9hOEFmbVUrL25OWlRvOVhHS05kZXJqQ29yUTE2ZDR0YjBFdTZORzcvRHRldGlFY0ZuSURSNmZxVGFoY0VrZQo3Y0M0S2V4bXZRYlBJQU42SkQzc1RlNFUwUHRSaFFKZ2tDV0lrOGRIeE9YMkZrTm0wSG89Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  root-cert.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRQVdMTTRlb0RhRDlzR29icFNIVnRYVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU1sb1hEVE13TURnegpNVEF3TWpZeU1sb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNGtPSUJ4Zkd0cUNGa0ZadTRlSHNINFhYbEVKcFY4UTdjOG15NnoKcExIS2FJVXVQNnh0L0pUVGp3cHlUbXFPWW53TFpCdWV1aFAxY25VSXRsczZRSDl1djNVK0VvbU9EcUtWMUlWcApNYzZ4VFhBaUMrVHcrSkpoNVNZL2w0QVIxN29LWi9hTi9vVXNKVGdEUnJGNmtiRmk1OEhXZ0ZDbVVub095UGVjClBza3NTMDBpSU95VDZ5cHB1ZjhKTFZXVkgvQmpNbHgxWHcwNERkZDN5ZVBDMWNSb0NDTnNpQjZmZmRtNEZWL20KL1libU5vMEVwc2FMUG5VWWNXa0M2UFQ0U1hUcjB2ZThaSG5Ub0ZJZzRlNytybmJHUEZYdURmNUg0YW4vRUNRegp1SEpQVm5kZTJvU0NzZ0I4a1JhWFNxZjBFcTZQMmMrYm83cS9TamkrK0JqSW1oY0NBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUVrcEkyRDZESE5YNVhtUVlRSkl0L3lmeTJIYlhRckN6ZGdFRnlJWFl1U2NTYkVxZGpTc3FFY0J4dHd0NFBMNwpyV3ovVzN6MnhBanp5bzE1N2VMaVd4RUo2SHZsT3FTNzFIZVd3WUM0RGQ3ZS85U2MwWGMyMEhOYk14bS9Sb213ClFUZ2lkeEY2UHhZMW9icjVNT0JXQ1VjTVFCNlM4Q3d0MzZvSTZkYXN4bHNzQytVZWlDdkxqZDV2YzZlbk9hRkwKWVh0WkZFd1JGUXg1bDRTSlhwTmRWZ1VUV0VSeU1XdlhHd0NWbkFwV1lvQlpVZ1B4TjdCTTkzbUdtWGdzZVBtUgpUSWxteHVQN3FCQ0s1RXRYT0NnL0FLa09jcktFaTJxNHB4b1JvVk5veXlCOXlRQVdzRlhLbHhYZmZxL1U5MWtkCmp0ZHM5NXZVV0g5VUpjZnBUTnV3NllRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
type: istio.io/key-and-cert
kind: Secret
apiVersion: v1

---
metadata:
  name: istio.istio-multi
  namespace: istio-system
  annotations:
    istio.io/service-account.name: istio-multi
  managedFields:
    - manager: istio_ca
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:32Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:cert-chain.pem': {}
          'f:key.pem': {}
          'f:root-cert.pem': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:istio.io/service-account.name': {}
        'f:type': {}
data:
  cert-chain.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lRRzdNTzFiTGk5QmNQUyt0cExESU1KREFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZek1Wb1hEVEl3TVRJdwpNVEF3TWpZek1Wb3dBRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNSEkzd0FJCnlXVHNCdXo3YlVCZmh2L2xRYUM0eERHOFF3VjVtRlhoY1FFLzdJWTlDNkcyaEwyaFNVc2JndmdZbno5NWRZajMKRXlYWVd5cVB1Sm1JRlpXd20vSHd0cyt4Qndpc3o5QTkrOEIvbkRjSDdYMG9jSm5OdnR0UW5ZZXNCVzF2enhwdgo2cTJlQzlOSW1tMCtkakVWN056eTY0QVNRL0RIc3Jmb2pIV2N3V1ZTVFQxZjhNc21VZm96YnBTNXIxcFlMZzA1Ck1nSmVvRDFsT214M2FNNGhZYmoyRGFkckdNalZZNExKNmRmeHcxTWhQUmxNUFF6Ulh2cXgzYksvYnhuWnhQQ1kKZjVHL3lmcUdKOG5aSDlHRVVKRkJIbU5nNnJVZFJjM3d4QU56WlpWaVFMSXBYS0RZaHQxTnlMV1NrTVF3UEhTVgpKaHFYbnA5b05pRCtyYWtDQXdFQUFhT0JoVENCZ2pBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd1F3WURWUjBSQVFIL0JEa3cKTjRZMWMzQnBabVpsT2k4dlkyeDFjM1JsY2k1c2IyTmhiQzl1Y3k5cGMzUnBieTF6ZVhOMFpXMHZjMkV2YVhOMAphVzh0YlhWc2RHa3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRzBBVWFRbktRWlJaOEdCUmZaNDVyRkU2OXBiCjRoS0g0eGRkRjU4MEVuTzhSRkI3aGc0eTNmU0t5WkZGQWVnLzU5ZlBXTENSRnhkMkhlTjh4NStDUzdBY1lCWDgKZXBWZ2lOYUZzTHUzSTZ4YTBPbW5CeVZqNlQzRGVJZzNPZkI1YXNocWF2SDhuRGFKdjdYL0pnemhOc3ltUHRlYwo1VVVJaUZURUJodnlTYjdXSVAyRHFFTFEzYjdDMC9NbDZIMStGLzgvUFlkeC9DN0ZNT1hnREUraXVBUHA4K0g5CitROStQNG9hZkhmbzRpdjN3VUZ6REhtSXVaMUxySTNLYmlRODVYaDg2cTY3dCtUaURjTStIck1zUjlaK2pmSUsKazd4MURHeFZ5SlAzZUk1S3JiQ0NVVDZJeitPYmMreVFya0txQ1N3cWRpdGVFeEtCWE1PcmhFTHVyYkE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key.pem: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd2NqZkFBakpaT3dHN1B0dFFGK0cvK1ZCb0xqRU1ieERCWG1ZVmVGeEFUL3NoajBMCm9iYUV2YUZKU3h1QytCaWZQM2wxaVBjVEpkaGJLbys0bVlnVmxiQ2I4ZkMyejdFSENLelAwRDM3d0grY053ZnQKZlNod21jMisyMUNkaDZ3RmJXL1BHbS9xclo0TDAwaWFiVDUyTVJYczNQTHJnQkpEOE1leXQraU1kWnpCWlZKTgpQVi93eXlaUitqTnVsTG12V2xndURUa3lBbDZnUFdVNmJIZG96aUZodVBZTnAyc1l5TlZqZ3NucDEvSERVeUU5CkdVdzlETkZlK3JIZHNyOXZHZG5FOEpoL2tiL0orb1lueWRrZjBZUlFrVUVlWTJEcXRSMUZ6ZkRFQTNObGxXSkEKc2lsY29OaUczVTNJdFpLUXhEQThkSlVtR3BlZW4yZzJJUDZ0cVFJREFRQUJBb0lCQUNNTkFEanpYZW9oUHdkeQpXc3AvL04wZ1RJU1RwdmtRQWxkbExRYXJwbE1CaXZpazVndTBCY0orLzlEVUF4WjQ3YVQvaFNEbS85R2lscXJXCklCKzFHNkpkdFhkSGdPbUVMYStHQW5pNkhXVXVMOFZNYThwdG5DQlZ0S1hhcVFPM082d1Z3eklXK0MyN0hveHkKMzJ2UEZuVytiMzl2ZU9WTGFIcU94R2E3YTF5Q1UxTGwrWG1NMGdrb3orL2tlWXc2OGNNdURQK2ppRGcraWsvZQpDZVhjMk1oTzNoa1pQaXRkSnZJbXZiUjJma1lldWE0eXRPVFpUVmlwMllCR2pvZW4zdUc4V09QMzNIdFlBKzZhCmdkRFprUG0wWGg2T2V6UVRqNlNUNS9aTExwLzQ3ckJuWm0wTDdtVG9wU0JLN1NMeldJb1ptM0ZWeFVOSEUvRHYKTHJVUW5RRUNnWUVBMDZCOGlGMGxObEhucW9xOFdiOG9wRHlNbkhXb1lwZEV2bnpsdGhxTXp6V1N2bktMTnRlSQpaREd1cWJlbFU1YzlsTHh5aDBOWFdBTzVLVEY0eEFXa3BWODc2OEs0WnZ6RThWZ21oTDl0N1ROanlkK2Y5cjB2CjhUUHZ4U2RFdlBqVFJ5YXFBM3p5aVdEcFE4UlpZRGRMd043SStaV0FtSzBpbzVhZlhnYXhucGtDZ1lFQTZtcXEKT1NqVVBnbVRIVCtaYm1aSy9HS2F0dXF5K25GTjZwajRQbnI1NEViTlRRVmlXSmRucE8wOWNxeFh0ZVk4NDdkMAorMkovN1JIc1VzUG92dGFsbUpXME5WZ3YvZWdIRmRML25KTmsrMWp5aDhEekk0aXNydDJUVm9qTkxlTzRDSFpHCndWM0RqcStGVDVwYmVoNUxEbElkYVpncy9IN0ZDRlpWV3lSM1FaRUNnWUIyWjhqRmt6Z0sySERDSHJXYmtUVHcKRDJDcytiZW8wZklJa21FRUxuNnlRTXRGKzFpZzZwN0pVSExsU25jWitmamVpMEdaSkxodDZrZGpJT2JzNWl0awp5NC8vTFFkM3Q5MkpHMFVSNlBsY1NmQi9OcnVObGZTSkJBSVhVUTFJbmYrNFE0M0VQZGlGdk05R3QwazZhRFhlClI4Z3l2TThpblZ4UUl5b3Z0WmNUb1FLQmdRQ1VCV3lka1ZtTUh2R2xhMjZRRnNuTTJ0ckZIQ2lPR2hQUVNtMmUKem5xUWswUzZHT2REOTc3N2xzN1JaV0F4UFVRL3FxMlV1MXI2TVBJZ1JSTG54cFJrYUV1Vno2em1VS2lBc0c2MQp5U0RmMGdlN2p5dzR5T241dFhKL0Z2MHd0L1dTYWxVOWJ0NjRiNzduU0JueFg4V1hNbVRlTTdoY2JCUXdzb3ROCmRSWlU4UUtCZ0dRRmlaWEc0ZVBPdzlVdDAyMHg0bXFJdGszV0Qxb1F0bmdlRjJzWFRhZjBOKzc3UnlaQlV4UVoKMmhjNE8vTGpYckxCV1BKMENHSXR0V1Z2R1FpOTV2NUJBdVRZWEt5Sjd2aTRQWHFzU2tJVWxCOE85cmo4MDZwdQpDTzA5anRubkI2bXdodHVlT2hudy94KzE5UEtBanE2dG9DVmFlV0FSVjAycXgrU3IxbnA4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  root-cert.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRQVdMTTRlb0RhRDlzR29icFNIVnRYVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU1sb1hEVE13TURnegpNVEF3TWpZeU1sb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNGtPSUJ4Zkd0cUNGa0ZadTRlSHNINFhYbEVKcFY4UTdjOG15NnoKcExIS2FJVXVQNnh0L0pUVGp3cHlUbXFPWW53TFpCdWV1aFAxY25VSXRsczZRSDl1djNVK0VvbU9EcUtWMUlWcApNYzZ4VFhBaUMrVHcrSkpoNVNZL2w0QVIxN29LWi9hTi9vVXNKVGdEUnJGNmtiRmk1OEhXZ0ZDbVVub095UGVjClBza3NTMDBpSU95VDZ5cHB1ZjhKTFZXVkgvQmpNbHgxWHcwNERkZDN5ZVBDMWNSb0NDTnNpQjZmZmRtNEZWL20KL1libU5vMEVwc2FMUG5VWWNXa0M2UFQ0U1hUcjB2ZThaSG5Ub0ZJZzRlNytybmJHUEZYdURmNUg0YW4vRUNRegp1SEpQVm5kZTJvU0NzZ0I4a1JhWFNxZjBFcTZQMmMrYm83cS9TamkrK0JqSW1oY0NBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUVrcEkyRDZESE5YNVhtUVlRSkl0L3lmeTJIYlhRckN6ZGdFRnlJWFl1U2NTYkVxZGpTc3FFY0J4dHd0NFBMNwpyV3ovVzN6MnhBanp5bzE1N2VMaVd4RUo2SHZsT3FTNzFIZVd3WUM0RGQ3ZS85U2MwWGMyMEhOYk14bS9Sb213ClFUZ2lkeEY2UHhZMW9icjVNT0JXQ1VjTVFCNlM4Q3d0MzZvSTZkYXN4bHNzQytVZWlDdkxqZDV2YzZlbk9hRkwKWVh0WkZFd1JGUXg1bDRTSlhwTmRWZ1VUV0VSeU1XdlhHd0NWbkFwV1lvQlpVZ1B4TjdCTTkzbUdtWGdzZVBtUgpUSWxteHVQN3FCQ0s1RXRYT0NnL0FLa09jcktFaTJxNHB4b1JvVk5veXlCOXlRQVdzRlhLbHhYZmZxL1U5MWtkCmp0ZHM5NXZVV0g5VUpjZnBUTnV3NllRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
type: istio.io/key-and-cert
kind: Secret
apiVersion: v1

---
metadata:
  name: istio.istio-nodeagent-service-account
  namespace: istio-system
  annotations:
    istio.io/service-account.name: istio-nodeagent-service-account
  managedFields:
    - manager: istio_ca
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:43Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:cert-chain.pem': {}
          'f:key.pem': {}
          'f:root-cert.pem': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:istio.io/service-account.name': {}
        'f:type': {}
data:
  cert-chain.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQVENDQWlXZ0F3SUJBZ0lSQUpIK01DdldkaDdmMUZ3N2FXR211M2t3RFFZSktvWklodmNOQVFFTEJRQXcKR0RFV01CUUdBMVVFQ2hNTlkyeDFjM1JsY2k1c2IyTmhiREFlRncweU1EQTVNREl3TURJMk5ETmFGdzB5TURFeQpNREV3TURJMk5ETmFNQUF3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p5N1JxClJSbkJXMnlIM0JJRElldk11a3JpUVN3V3Y1UUwrWHhFK3dscmp5MldaNVVlU2YzWS85TktwSXpvYmJsZHM4anAKR1dTRm5zR29tMXVUYzFhb1BNMUpDSGtIZ2hGRVprUGtqUHBwTjRXQnNlalR6RFlsbjBQZGxHUGtFNVp0NTRCOApLVkVUdStsZTViZnZ2MnQyNTlZRnpYd3h2ZkhubVIzU2gydXRScm9ncmt2UkF1Zi93SDR4S1BhVDN5ZktDcVdUCnFsV0Q0ZG15NWZJdEt1REhSTUQ1NWY4ZkFUUUtpcGpLNUlTbUtSdHRjUmRpdVJ3THJ3UHhLV0VWN3lMZUNBdEgKZTJrZkVZNDUyVVdQQVg0cmgxKy83Z0hHN2dha0xEaTQ1UDdoYjhBcUJJK0J3VDVzSGhKMHkzRE1YR3B1VVJBUApSMG1mVVBYNzlhaGlIOXU5QWdNQkFBR2pnWmt3Z1pZd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1GY0dBMVVkRVFFQi93Uk4KTUV1R1NYTndhV1ptWlRvdkwyTnNkWE4wWlhJdWJHOWpZV3d2Ym5NdmFYTjBhVzh0YzNsemRHVnRMM05oTDJsegpkR2x2TFc1dlpHVmhaMlZ1ZEMxelpYSjJhV05sTFdGalkyOTFiblF3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCCkFHank5VER4Y1BEd1Zja2lWWFBIYjFQRmtMNitzb3Q4NjhSbkRTVG5SOVZicXVNRGJrVkhWcWZkSWlYdUdzeGoKakJvWTcrQW1ML3gzaFV0YTJOWDhJS3NvTE9ISDlKTzR5VGNzd2FLaG53TjBaS01yVTA5dW9EeXdrUWZJTWNvZQpxY0FqUmljMmZjcjdxMWtYeFN3akNEN0JzYitscWpWQ2dwMzZON0FJdUFGMWNyL1Y0QjlLMzZEUnYxaUtkUTlHCkRyMy9wZ214NXFSVTFuNXJraFdVV1dLakl5REVaVjdvOFhXS2ZDd2pmWFFmWHZhWHl4VjBBRnRoOEJTcHdVYlYKZ0psT09vTldIRXlhTWtPdWZRYkYzdGJkZnkwQmFqaUw4alc5czNnODBrSTEvYUxFTDJoaFEwSDAvakRiV1F2cgo0QmdDS2lUVDRhUDNXSVVpdVVFL2w5Yz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  key.pem: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbzh1MGFrVVp3VnRzaDl3U0F5SHJ6THBLNGtFc0ZyK1VDL2w4UlBzSmE0OHRsbWVWCkhrbjkyUC9UU3FTTTZHMjVYYlBJNlJsa2haN0JxSnRiazNOV3FEek5TUWg1QjRJUlJHWkQ1SXo2YVRlRmdiSG8KMDh3MkpaOUQzWlJqNUJPV2JlZUFmQ2xSRTd2cFh1VzM3NzlyZHVmV0JjMThNYjN4NTVrZDBvZHJyVWE2SUs1TAowUUxuLzhCK01TajJrOThueWdxbGs2cFZnK0hac3VYeUxTcmd4MFRBK2VYL0h3RTBDb3FZeXVTRXBpa2JiWEVYCllya2NDNjhEOFNsaEZlOGkzZ2dMUjN0cEh4R09PZGxGandGK0s0ZGZ2KzRCeHU0R3BDdzR1T1QrNFcvQUtnU1AKZ2NFK2JCNFNkTXR3ekZ4cWJsRVFEMGRKbjFEMSsvV29ZaC9idlFJREFRQUJBb0lCQUE0YklQSjErUDNaN2NMVgpoUWVZQ0VLZFdJMmJwenhlUzFXc3FyTVdHMzJUMncwMDVuYXhVSmM3a09yQXVSSGJRVGQ4b0RUUzV3Rks1c3FxCmRueUFWbG91d2s4ajE2aDUzeHJRNDgvdkJESERnay9sRG5RUEJpcS9TSXp3bHBteHhpYTQ1U3ZNTXh0TDk1RWcKbjNLYVBac0Q1RDZqcjZwby9VaEF1M3pDQk5mck9CUG1DVEg4bzJNRU1yUGJldGhmeGJSS2ZHWWpwc1pIMUM0YQo1TXo0aThmZWdxb1k0dTJ0bUxUbUo3VmR0T0J2WFVrOE03R2Vxazg1QmdLWmFIeXJOWWJyNlBUWk9Bai9ScXp5CjV5emc1bGI3S0tSMzgyYnpnanl0YjdtRWFBZFFaTVVnc09lVUc2N29KWEYzQ2dnZU5IM3pZQzl1SVk0TTJpWWMKemJhYWxvRUNnWUVBMXo3NVZFN2l0bExlc3MycTM2ZFNRbVpYUFFIcE5ONE44MnpQc0ZWWWNwWCt0ZzZrY0JNZgp6aHJ3WGZERFg3U1FSRi81VFY3Q2FhWnlTemltVmhQTDJJc3ZIQTRXNmsyR3VwTDlMTm5EWXZtRlR5d3l1OUl6CkJwK3pQVDgrbWxPZE9DcjR4OFUrSEhVeitXR2pDWHhidkMwc1Z3c1dpR0ppQkx5aVorRHVlTGtDZ1lFQXdzN3MKYjI3K0JjalhYL3FHclBsK3BtNElwbWkvb25jVTYvM3JUcnNZUDExQjc2MDZFdFN6a2JxdEVqdXM3U1dvTHdVTgorT3h6dE5tUXF5Rm4zcVVUeE4vdm5uUGxkQU4zbkIrZklUN0RyT1BzckVNbUpIRGhDL3ZIVjdDZUtJTkh1M1F2ClA2YURXUHVqcjhWN3RCaW53R1A3L0ROQjhqZGhtUjVhSjM1MU1TVUNnWUVBdjJSTml6dkJ0MkVraUZUOFZYYVEKWEY1bnYrV05HZWRBL0d5S21ENnJNT2hTM2t0U3lCMFpNTWtmWmtpSlVQWmJPWkVsT2pqQ0lmTlF1Yllib1hwawp6WjJsUEFzRE1UL1NSdUFnb3RyWE01Q3ZpdURBRStZcVhQOXYvMHZYUEo2UXM3cnlENkJCUkVpcStGcHJBQ3BGCjM2TkRRL3FtQkl1R29MT2lyVCtDakhFQ2dZQk5DUDYrWWluWnA3NWptZkkvM0xtVW50YVUxNzlRUTc3bVE1Y1YKbnk3TGY5bGZLaVZZNVB2Tm1RQnZ3V0YwdGZ0My9JdTE3K3NoalJlRVZNVjZhZFVUZVdxTVFsQnVQQ0RFZ0V5eApITnpNTmFXVnlVZ0FDUk0xWmU5Q1lmbHBFK0Q5NDhmN1o2RnhRckZNQk5BU085MjZXczkrdjlaSUxsWk44bzY4CkoybTRjUUtCZ0dVZjRuU0xKYk5DMUdpUWxpSyswS1dHS0sxenY2Nld6WDkxVEZlbG1sVURNUER3eGpzSDdHRUkKQ20rcWFtcW1yZDh0QnhWNUxPOEpFYXJxamZLeEhGMWZqb05raU1NVEovZTAzTktRWmZDemUxbkNOcHFwZTdSegpVbmNoQmxMYVpvWFhiOStNVkExelViV3pWNHlCN1hGZmhqNGhkSnI1N1pnOTNPVmJkT3V1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  root-cert.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRQVdMTTRlb0RhRDlzR29icFNIVnRYVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU1sb1hEVE13TURnegpNVEF3TWpZeU1sb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNGtPSUJ4Zkd0cUNGa0ZadTRlSHNINFhYbEVKcFY4UTdjOG15NnoKcExIS2FJVXVQNnh0L0pUVGp3cHlUbXFPWW53TFpCdWV1aFAxY25VSXRsczZRSDl1djNVK0VvbU9EcUtWMUlWcApNYzZ4VFhBaUMrVHcrSkpoNVNZL2w0QVIxN29LWi9hTi9vVXNKVGdEUnJGNmtiRmk1OEhXZ0ZDbVVub095UGVjClBza3NTMDBpSU95VDZ5cHB1ZjhKTFZXVkgvQmpNbHgxWHcwNERkZDN5ZVBDMWNSb0NDTnNpQjZmZmRtNEZWL20KL1libU5vMEVwc2FMUG5VWWNXa0M2UFQ0U1hUcjB2ZThaSG5Ub0ZJZzRlNytybmJHUEZYdURmNUg0YW4vRUNRegp1SEpQVm5kZTJvU0NzZ0I4a1JhWFNxZjBFcTZQMmMrYm83cS9TamkrK0JqSW1oY0NBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUVrcEkyRDZESE5YNVhtUVlRSkl0L3lmeTJIYlhRckN6ZGdFRnlJWFl1U2NTYkVxZGpTc3FFY0J4dHd0NFBMNwpyV3ovVzN6MnhBanp5bzE1N2VMaVd4RUo2SHZsT3FTNzFIZVd3WUM0RGQ3ZS85U2MwWGMyMEhOYk14bS9Sb213ClFUZ2lkeEY2UHhZMW9icjVNT0JXQ1VjTVFCNlM4Q3d0MzZvSTZkYXN4bHNzQytVZWlDdkxqZDV2YzZlbk9hRkwKWVh0WkZFd1JGUXg1bDRTSlhwTmRWZ1VUV0VSeU1XdlhHd0NWbkFwV1lvQlpVZ1B4TjdCTTkzbUdtWGdzZVBtUgpUSWxteHVQN3FCQ0s1RXRYT0NnL0FLa09jcktFaTJxNHB4b1JvVk5veXlCOXlRQVdzRlhLbHhYZmZxL1U5MWtkCmp0ZHM5NXZVV0g5VUpjZnBUTnV3NllRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
type: istio.io/key-and-cert
kind: Secret
apiVersion: v1

---
metadata:
  name: istio.istio-pilot-service-account
  namespace: istio-system
  annotations:
    istio.io/service-account.name: istio-pilot-service-account
  managedFields:
    - manager: istio_ca
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:48Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:cert-chain.pem': {}
          'f:key.pem': {}
          'f:root-cert.pem': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:istio.io/service-account.name': {}
        'f:type': {}
data:
  cert-chain.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRYWdZSmEzNEpibVQ0SmRCM1JURjByREFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZME4xb1hEVEl3TVRJdwpNVEF3TWpZME4xb3dBRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNYmJOTk13CnNGZDZBK0tINVBtMnNGc0xmMC9sdmR2TG50RnJWZ3BSTmpMMXNHanNJdEIyQ0xXSjhRZHdJWHBldngrL2hqNWwKZmRndlpuWUNMeCsxYjZYWnJGdUVvQVpvWll4c2QxY2lHTU82MnRGSXBTMUY2YnFaTHlyS1RhUG96clZBcmVRMgpNaVRIdXdxcFNJZUhUMmQrTEprSm0wbHRvdTE0b2tQZUN6QWprRDlHY01UQnM2aGFYaVRiVjM1M0taL3pid2VzCktCZStFVlB6ZjFaV1BuVmVYUWowUHorZUlOUmcxUnl3NVhyZEVSS29zYkJhZ2JxQUVaN0hnc0I1Z1pVdmVxamUKT0taejVzSkhWN09DUDNUZ0tSekluRGNRMmRiNW5BdFdqWTh1VjYyc0gvNXhySEwxMzhLSnRyc2pweklhUkJ6ZQpDRzQzR2Z0UFlTaFJIZmtDQXdFQUFhT0JyekNCckRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd2JRWURWUjBSQVFIL0JHTXcKWVlaRmMzQnBabVpsT2k4dlkyeDFjM1JsY2k1c2IyTmhiQzl1Y3k5cGMzUnBieTF6ZVhOMFpXMHZjMkV2YVhOMAphVzh0Y0dsc2IzUXRjMlZ5ZG1salpTMWhZMk52ZFc1MGdoaHBjM1JwYnkxd2FXeHZkQzVwYzNScGJ5MXplWE4wClpXMHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSmQrcGxVMzhUbWxGU0h2N0pHWVlXdk1VbUIrQjg5ZUhzVGkKL1BsOEVZVzRWL3ZPZFc1ZENOdTdzeUtFOHlwV1ZkRUZKU0ZwR05BQ3RvckVLNUZ6dW9tTDdxV3FMTk1lc1VrdwpyRFFXZXBvNGJuampleGRHYmRuWVRJSXMyYXJFRUFOTVluNTZ6S1BIbUJJSjJWTktIbGl5YnZpMGlUSDhjUGhsCmZjNlQ2cjZMbURqaXhNUE5XclM0NlFkRm0zUC9lMnd5TXhTbWxpd0lvekdXZXRIYWNkdnBDVHlyT3hPZEt6QkgKRUtWSWZMcVVWNGNnSlZZWWp0V3FMaE5lM25nY3NTczNaSEcrVlRWeXlJSUtPZW56UkpybHpQaGllOGpWY0dXYwpoOWx3Mi9mbkdSOXBCR3lNNUtJQkdORWs0Um5uMFl0UTlncHJ3UUdmVkVuUEdsZFRpeWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key.pem: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeHRzMDB6Q3dWM29ENG9maytiYXdXd3QvVCtXOTI4dWUwV3RXQ2xFMk12V3dhT3dpCjBIWUl0WW54QjNBaGVsNi9INytHUG1WOTJDOW1kZ0l2SDdWdnBkbXNXNFNnQm1obGpHeDNWeUlZdzdyYTBVaWwKTFVYcHVwa3ZLc3BObytqT3RVQ3Q1RFl5Sk1lN0NxbEloNGRQWjM0c21RbWJTVzJpN1hpaVE5NExNQ09RUDBadwp4TUd6cUZwZUpOdFhmbmNwbi9OdkI2d29GNzRSVS9OL1ZsWStkVjVkQ1BRL1A1NGcxR0RWSExEbGV0MFJFcWl4CnNGcUJ1b0FSbnNlQ3dIbUJsUzk2cU40NHBuUG13a2RYczRJL2RPQXBITWljTnhEWjF2bWNDMWFOank1WHJhd2YKL25Hc2N2WGZ3b20ydXlPbk1ocEVITjRJYmpjWiswOWhLRkVkK1FJREFRQUJBb0lCQUZnV2JHME5DV0NHclVmZwoyTjZCUGRmbTNPdWdvcHpGczBHallZYktlTTdVSk9RbGpqcDN2dDNrRUFBeWZMSC9YSHlNMDhPNkk2ZnJQMkVSCkVKemtPMlBsYThOU21heWMvRGJiS1haUXBWVzI1UTJHTjUwNWRoTHhub0kvQVd1VlNsUGlKZVdNMkdPUWtsdGoKcDd4WmhTUWNNVmROZVJ0cTFKeUxMcDRQc3pjTUVXWS9sTXB1M0hpNmFBNGtpZElLWVZDQUE0V291SExlVkpaMgpoaG1UeVV2RWZ1SkRRTi92cEwvRk9kTFZDa2ZrM3NpRXpPMFF1VHlXZmRaZzgzbWVYcENmTkkxZm9TcHByWWhkCkVGRGdhN09BUFlUS2dLTzRBN05QTW1mZEdMSnRuSFk5ZmdvR0ZtR2FQNDFTeVVGRmRQWVdwUmRLbXlxckJkWWgKc3pMNVZURUNnWUVBMEVzc2tVRHNIWDI2YVFwTWl1NTBnWUZlb0hFbDBjK3VEbkZTeUdkdlkxdDZHN3gwT2d4cwpxazFzdjdCeW02aG5hUjFWYXEwZnZaOFpQVkZOY2xNcUlRaFdkR3k5anY4QlEwV3B2bmVoYVBPaFZQalNrem9rCnNGS1hFeVhHK0F3eU5VZ3AyYUpVVzhZMlduWTYzU2IvOE1kM2l1YUZDOVV5aTg4NnY3Y1F6bDBDZ1lFQTlHYXgKZHpzMkJkZmlsdUI1NW4zY1g3dDBGU1VjdlJaVWYzWVRSQzU5azdSVnI2YkM5Uzg4OUxHWktjaVAxREovTVAwMApIbkVDaWU1TzJWYkY1STk1RmQ2SVN1V1RaQnJhT2R6TWdWUVJuV2h3d2NXZnpHeERmbGhRQ1dsOEpOUWVPZkU3CnFCUC9uS3drbDlRczNCQ2NRVGZvZ2tJUjBmTmdOUFVlLzNTbWZFMENnWUFoL1FKS3VYTk41S1EwVzYvZHc4ZFQKRW84a1V4SSt5RXE0cEpsRGhrMVF3eTZMdEJhckdqZnBHalV5bWxJNVFDT1ByVyt3dG90Rlg5NjRlTG5RZSsyVgo4a3haTngwL1pqRUlqeWVCb3ZlOXJuT1c3L3M4ZHZKaHF6aG5zWFJrS1dsUDlIU1B4TU5MTG03VUdCTEczNFJICi8rUnJ6KzNKM29JZStqTzE4T05YS1FLQmdDV3RHeGlOV1RPblp6ZnBIUUdxVDJtMnBSdUpZQmZLTkhaOXhsU1IKY2l4dDlYT2htcFpmbE44SDdkdWlIb0lRMHNqRGorQk5mWjJ6emhYMUtZYWxrMzRLa3lvd24vc2pwSmFjOGkzUgp2dkZzSTAzTDRHbU1HdytFSDdxRHQyNmFBSnJnRkZsQjAvcmNFcndSS21VMmJsQWpoVVZuV0FYc3BkMGtHSVk2Ci9sdFZBb0dBZHdHU0FvRVhRbmNXWFpvaXdTWlVIanJjV2pPSVJLMkV2RzVBMmZKa1dORlExMy9qQzkzU3BSYmEKbk1rWXJMbllWWHpWVkxPZ3pxcVp4eW1kK2NvZEtmSk1LVkZQeWxBSUtsMHFjQTdsZEdmcWk1N3RSVjdpUVlmcgpnSG1BUVVxMVQyelZyeTAxMExJQkhVRGxTb092dFF6TnZWOFp4c0ExdmZ2YlZnNzIyZFk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  root-cert.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRQVdMTTRlb0RhRDlzR29icFNIVnRYVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU1sb1hEVE13TURnegpNVEF3TWpZeU1sb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNGtPSUJ4Zkd0cUNGa0ZadTRlSHNINFhYbEVKcFY4UTdjOG15NnoKcExIS2FJVXVQNnh0L0pUVGp3cHlUbXFPWW53TFpCdWV1aFAxY25VSXRsczZRSDl1djNVK0VvbU9EcUtWMUlWcApNYzZ4VFhBaUMrVHcrSkpoNVNZL2w0QVIxN29LWi9hTi9vVXNKVGdEUnJGNmtiRmk1OEhXZ0ZDbVVub095UGVjClBza3NTMDBpSU95VDZ5cHB1ZjhKTFZXVkgvQmpNbHgxWHcwNERkZDN5ZVBDMWNSb0NDTnNpQjZmZmRtNEZWL20KL1libU5vMEVwc2FMUG5VWWNXa0M2UFQ0U1hUcjB2ZThaSG5Ub0ZJZzRlNytybmJHUEZYdURmNUg0YW4vRUNRegp1SEpQVm5kZTJvU0NzZ0I4a1JhWFNxZjBFcTZQMmMrYm83cS9TamkrK0JqSW1oY0NBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUVrcEkyRDZESE5YNVhtUVlRSkl0L3lmeTJIYlhRckN6ZGdFRnlJWFl1U2NTYkVxZGpTc3FFY0J4dHd0NFBMNwpyV3ovVzN6MnhBanp5bzE1N2VMaVd4RUo2SHZsT3FTNzFIZVd3WUM0RGQ3ZS85U2MwWGMyMEhOYk14bS9Sb213ClFUZ2lkeEY2UHhZMW9icjVNT0JXQ1VjTVFCNlM4Q3d0MzZvSTZkYXN4bHNzQytVZWlDdkxqZDV2YzZlbk9hRkwKWVh0WkZFd1JGUXg1bDRTSlhwTmRWZ1VUV0VSeU1XdlhHd0NWbkFwV1lvQlpVZ1B4TjdCTTkzbUdtWGdzZVBtUgpUSWxteHVQN3FCQ0s1RXRYT0NnL0FLa09jcktFaTJxNHB4b1JvVk5veXlCOXlRQVdzRlhLbHhYZmZxL1U5MWtkCmp0ZHM5NXZVV0g5VUpjZnBUTnV3NllRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
type: istio.io/key-and-cert
kind: Secret
apiVersion: v1

---
metadata:
  name: istio.istio-security-post-install-account
  namespace: istio-system
  annotations:
    istio.io/service-account.name: istio-security-post-install-account
  managedFields:
    - manager: istio_ca
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:26Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:cert-chain.pem': {}
          'f:key.pem': {}
          'f:root-cert.pem': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:istio.io/service-account.name': {}
        'f:type': {}
data:
  cert-chain.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lRRVloQ2ZEQ1RjRjF0dW5OYVMrOUdCREFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU5sb1hEVEl3TVRJdwpNVEF3TWpZeU5sb3dBRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFONUcyRHFsCmJoUitOWGl5YXVkaUZRNzFSdG5SUU1uQWdETUN3ZnlCSUcwNUx0M1FjOWR5NGdicVhoQ2tYM2NmcjNBeFBLNm0KUWt1WXpsbU1YSUhYREdMbDdvc1RLOWs3OXBSNmZYWm00d2lmZDhyZkJHZkZ3UFJRT3VWcDdiT0lzeDVoU3VuUApYN1pqd0RVaEE2d3I5L0lKaW5mRW5NaWNEY1YxUTRyczlDb3Izb05rUEpXYUJGa3VtSXgvNndZbUhHMlFZVDJHCkR2T04zQVBES1VISVRtVWp4aDlzM2gxSnNZTGxQTjRyemVwMW9UWFI0VVdHb1ZQeURuTy84UFBwN3NqbTFvQVkKQTgzckw3ZW9zMGNYUGRIRCtKckhOdGRtbTN6MXVXRWIzVjEvdFVIbDQwN0c1U0lMVDVHS2tpNmdITlZzSnNKawozd3RRVG9MZzI4cXZRY3NDQXdFQUFhT0JuVENCbWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd1d3WURWUjBSQVFIL0JGRXcKVDRaTmMzQnBabVpsT2k4dlkyeDFjM1JsY2k1c2IyTmhiQzl1Y3k5cGMzUnBieTF6ZVhOMFpXMHZjMkV2YVhOMAphVzh0YzJWamRYSnBkSGt0Y0c5emRDMXBibk4wWVd4c0xXRmpZMjkxYm5Rd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBR0FDdldoRVR1eGZxTDlpTU5GTk9qR21XL3RtS2NzSUtJQnYvQVdOQm5Gbnp0NUtGWjVyaXV2MDArN3IKM3hOUGZvR2tFU2tWOWR5Qk9meER4ZzRBVmhKS1BVVXFBbmFid0J5UWdyb09ZN3lPYitHWGdlK0dVUlJQNVEvRwphL0VtREtlTHVacWg2Yy9wUjZrWVc0YXhEMzZRSjMvcklTZkw0eXBvUWxxTzFvRkIydXlkSmpUK3JEK0R3bE1ICm4vY2pSMXFyTnNyR2FNNUNGVXd5UVZVNDU4U0p6MHVsNVczN1JKb2c5amdEb0dkb2dyeWV1allWeGRGa1BkczEKd29jQU54Q2NLY3pOOVhyL0ltQ1pWMFdzRWhuczB2TEtIdU9vYktGLytYRDlBQ0FGMHV4M0pzZHFUVlRzRSt2dwpWTEJGM2hhZ1A4SytUdDh3SXhOc2RSWTZMa0k9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key.pem: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM2tiWU9xVnVGSDQxZUxKcTUySVZEdlZHMmRGQXljQ0FNd0xCL0lFZ2JUa3UzZEJ6CjEzTGlCdXBlRUtSZmR4K3ZjREU4cnFaQ1M1ak9XWXhjZ2RjTVl1WHVpeE1yMlR2MmxIcDlkbWJqQ0o5M3l0OEUKWjhYQTlGQTY1V250czRpekhtRks2YzlmdG1QQU5TRURyQ3YzOGdtS2Q4U2N5SndOeFhWRGl1ejBLaXZlZzJROApsWm9FV1M2WWpIL3JCaVljYlpCaFBZWU84NDNjQThNcFFjaE9aU1BHSDJ6ZUhVbXhndVU4M2l2TjZuV2hOZEhoClJZYWhVL0lPYzcvdzgrbnV5T2JXZ0JnRHplc3Z0Nml6UnhjOTBjUDRtc2MyMTJhYmZQVzVZUnZkWFgrMVFlWGoKVHNibElndFBrWXFTTHFBYzFXd213bVRmQzFCT2d1RGJ5cTlCeXdJREFRQUJBb0lCQVFEWlp5bHVrd2VMKzdXSgpDOWtMM3g4QnRsMUtCaVQ4TDlBMEZHcHY4a3dwQ0ZrU2t5UDZnbDhZckhxOGhFanJWbzVkaVlyMHQ2RDRGOGtjClJQRGwvZFFibHhFdDdkNWhad2pTU013VjFxUVFkd2pQNERtSzFoelgyUEVDR2cxb0lEZ3hhcSsrNkJtUlp4ZEQKMzdxYjE1VjNvbVZRcDNsQnJZQzZ0T3NQSXB2ZDhaOU5CWmYrUUVtaXRCNDluNGhkZWdCWmRENzI2UGtSMkNzRQpNOEU4SXFNQU9mT2hSc2R2UG9nQ2txb0JReEQwaFRKMHB0VG1DYWwzMnIzY2UrQjZqMUNPQ2pzck1Vazc5MldECkNXOWtrTGdGdVBXZWNrbENHVnVKWTlmM1hnL0xUd0p6aitZZnVGVXZDam9XRU9razE1K2Q0WmFtTFRIM2E0T3MKZXNtNnMzWEJBb0dCQU9NcTFXcGcvaVppQmFVTG8xbTByWEpKaC9FK1ZzN3E2Tld1NlVjQXE2V1ZLb0V3QysvQQoyVmxSWGlpb2liYjBqWlJNYVB3TjZGT3lzbnN0MmdIbmZLbTJMaTlZNForMFo2TWdFS2l5Z2hpOGUxQ1pwUFAwClhsOHo5ejFRTkE1ejQ2Yy95Wi9nVG9KWVI0aHFJMFRjV3k5aERNbnJtRUZKWDNVMmdHWlRMeFBqQW9HQkFQcDkKR3U4akRSazhwUFl1SXNFSUdzR0wza3N0ZnhmczE5YUFMaW1SUGtZOEp5SmFLWUxHNzhPdlltSEkydGNUK3BYbwpBOGg5bkZzejNjMGJGQUIvNFJlbWt6d05BdmMxYzZIVVNZdlhxVTJSOHZnQ2doQ1VkTnYxN1NWejJNZHlYRmJZCkdrYVlta1B0UjVWZjRSbFF5K1lablE1ZTRCTEJuWXJvcXErZ1A0NzVBb0dBSGdENlR5S2didEZqalhrTUNqMGkKNjRWcXZ5Sk10T2V4K1FjeEtIK2VMRENYZkppcit1NnR4bTVJMFhYeE9vanlhalB0YWQwc1ltR24wVDB0SGpORQo4K1ZzRkRUWkdBN3I0VS9LNDMwd1ViUVRWWUgxbDRNZk05UFpRKy9qOEVTK1BNamdDSTNIME05NEl6eGhqQ2JPCnBHTmRIUTVRL2M2REhTZ2xyVjR2U2FFQ2dZQnoxdzl4c0NBS244VWFKRlBtT1QxR2JNeXNyNm1yQXRqK1ZlRUQKVUN3Z2h3a0NGZmhFaG9PelY1U0Q3RU5vVzlEektvMDFWd0hNRzd4amNqWloxTW5nQ2lUbERJOW1pODJoOVc3ZAp3U3FHdVF4SUxjREFzaWNvNGg1OXg0bGxFem9vMzErbmJrTkpUcDVnTWlzRGJoNGRsNUxPWm9ueG9xQ2M4T1NlCnU5a280UUtCZ1FEZWxFaE1YdUE4bHZ1cmVSYlhCNnQreFZMYVpVQXpLNlNoRGw2VmhlSnllNWdpSFV2bE9DT2wKRHZ1YjcyYTR0S3JLa2Z0WWg1UGJzbDBsSkx1S2drU3k0Y2NKcEhFbzdUL0JvbTlOT1JkNWxGK0ZVRHE3VjZmeQozVXFtQTJmNndZbHQ5Z0lxZis0YmJOclZ4VGwrNllvVUpjQjVZcUl0eUZJUlVaSk1hZUdIRmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  root-cert.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRQVdMTTRlb0RhRDlzR29icFNIVnRYVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU1sb1hEVE13TURnegpNVEF3TWpZeU1sb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNGtPSUJ4Zkd0cUNGa0ZadTRlSHNINFhYbEVKcFY4UTdjOG15NnoKcExIS2FJVXVQNnh0L0pUVGp3cHlUbXFPWW53TFpCdWV1aFAxY25VSXRsczZRSDl1djNVK0VvbU9EcUtWMUlWcApNYzZ4VFhBaUMrVHcrSkpoNVNZL2w0QVIxN29LWi9hTi9vVXNKVGdEUnJGNmtiRmk1OEhXZ0ZDbVVub095UGVjClBza3NTMDBpSU95VDZ5cHB1ZjhKTFZXVkgvQmpNbHgxWHcwNERkZDN5ZVBDMWNSb0NDTnNpQjZmZmRtNEZWL20KL1libU5vMEVwc2FMUG5VWWNXa0M2UFQ0U1hUcjB2ZThaSG5Ub0ZJZzRlNytybmJHUEZYdURmNUg0YW4vRUNRegp1SEpQVm5kZTJvU0NzZ0I4a1JhWFNxZjBFcTZQMmMrYm83cS9TamkrK0JqSW1oY0NBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUVrcEkyRDZESE5YNVhtUVlRSkl0L3lmeTJIYlhRckN6ZGdFRnlJWFl1U2NTYkVxZGpTc3FFY0J4dHd0NFBMNwpyV3ovVzN6MnhBanp5bzE1N2VMaVd4RUo2SHZsT3FTNzFIZVd3WUM0RGQ3ZS85U2MwWGMyMEhOYk14bS9Sb213ClFUZ2lkeEY2UHhZMW9icjVNT0JXQ1VjTVFCNlM4Q3d0MzZvSTZkYXN4bHNzQytVZWlDdkxqZDV2YzZlbk9hRkwKWVh0WkZFd1JGUXg1bDRTSlhwTmRWZ1VUV0VSeU1XdlhHd0NWbkFwV1lvQlpVZ1B4TjdCTTkzbUdtWGdzZVBtUgpUSWxteHVQN3FCQ0s1RXRYT0NnL0FLa09jcktFaTJxNHB4b1JvVk5veXlCOXlRQVdzRlhLbHhYZmZxL1U5MWtkCmp0ZHM5NXZVV0g5VUpjZnBUTnV3NllRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
type: istio.io/key-and-cert
kind: Secret
apiVersion: v1

---
metadata:
  name: istio.istio-sidecar-injector-service-account
  namespace: istio-system
  annotations:
    istio.io/service-account.name: istio-sidecar-injector-service-account
  managedFields:
    - manager: istio_ca
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:27Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:cert-chain.pem': {}
          'f:key.pem': {}
          'f:root-cert.pem': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:istio.io/service-account.name': {}
        'f:type': {}
data:
  cert-chain.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsRENDQW55Z0F3SUJBZ0lRRXUvRHRDaTdGUnZNMExmY3BFcDIrekFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU4xb1hEVEl3TVRJdwpNVEF3TWpZeU4xb3dBRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMWUxSRmVSCmZoT20rRVZjQVlKamZXL2NoZkRIMDlUYjh1bklOSThwaGxsVytXZUV0SnkrWFpYcWVVcWJ2ekRJL3ZBWWZBclgKZlJiQjhpVk4rLzBnTVE3WS9sQlNDaVZ2KzRYOENaU0hRWWJqQmN1SU1qaXk5OUx2SmxsdTNvRUc3QUEwR0Z6dQpWYStEMzdxOVpWOGltNTdweVhkS2ZEMmxJdyt1enU3RWIxdHlJa1E4TjE4c29JZHUwWHdxaDE0RXRTL2h5bjdGClZ6SVJLVUtZUXVRWjRoVnBJUDhjOFBxMVpHZ2FDdEh2R1pTVzJIV2JHdnBDWDViRGE4NDdPdXJJKzN0RVErTGgKU0pObXVzV0tJWEJnVmlVbE55RzlXYVdGVWZwZDRLUElNTlR1cEo4RFpiUkZYSEJDbnJwM3UxM3cvZU4rWDhsRQpucWFMYmdMN05Fb2RqbHNDQXdFQUFhT0I4VENCN2pBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd2dhNEdBMVVkRVFFQi93U0IKb3pDQm9JWlFjM0JwWm1abE9pOHZZMngxYzNSbGNpNXNiMk5oYkM5dWN5OXBjM1JwYnkxemVYTjBaVzB2YzJFdgphWE4wYVc4dGMybGtaV05oY2kxcGJtcGxZM1J2Y2kxelpYSjJhV05sTFdGalkyOTFiblNDSjJsemRHbHZMWE5wClpHVmpZWEl0YVc1cVpXTjBiM0l1YVhOMGFXOHRjM2x6ZEdWdExuTjJZNElqYVhOMGFXOHRjMmxrWldOaGNpMXAKYm1wbFkzUnZjaTVwYzNScGJ5MXplWE4wWlcwd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMQ092dC9CQVJUNgpXM0QrSU14MkNqRGVQUGhWVmgrZHJYQlVXbktSWWhMV3Z5K3d4Z2NpUHQvaG52eloraXJIMnV6Q1I5UlRRZ2FZCjFKN1VwTWtVZk00ZHJIS1hvaW4zeXMvZmZHd3FqbW5hdE5uKzZ1QTJQb1IvVk5LRnNxTUNVYWgzY29wU1dLLysKUjJWRXNQRm00SVZYYWJrV25IVUpjOCtmZ1ZLRnc0Nm9mSW9rZ3NLZFpTQ2Q4ZGZpOEJDcHFUTDRLRkR6aFV0cwpuMnU0cmYvL1hKQjg4YjdlOFA1NUVlK09lT0YrRTN1NTQ4bGprSklzQTN3U2d3VFhmbVg4azAwRXNFR1VDY1ZSCjRPeDZFU2dwZzNSUEFXL1ArcnZhSG52T1dOcXlJQ3VnajRtRFZnQWVJVHBjWURibjdEdkgvT2E4blFuZkUyc0IKQ3NnL2FENC8rUjg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key.pem: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdGd0RVY1RitFNmI0UlZ3QmdtTjliOXlGOE1mVDFOdnk2Y2cwanltR1dWYjVaNFMwCm5MNWRsZXA1U3B1L01Nais4Qmg4Q3RkOUZzSHlKVTM3L1NBeER0aitVRklLSlcvN2hmd0psSWRCaHVNRnk0Z3kKT0xMMzB1OG1XVzdlZ1Fic0FEUVlYTzVWcjRQZnVyMWxYeUtibnVuSmQwcDhQYVVqRDY3TzdzUnZXM0lpUkR3MwpYeXlnaDI3UmZDcUhYZ1MxTCtIS2ZzVlhNaEVwUXBoQzVCbmlGV2tnL3h6dytyVmthQm9LMGU4WmxKYllkWnNhCitrSmZsc05yempzNjZzajdlMFJENHVGSWsyYTZ4WW9oY0dCV0pTVTNJYjFacFlWUitsM2dvOGd3MU82a253TmwKdEVWY2NFS2V1bmU3WGZEOTQzNWZ5VVNlcG90dUF2czBTaDJPV3dJREFRQUJBb0lCQURDTlNybnNOT3I2NGtabApab1duRVVKdlYwM0RqZXk4aU1udk9vMWdMdFBQRFkrZFppcFQzMVBuaUZmc3VBNUQzVEtkNVI5akg1cWRPWDdYCmtMaVBDR2FFV3plQzJlL29NUFlvSlVuMjFQUXJ3bFRwU3pPeUQ4U3pRZEFpY0xlSzZCQ1oxRkdjd3orZmRXRXgKdUVLcVVVVU41MHlva2dCQzlkbnQ3b1RoNFMxTERVN2JWVkkraEFPSFhjV3hpK1hIWTczTVhPOWN6MXEzMU5EbQpvemw0R1pTWkw5eVg4OHYvcHE1WWlCWnViUkdaT2UzWlhDVThKR2MxNFkvYnU5Y2p6RmtwZzlhT1hvSXU0bSthClN6Sy9Way9IWktnbjhnN1JEY2hSWGVjUWJJWXJKaE5DSnJpUForOGVOdGNPdmVBSEFwNUwwQnhFdHBaam9aVk0KN0pHMThta0NnWUVBMlR6R1JhK1huSHdSL2JvMFJUVVozUTNnSThGQWtqbHJnWEl1MHV2WkRkYVQ1bDA3YXlybwoxZ0lEaDBENUFUQ3JJdThoSlVwQkl0NWZBVG1nd1RQTmx6SG8vdHR3Qlh6NVFQdXZlOEFwSUNqRDhlVmdTZEhyCmJqU2xweWNQVUJ6OXN1V092VzdJL1JNVTJVSXJyeFpiM2wxUTlWVjFNTmgwcTlwczcvdjEyWFVDZ1lFQTFvYmoKTCtUcy9jM3lIR2JVTms1c0JBS0xoUGhtWGtBSG1lTzVObzRtM0ZsanliTDV5U0JKcDFkWnpuOFpvbGVPR1F0MQpqU0oxMDJqSlNhVW1ORC84d3VhM2UxWUFWdDNRaE1CV2lybGtGZmU2RUV2c2JnaTRtQXZibXo1eEphSjF4LzNaCmtjNzNwRk16M1dJU0Fac2dOVWlvUXdKVm9qamJLZVhvaUc0TC9vOENnWUFiK1JaeTdMeHlHd3ZhQnpzcDJqK2QKVm1jUlU1WXovZzdZMlZJc09OQjNWclV1eWJ5WC9TdUVPemduRjNlNDdvSnEraTNqZGw5UzFSMllzOG4rZHVRMwpYdWJvd21yM1dmTmlxY1ljQWsrSlk1WnZ0S0NrZ05KM0czSmxSc05UQnBpb2k2VEl3ZFpCdUU1TDk1aFdjR09lCkM1Z2NMMGZxNVVTSXlKU1VoblpPN1FLQmdIM2dvamc5Tk01c1pLOURxeXUrY21VYjlTL3Q3V3RLV090MGt2NHYKQlNCd2x6d0g5OGVMV1l5R2xkeXorWituam1xbHJiRkYwaXRkcGhhL2dCNVNtWWJuaUN3bnQ0VkJISlI0bzQ4OAozenlBb3IzalB2VUZ5d0wwbWtTS3JDdXdHenBoZXFPeTlONklMN3VzU3ZLRVNxN1pWbG9UYVpvSmtKZ1NIcExICk4rU0RBb0dCQUlsMVBKN2FYWXBhRzVMUGd5RkcwYjNwcHpHUGVSRXUyZ0Vra3ZOWGFSYzg1SnRnMVcraG5WdEoKTytYYzVvZTdtWkphclIzU1FreGtyWTA4SVRQNUVRa1Zmc3dySlZaQTJqd25UcXZ4ak9wSExsOHVNVlFtMjNCUwptUlhuSlVwdmhQV3VhcmdzOFdkR0x0Y1hLTXE0M1hCN3ZUaHQrZUZlQXl6YXdYdmV6UkZWCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  root-cert.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRQVdMTTRlb0RhRDlzR29icFNIVnRYVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU1sb1hEVE13TURnegpNVEF3TWpZeU1sb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNGtPSUJ4Zkd0cUNGa0ZadTRlSHNINFhYbEVKcFY4UTdjOG15NnoKcExIS2FJVXVQNnh0L0pUVGp3cHlUbXFPWW53TFpCdWV1aFAxY25VSXRsczZRSDl1djNVK0VvbU9EcUtWMUlWcApNYzZ4VFhBaUMrVHcrSkpoNVNZL2w0QVIxN29LWi9hTi9vVXNKVGdEUnJGNmtiRmk1OEhXZ0ZDbVVub095UGVjClBza3NTMDBpSU95VDZ5cHB1ZjhKTFZXVkgvQmpNbHgxWHcwNERkZDN5ZVBDMWNSb0NDTnNpQjZmZmRtNEZWL20KL1libU5vMEVwc2FMUG5VWWNXa0M2UFQ0U1hUcjB2ZThaSG5Ub0ZJZzRlNytybmJHUEZYdURmNUg0YW4vRUNRegp1SEpQVm5kZTJvU0NzZ0I4a1JhWFNxZjBFcTZQMmMrYm83cS9TamkrK0JqSW1oY0NBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUVrcEkyRDZESE5YNVhtUVlRSkl0L3lmeTJIYlhRckN6ZGdFRnlJWFl1U2NTYkVxZGpTc3FFY0J4dHd0NFBMNwpyV3ovVzN6MnhBanp5bzE1N2VMaVd4RUo2SHZsT3FTNzFIZVd3WUM0RGQ3ZS85U2MwWGMyMEhOYk14bS9Sb213ClFUZ2lkeEY2UHhZMW9icjVNT0JXQ1VjTVFCNlM4Q3d0MzZvSTZkYXN4bHNzQytVZWlDdkxqZDV2YzZlbk9hRkwKWVh0WkZFd1JGUXg1bDRTSlhwTmRWZ1VUV0VSeU1XdlhHd0NWbkFwV1lvQlpVZ1B4TjdCTTkzbUdtWGdzZVBtUgpUSWxteHVQN3FCQ0s1RXRYT0NnL0FLa09jcktFaTJxNHB4b1JvVk5veXlCOXlRQVdzRlhLbHhYZmZxL1U5MWtkCmp0ZHM5NXZVV0g5VUpjZnBUTnV3NllRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
type: istio.io/key-and-cert
kind: Secret
apiVersion: v1

---
metadata:
  name: istio.prometheus
  namespace: istio-system
  annotations:
    istio.io/service-account.name: prometheus
  managedFields:
    - manager: istio_ca
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:34Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:cert-chain.pem': {}
          'f:key.pem': {}
          'f:root-cert.pem': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:istio.io/service-account.name': {}
        'f:type': {}
data:
  cert-chain.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRZms4TUE0aldaMGZQWmFUQ01jb282akFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZek5Gb1hEVEl3TVRJdwpNVEF3TWpZek5Gb3dBRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOSXZoUlZUCnNhbkZzS3ZKUkFIVE45K0hNQnBCMFBqcjRySmVMYnc3YjhEQmxLT1VxTDhhYUd3amlQelRTWnpUQ0wrQUhkSkEKd0gzYThsWnNGK3VWaSt6bnFQYkRoZ2h2b3FqOTRBTEx6SytrSXcrOHpKU1Q4ZHNzeGl6ZjFYUkNrYjd5Mnl1bAoxczEvVlU3Ti9DWTZ6eHA0V1BjL2syS0tPbDRlKzVDV3lBSVVjV0laU2pYeXl6T3NTUmg1OGU2MnQzOUpKa3JmCnV1T1lKRHlBd1ppSXNuYkhJZlBzUU9hMHQzTHllc0ZGK2RxaUc2aWh6ekowc2pIazZGV2lic2tmWDRMQktkMzUKNzQ3OGJOekI2QkZvV2dwMzhnd0prYzhZc0M5dVJPUGYvMVVaeFJPbXh0STd3TWI1UDFxRUpQYWwzMnJpMmxuOAptWVlIdXFJU3pWazhVajhDQXdFQUFhT0JoRENCZ1RBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd1FnWURWUjBSQVFIL0JEZ3cKTm9ZMGMzQnBabVpsT2k4dlkyeDFjM1JsY2k1c2IyTmhiQzl1Y3k5cGMzUnBieTF6ZVhOMFpXMHZjMkV2Y0hKdgpiV1YwYUdWMWN6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFlSWo1M1B0KzVKaEpMS2NHYXZyS0t4VVJ3anAzCmorK3A5cnpYNnBqMmJycXQreU1jS21sL0Vyd1JYRWhNcHZSSFZmOS9HNysyQi9aRWRHMExhUnlLZVJWOG9WeVcKL1luRUluUG9MSkp1R3JOVXhnREtRZ0ExaHlGWGJJSElIS1BqaDlvQ0IrbFVKSEVaR3luMFZjSEs0aWk2dXNHcQpaWHhoeDZaajNEMmlkOVJrMTFTYys1dndHbS9VRmRoUnVaM2Q2RmhYU0F3OFRwOXRCU2YxU3hiNk5JRmg2SUdNCnBaTUdFZ2lmbDUwcE1BNE15SGh6MU5hNXlSdVFmY0ZGL1NFR2grZ2E1UnNtQ2hxRDdVRG4xTHRkWExvT2txSTgKMEd2R1prSDU3KzlDUnJWam1hL0Z2RWJaeThnaVlRdGVxM1ZHaSt4S1ZYT0pxK0U3Q3F6ZWJUVFlXZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key.pem: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMGkrRkZWT3hxY1d3cThsRUFkTTMzNGN3R2tIUStPdmlzbDR0dkR0dndNR1VvNVNvCnZ4cG9iQ09JL05OSm5OTUl2NEFkMGtEQWZkcnlWbXdYNjVXTDdPZW85c09HQ0craXFQM2dBc3ZNcjZRakQ3ek0KbEpQeDJ5ekdMTi9WZEVLUnZ2TGJLNlhXelg5VlRzMzhKanJQR25oWTl6K1RZb282WGg3N2tKYklBaFJ4WWhsSwpOZkxMTTZ4SkdIbng3cmEzZjBrbVN0KzY0NWdrUElEQm1JaXlkc2NoOCt4QTVyUzNjdko2d1VYNTJxSWJxS0hQCk1uU3lNZVRvVmFKdXlSOWZnc0VwM2Zudmp2eHMzTUhvRVdoYUNuZnlEQW1Senhpd0wyNUU0OS8vVlJuRkU2YkcKMGp2QXh2ay9Xb1FrOXFYZmF1TGFXZnlaaGdlNm9oTE5XVHhTUHdJREFRQUJBb0lCQVFDVmVMRzl2dTBqZkxEdApHWTVCZGdIUDlvV2d4cGxqeSt4RlNIQmg0aXJRKzFsSEUxc0Z2RFB5WXpyeUFSZmliTGxWNWpoTzR6bUF4d2w3CnFCZENzL0QwSXJLbitkZ0JlOUpETjNmc3hSM2s4bWIwdENFUXNEMVl6bmlJUlEyNVJmWDd3eDFWNXZQZzQrSzQKemdlNDhDMkQ5MzNkSnRzYlFvM0xqV0Q5TEIxRVRCWWZ0VGRkV2hiZ3dKb1k3NDJiL0xUaE56cWMxdXcwL01uNAp2ajUxSFFOamJJN29lWkVUNGRDWlJyUHNwTUt3Rm83cVF0eE9uemlRdlF5eHhJRVlMc3dHZ2JWZVVxQzkxVW84CnJONHNuL2Zaa3QreW1NVmNoMmw2MUZHUCs3R3MrVS9GRHVFWG1aWEd5NDNlaitGQS9CMGRzclRnaSt0aUZjQ2IKMllLVDRNbHhBb0dCQU5PdlFnS1ZWWkZUTDN1Q2Z4VDN3dzNBMXZwNHJqTHBDay94eDBVNXd0VUozbE5ZNnRVaQpKOEhsZURYV05ZUEozTFUxSUlsM3BUaGRPNmwvelJsRCtSVE1HMXRsV09Pd3dkU2s0WVE1WHBqY3pkeDVrZHhmCkJJcTZrWCs5WlFlNVZOMWdCNlRXT2ZBR09ReUhjTmNGdWRadHlVeGxUU2J0cldjWUxJZERkb0FUQW9HQkFQNHYKN1lmc2M1YkhSelhKc1F3UzYzRGtyOGVzeWlrdSs3eHNLZk52MWkwTUpjYWltdVRQdFFzY2tnQ3pWMHo4TzJHWApUREtCOEtWdTV4Q3VDVmkvQXd4dHBpdDBQdTFZNVNpSnFMaURlQ1c3ckRWZzhRTmYwTXI2RTRKL2xCcTU0dlU1CkdDd25qOHhWcDU2dWU3OGlFMWRuM0NRb0VuWlVpdlRNMHVTRGFlS2xBb0dCQUxaQ1lMaHVzWVQxdFoxSEozbjcKTlRNalJUWFZNRTlmUE9UR1RJZDdDeGg0YmJjZmlObkhsYW1wbEkzdUNKZVc5M1FCOFNqTEhqTmdldDBlejQyZwphOWFQUWtLNENRZktDYW0zNlAvNmtVdFdXZDBwd3YrVnhBaGFTS3BPZksxZzBnUGxDYy9RTDRSTkoxTjFUaCtrCnEzUkhoSmxGWTE5UUp3dnIwWE1KRC8rSEFvR0FlcEMvdDJmamdKUE1tWG9NbmViTmtsMGpDV1FmQXVhOXllaFoKL2lFeUkveVVob2hIcWdjaHBCNzlvOHJXVUsvYkxqNlhKaytUcXlHajExNGo4YUFCSjFBRDdUWWJWYlVrb254bQpWN3BGQitUTHI5MXp1WTNORHVLdzM1OEcyakJCNkw3RUVoNXRiempxSDFEQktMT1VvZlBacWJHTTNYUDhvUGZXCnhRczgxbVVDZ1lBaU1yVEQ0QVEvNmc0ZjAydHlROTlnamJra0tHSjlDVmM5ZUMwT2hnVmM4ZTFHcHZiM0tCbkQKOGM0R1lKWVRTaGVCd0lLT3BadGc1STlIOGttWXpUM2d1NVZMOXFZazl1N0xoRnVkLzB5QVJFN0I0d0hra2FuNApGWjdGOHY0bkdoR0lrZXpXRm84V1F0M1EvUHVBWjgxSk1jZ2Mwd1ovcDZZdlN0RnZ6SEpsQlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  root-cert.pem: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzVENDQWNXZ0F3SUJBZ0lRQVdMTTRlb0RhRDlzR29icFNIVnRYVEFOQmdrcWhraUc5dzBCQVFzRkFEQVkKTVJZd0ZBWURWUVFLRXcxamJIVnpkR1Z5TG14dlkyRnNNQjRYRFRJd01Ea3dNakF3TWpZeU1sb1hEVE13TURnegpNVEF3TWpZeU1sb3dHREVXTUJRR0ExVUVDaE1OWTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNGtPSUJ4Zkd0cUNGa0ZadTRlSHNINFhYbEVKcFY4UTdjOG15NnoKcExIS2FJVXVQNnh0L0pUVGp3cHlUbXFPWW53TFpCdWV1aFAxY25VSXRsczZRSDl1djNVK0VvbU9EcUtWMUlWcApNYzZ4VFhBaUMrVHcrSkpoNVNZL2w0QVIxN29LWi9hTi9vVXNKVGdEUnJGNmtiRmk1OEhXZ0ZDbVVub095UGVjClBza3NTMDBpSU95VDZ5cHB1ZjhKTFZXVkgvQmpNbHgxWHcwNERkZDN5ZVBDMWNSb0NDTnNpQjZmZmRtNEZWL20KL1libU5vMEVwc2FMUG5VWWNXa0M2UFQ0U1hUcjB2ZThaSG5Ub0ZJZzRlNytybmJHUEZYdURmNUg0YW4vRUNRegp1SEpQVm5kZTJvU0NzZ0I4a1JhWFNxZjBFcTZQMmMrYm83cS9TamkrK0JqSW1oY0NBd0VBQWFNak1DRXdEZ1lEClZSMFBBUUgvQkFRREFnSUVNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUVrcEkyRDZESE5YNVhtUVlRSkl0L3lmeTJIYlhRckN6ZGdFRnlJWFl1U2NTYkVxZGpTc3FFY0J4dHd0NFBMNwpyV3ovVzN6MnhBanp5bzE1N2VMaVd4RUo2SHZsT3FTNzFIZVd3WUM0RGQ3ZS85U2MwWGMyMEhOYk14bS9Sb213ClFUZ2lkeEY2UHhZMW9icjVNT0JXQ1VjTVFCNlM4Q3d0MzZvSTZkYXN4bHNzQytVZWlDdkxqZDV2YzZlbk9hRkwKWVh0WkZFd1JGUXg1bDRTSlhwTmRWZ1VUV0VSeU1XdlhHd0NWbkFwV1lvQlpVZ1B4TjdCTTkzbUdtWGdzZVBtUgpUSWxteHVQN3FCQ0s1RXRYT0NnL0FLa09jcktFaTJxNHB4b1JvVk5veXlCOXlRQVdzRlhLbHhYZmZxL1U5MWtkCmp0ZHM5NXZVV0g5VUpjZnBUTnV3NllRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
type: istio.io/key-and-cert
kind: Secret
apiVersion: v1

---
metadata:
  name: prometheus-token-9sgrp
  namespace: istio-system
  annotations:
    kubernetes.io/service-account.name: prometheus
    kubernetes.io/service-account.uid: abeea4f4-5f63-476b-9e87-45a78ee4ffc7
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2020-09-02T00:26:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:ca.crt': {}
          'f:namespace': {}
          'f:token': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubernetes.io/service-account.name': {}
            'f:kubernetes.io/service-account.uid': {}
        'f:type': {}
data:
  ca.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EZ3hPREF6TVRZek5sb1hEVE13TURneE5qQXpNVFl6Tmxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTURqCi9idld2NHl3cEZwazErT0ZTVFhmNE9wSUoxNXdhNVZuSURYN2x4MHlqdjJlcll3aUVVZ0gwWDdCSlh3TTlpNG4KeVphSHNtcnY0RGRkekNxS25jSlZBanRQTk9kemNOd1IxS0twY2JaNzNWODdZeDNNSVZaZi9vU0tLdDcvLzNwSwp1dWxmWGtabU5KRktYQW96QTNyZjg5bWtpZVpRRlgwN0V1K2VSNDdweGkzMTNkTnJQT0xXSlhVd1VhVDhKT2YrCi9DWDZxOW1vQ01CVnR5eUY2UkxoaGp0VG9wdnZrSWlveXNTbTByNkNiejBYc0RwUlBkZUtHWXU0WjVYSlVrcFgKZ3FNUDh4RktsLzJhWERLeng4ZGdjckk5V0h3UXR3MmtXK3ZGSHN0RnRwdG1OdFExN01jaGJERHJDd00rcFhVeAovbFE2RWE4ZkIxckM4c09WR1U4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGeVI0eTgzTHNtcjl4a1Uwd2lUc0gzdXRvbisKYzJGeXMyZy9jNXRwUUxXSDZUZFczZ01OWjhMTk5BNDgzdkE1NEFZeG1jbWJzeklCYnhwekVZRE1kT0FQSFRqagowaUpZei9Ra0ZveThuSFFUNk9Yd0xjQk9iRmJnQktNdlRQRGNFNjZ0YWNMdUYrWXMxVFRqYmJRc1RqNytUaUVGCkN1WnJzam44U1l3czRaMlJ6bE9na3prem9FdHZCY3hwZXhDQUNkZ2ZyR3dBd3ZNVTQyS2hxeXg4bHptQm1HMWIKZ3R4MUNQQW12TjUxd05UUjVvL1JMWURQb2Nhc1dPMU9tT0lLQmplKzhHTGFNMnFqcmkyb3p6YTNoMERnekF5OQpQL0h0dGNuZ042WlZCcTYyU2gyR3hZOGxaL2Zod0N6R2w3TDlzWkk5TDdBUG81bnZRVHF2TlBEbUVnMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  namespace: aXN0aW8tc3lzdGVt
  token: >-
    ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpMTRTelJ0UkhoR2RVTXlkbHBFYlZGRldWOXNVMDB4Y0RKVlRXc3liSGR5ZVdndFpscE1aM2hqY1VFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpwYzNScGJ5MXplWE4wWlcwaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaWNISnZiV1YwYUdWMWN5MTBiMnRsYmkwNWMyZHljQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG01aGJXVWlPaUp3Y205dFpYUm9aWFZ6SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pWVdKbFpXRTBaalF0TldZMk15MDBOelppTFRsbE9EY3RORFZoTnpobFpUUm1abU0zSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tbHpkR2x2TFhONWMzUmxiVHB3Y205dFpYUm9aWFZ6SW4wLlRPc0JUbTlwSXE3aUNCVERWX3RlX1VZTnJiOUxxZHQ0WDRNWHExSUFmeWNtcDRTZWh3bklwTWFoZHVSa1hyMENMU203bDJnZzJOSEFJdXotYW16cTdLQWgwSlBZalpKOFhBcy1SdkVVTGRleXo2UlhIWGxULTN5Wkt6cGxqaVh6Ml9paDFmd0xqN2NRaThENTZHc2tvSWg4VTF4Q1dJbFcxb3FHWk1yWUpMTkRGYmFCLXlxZVVLYkVNTDlwY0pPbXNaMW9LbmJGMXBGR0dKM3F3WTI5R1NIZVlJMnFXd1JPYWVPODNyR0VNd1JOVjBWc1VXNEc3X0dYTkhFcXhsSHkwekstTWotNko2SEdsZk5KZWNtakd0emswSThFSmgtd3lfRVFoUlVRZk9hSXFXS0djUFlmZlkwZXpvWmhSMmo1bDBuRE5taU9fVTR2WXk4cVVsSG1PUQ==
type: kubernetes.io/service-account-token
kind: Secret
apiVersion: v1

---
metadata:
  name: qingcloud
  namespace: istio-system
  annotations: {}
  managedFields:
    - manager: kubectl
      operation: Update
      apiVersion: v1
      time: '2020-09-01T17:27:45Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:.dockerconfigjson': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
        'f:type': {}
data:
  .dockerconfigjson: >-
    eyJhdXRocyI6eyJkb2NrZXJodWIucWluZ2Nsb3VkLmNvbSI6eyJhdXRoIjoiWjNWbGMzUTZaM1ZsYzNRPSJ9fX0=
type: kubernetes.io/dockerconfigjson
kind: Secret
apiVersion: v1

